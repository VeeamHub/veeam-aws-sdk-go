/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RegionsFilters struct for RegionsFilters
type RegionsFilters struct {
	SearchPattern *string `json:"SearchPattern,omitempty"`
	Offset *int32 `json:"Offset,omitempty"`
	Limit *int32 `json:"Limit,omitempty"`
	Sort *[]RegionsSortColumns `json:"Sort,omitempty"`
}

// NewRegionsFilters instantiates a new RegionsFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionsFilters() *RegionsFilters {
	this := RegionsFilters{}
	return &this
}

// NewRegionsFiltersWithDefaults instantiates a new RegionsFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionsFiltersWithDefaults() *RegionsFilters {
	this := RegionsFilters{}
	return &this
}

// GetSearchPattern returns the SearchPattern field value if set, zero value otherwise.
func (o *RegionsFilters) GetSearchPattern() string {
	if o == nil || o.SearchPattern == nil {
		var ret string
		return ret
	}
	return *o.SearchPattern
}

// GetSearchPatternOk returns a tuple with the SearchPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsFilters) GetSearchPatternOk() (*string, bool) {
	if o == nil || o.SearchPattern == nil {
		return nil, false
	}
	return o.SearchPattern, true
}

// HasSearchPattern returns a boolean if a field has been set.
func (o *RegionsFilters) HasSearchPattern() bool {
	if o != nil && o.SearchPattern != nil {
		return true
	}

	return false
}

// SetSearchPattern gets a reference to the given string and assigns it to the SearchPattern field.
func (o *RegionsFilters) SetSearchPattern(v string) {
	o.SearchPattern = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *RegionsFilters) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsFilters) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *RegionsFilters) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *RegionsFilters) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *RegionsFilters) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsFilters) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *RegionsFilters) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *RegionsFilters) SetLimit(v int32) {
	o.Limit = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *RegionsFilters) GetSort() []RegionsSortColumns {
	if o == nil || o.Sort == nil {
		var ret []RegionsSortColumns
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionsFilters) GetSortOk() (*[]RegionsSortColumns, bool) {
	if o == nil || o.Sort == nil {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *RegionsFilters) HasSort() bool {
	if o != nil && o.Sort != nil {
		return true
	}

	return false
}

// SetSort gets a reference to the given []RegionsSortColumns and assigns it to the Sort field.
func (o *RegionsFilters) SetSort(v []RegionsSortColumns) {
	o.Sort = &v
}

func (o RegionsFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SearchPattern != nil {
		toSerialize["SearchPattern"] = o.SearchPattern
	}
	if o.Offset != nil {
		toSerialize["Offset"] = o.Offset
	}
	if o.Limit != nil {
		toSerialize["Limit"] = o.Limit
	}
	if o.Sort != nil {
		toSerialize["Sort"] = o.Sort
	}
	return json.Marshal(toSerialize)
}

type NullableRegionsFilters struct {
	value *RegionsFilters
	isSet bool
}

func (v NullableRegionsFilters) Get() *RegionsFilters {
	return v.value
}

func (v *NullableRegionsFilters) Set(val *RegionsFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionsFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionsFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionsFilters(val *RegionsFilters) *NullableRegionsFilters {
	return &NullableRegionsFilters{value: val, isSet: true}
}

func (v NullableRegionsFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionsFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicyNotificationSettings struct for PolicyNotificationSettings
type PolicyNotificationSettings struct {
	Recipient *string `json:"recipient,omitempty"`
	NotifyOnSuccess *bool `json:"notifyOnSuccess,omitempty"`
	NotifyOnWarning *bool `json:"notifyOnWarning,omitempty"`
	NotifyOnFailure *bool `json:"notifyOnFailure,omitempty"`
}

// NewPolicyNotificationSettings instantiates a new PolicyNotificationSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyNotificationSettings() *PolicyNotificationSettings {
	this := PolicyNotificationSettings{}
	return &this
}

// NewPolicyNotificationSettingsWithDefaults instantiates a new PolicyNotificationSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyNotificationSettingsWithDefaults() *PolicyNotificationSettings {
	this := PolicyNotificationSettings{}
	return &this
}

// GetRecipient returns the Recipient field value if set, zero value otherwise.
func (o *PolicyNotificationSettings) GetRecipient() string {
	if o == nil || o.Recipient == nil {
		var ret string
		return ret
	}
	return *o.Recipient
}

// GetRecipientOk returns a tuple with the Recipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyNotificationSettings) GetRecipientOk() (*string, bool) {
	if o == nil || o.Recipient == nil {
		return nil, false
	}
	return o.Recipient, true
}

// HasRecipient returns a boolean if a field has been set.
func (o *PolicyNotificationSettings) HasRecipient() bool {
	if o != nil && o.Recipient != nil {
		return true
	}

	return false
}

// SetRecipient gets a reference to the given string and assigns it to the Recipient field.
func (o *PolicyNotificationSettings) SetRecipient(v string) {
	o.Recipient = &v
}

// GetNotifyOnSuccess returns the NotifyOnSuccess field value if set, zero value otherwise.
func (o *PolicyNotificationSettings) GetNotifyOnSuccess() bool {
	if o == nil || o.NotifyOnSuccess == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnSuccess
}

// GetNotifyOnSuccessOk returns a tuple with the NotifyOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyNotificationSettings) GetNotifyOnSuccessOk() (*bool, bool) {
	if o == nil || o.NotifyOnSuccess == nil {
		return nil, false
	}
	return o.NotifyOnSuccess, true
}

// HasNotifyOnSuccess returns a boolean if a field has been set.
func (o *PolicyNotificationSettings) HasNotifyOnSuccess() bool {
	if o != nil && o.NotifyOnSuccess != nil {
		return true
	}

	return false
}

// SetNotifyOnSuccess gets a reference to the given bool and assigns it to the NotifyOnSuccess field.
func (o *PolicyNotificationSettings) SetNotifyOnSuccess(v bool) {
	o.NotifyOnSuccess = &v
}

// GetNotifyOnWarning returns the NotifyOnWarning field value if set, zero value otherwise.
func (o *PolicyNotificationSettings) GetNotifyOnWarning() bool {
	if o == nil || o.NotifyOnWarning == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnWarning
}

// GetNotifyOnWarningOk returns a tuple with the NotifyOnWarning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyNotificationSettings) GetNotifyOnWarningOk() (*bool, bool) {
	if o == nil || o.NotifyOnWarning == nil {
		return nil, false
	}
	return o.NotifyOnWarning, true
}

// HasNotifyOnWarning returns a boolean if a field has been set.
func (o *PolicyNotificationSettings) HasNotifyOnWarning() bool {
	if o != nil && o.NotifyOnWarning != nil {
		return true
	}

	return false
}

// SetNotifyOnWarning gets a reference to the given bool and assigns it to the NotifyOnWarning field.
func (o *PolicyNotificationSettings) SetNotifyOnWarning(v bool) {
	o.NotifyOnWarning = &v
}

// GetNotifyOnFailure returns the NotifyOnFailure field value if set, zero value otherwise.
func (o *PolicyNotificationSettings) GetNotifyOnFailure() bool {
	if o == nil || o.NotifyOnFailure == nil {
		var ret bool
		return ret
	}
	return *o.NotifyOnFailure
}

// GetNotifyOnFailureOk returns a tuple with the NotifyOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyNotificationSettings) GetNotifyOnFailureOk() (*bool, bool) {
	if o == nil || o.NotifyOnFailure == nil {
		return nil, false
	}
	return o.NotifyOnFailure, true
}

// HasNotifyOnFailure returns a boolean if a field has been set.
func (o *PolicyNotificationSettings) HasNotifyOnFailure() bool {
	if o != nil && o.NotifyOnFailure != nil {
		return true
	}

	return false
}

// SetNotifyOnFailure gets a reference to the given bool and assigns it to the NotifyOnFailure field.
func (o *PolicyNotificationSettings) SetNotifyOnFailure(v bool) {
	o.NotifyOnFailure = &v
}

func (o PolicyNotificationSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Recipient != nil {
		toSerialize["recipient"] = o.Recipient
	}
	if o.NotifyOnSuccess != nil {
		toSerialize["notifyOnSuccess"] = o.NotifyOnSuccess
	}
	if o.NotifyOnWarning != nil {
		toSerialize["notifyOnWarning"] = o.NotifyOnWarning
	}
	if o.NotifyOnFailure != nil {
		toSerialize["notifyOnFailure"] = o.NotifyOnFailure
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyNotificationSettings struct {
	value *PolicyNotificationSettings
	isSet bool
}

func (v NullablePolicyNotificationSettings) Get() *PolicyNotificationSettings {
	return v.value
}

func (v *NullablePolicyNotificationSettings) Set(val *PolicyNotificationSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyNotificationSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyNotificationSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyNotificationSettings(val *PolicyNotificationSettings) *NullablePolicyNotificationSettings {
	return &NullablePolicyNotificationSettings{value: val, isSet: true}
}

func (v NullablePolicyNotificationSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyNotificationSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



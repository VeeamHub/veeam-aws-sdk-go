/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicyExportModel struct for PolicyExportModel
type PolicyExportModel struct {
	SnapshotSettings *PolicySnapshotSettings `json:"snapshotSettings,omitempty"`
	ReplicaSettings *ReplicaSettingsExportModel `json:"replicaSettings,omitempty"`
	BackupSettings *BackupSettingsExportModel `json:"backupSettings,omitempty"`
	Regions []string `json:"regions"`
	SelectedItems *PolicyBackupItemsExportModel `json:"selectedItems,omitempty"`
	ExcludedItems *PolicyBackupItemsExportModel `json:"excludedItems,omitempty"`
	ScheduleSettings *ScheduleSettings `json:"scheduleSettings,omitempty"`
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Priority *int64 `json:"priority,omitempty"`
	AmazonAccountName string `json:"amazonAccountName"`
	RetrySettings *RetrySettings `json:"retrySettings,omitempty"`
	PolicyNotificationSettings *PolicyNotificationSettings `json:"policyNotificationSettings,omitempty"`
	IsEnabled bool `json:"isEnabled"`
	BackupType PolicySelectionTypes `json:"backupType"`
}

// NewPolicyExportModel instantiates a new PolicyExportModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyExportModel(regions []string, name string, amazonAccountName string, isEnabled bool, backupType PolicySelectionTypes) *PolicyExportModel {
	this := PolicyExportModel{}
	this.Regions = regions
	this.Name = name
	this.AmazonAccountName = amazonAccountName
	this.IsEnabled = isEnabled
	this.BackupType = backupType
	return &this
}

// NewPolicyExportModelWithDefaults instantiates a new PolicyExportModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyExportModelWithDefaults() *PolicyExportModel {
	this := PolicyExportModel{}
	return &this
}

// GetSnapshotSettings returns the SnapshotSettings field value if set, zero value otherwise.
func (o *PolicyExportModel) GetSnapshotSettings() PolicySnapshotSettings {
	if o == nil || o.SnapshotSettings == nil {
		var ret PolicySnapshotSettings
		return ret
	}
	return *o.SnapshotSettings
}

// GetSnapshotSettingsOk returns a tuple with the SnapshotSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetSnapshotSettingsOk() (*PolicySnapshotSettings, bool) {
	if o == nil || o.SnapshotSettings == nil {
		return nil, false
	}
	return o.SnapshotSettings, true
}

// HasSnapshotSettings returns a boolean if a field has been set.
func (o *PolicyExportModel) HasSnapshotSettings() bool {
	if o != nil && o.SnapshotSettings != nil {
		return true
	}

	return false
}

// SetSnapshotSettings gets a reference to the given PolicySnapshotSettings and assigns it to the SnapshotSettings field.
func (o *PolicyExportModel) SetSnapshotSettings(v PolicySnapshotSettings) {
	o.SnapshotSettings = &v
}

// GetReplicaSettings returns the ReplicaSettings field value if set, zero value otherwise.
func (o *PolicyExportModel) GetReplicaSettings() ReplicaSettingsExportModel {
	if o == nil || o.ReplicaSettings == nil {
		var ret ReplicaSettingsExportModel
		return ret
	}
	return *o.ReplicaSettings
}

// GetReplicaSettingsOk returns a tuple with the ReplicaSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetReplicaSettingsOk() (*ReplicaSettingsExportModel, bool) {
	if o == nil || o.ReplicaSettings == nil {
		return nil, false
	}
	return o.ReplicaSettings, true
}

// HasReplicaSettings returns a boolean if a field has been set.
func (o *PolicyExportModel) HasReplicaSettings() bool {
	if o != nil && o.ReplicaSettings != nil {
		return true
	}

	return false
}

// SetReplicaSettings gets a reference to the given ReplicaSettingsExportModel and assigns it to the ReplicaSettings field.
func (o *PolicyExportModel) SetReplicaSettings(v ReplicaSettingsExportModel) {
	o.ReplicaSettings = &v
}

// GetBackupSettings returns the BackupSettings field value if set, zero value otherwise.
func (o *PolicyExportModel) GetBackupSettings() BackupSettingsExportModel {
	if o == nil || o.BackupSettings == nil {
		var ret BackupSettingsExportModel
		return ret
	}
	return *o.BackupSettings
}

// GetBackupSettingsOk returns a tuple with the BackupSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetBackupSettingsOk() (*BackupSettingsExportModel, bool) {
	if o == nil || o.BackupSettings == nil {
		return nil, false
	}
	return o.BackupSettings, true
}

// HasBackupSettings returns a boolean if a field has been set.
func (o *PolicyExportModel) HasBackupSettings() bool {
	if o != nil && o.BackupSettings != nil {
		return true
	}

	return false
}

// SetBackupSettings gets a reference to the given BackupSettingsExportModel and assigns it to the BackupSettings field.
func (o *PolicyExportModel) SetBackupSettings(v BackupSettingsExportModel) {
	o.BackupSettings = &v
}

// GetRegions returns the Regions field value
func (o *PolicyExportModel) GetRegions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetRegionsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Regions, true
}

// SetRegions sets field value
func (o *PolicyExportModel) SetRegions(v []string) {
	o.Regions = v
}

// GetSelectedItems returns the SelectedItems field value if set, zero value otherwise.
func (o *PolicyExportModel) GetSelectedItems() PolicyBackupItemsExportModel {
	if o == nil || o.SelectedItems == nil {
		var ret PolicyBackupItemsExportModel
		return ret
	}
	return *o.SelectedItems
}

// GetSelectedItemsOk returns a tuple with the SelectedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetSelectedItemsOk() (*PolicyBackupItemsExportModel, bool) {
	if o == nil || o.SelectedItems == nil {
		return nil, false
	}
	return o.SelectedItems, true
}

// HasSelectedItems returns a boolean if a field has been set.
func (o *PolicyExportModel) HasSelectedItems() bool {
	if o != nil && o.SelectedItems != nil {
		return true
	}

	return false
}

// SetSelectedItems gets a reference to the given PolicyBackupItemsExportModel and assigns it to the SelectedItems field.
func (o *PolicyExportModel) SetSelectedItems(v PolicyBackupItemsExportModel) {
	o.SelectedItems = &v
}

// GetExcludedItems returns the ExcludedItems field value if set, zero value otherwise.
func (o *PolicyExportModel) GetExcludedItems() PolicyBackupItemsExportModel {
	if o == nil || o.ExcludedItems == nil {
		var ret PolicyBackupItemsExportModel
		return ret
	}
	return *o.ExcludedItems
}

// GetExcludedItemsOk returns a tuple with the ExcludedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetExcludedItemsOk() (*PolicyBackupItemsExportModel, bool) {
	if o == nil || o.ExcludedItems == nil {
		return nil, false
	}
	return o.ExcludedItems, true
}

// HasExcludedItems returns a boolean if a field has been set.
func (o *PolicyExportModel) HasExcludedItems() bool {
	if o != nil && o.ExcludedItems != nil {
		return true
	}

	return false
}

// SetExcludedItems gets a reference to the given PolicyBackupItemsExportModel and assigns it to the ExcludedItems field.
func (o *PolicyExportModel) SetExcludedItems(v PolicyBackupItemsExportModel) {
	o.ExcludedItems = &v
}

// GetScheduleSettings returns the ScheduleSettings field value if set, zero value otherwise.
func (o *PolicyExportModel) GetScheduleSettings() ScheduleSettings {
	if o == nil || o.ScheduleSettings == nil {
		var ret ScheduleSettings
		return ret
	}
	return *o.ScheduleSettings
}

// GetScheduleSettingsOk returns a tuple with the ScheduleSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetScheduleSettingsOk() (*ScheduleSettings, bool) {
	if o == nil || o.ScheduleSettings == nil {
		return nil, false
	}
	return o.ScheduleSettings, true
}

// HasScheduleSettings returns a boolean if a field has been set.
func (o *PolicyExportModel) HasScheduleSettings() bool {
	if o != nil && o.ScheduleSettings != nil {
		return true
	}

	return false
}

// SetScheduleSettings gets a reference to the given ScheduleSettings and assigns it to the ScheduleSettings field.
func (o *PolicyExportModel) SetScheduleSettings(v ScheduleSettings) {
	o.ScheduleSettings = &v
}

// GetName returns the Name field value
func (o *PolicyExportModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PolicyExportModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyExportModel) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyExportModel) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyExportModel) SetDescription(v string) {
	o.Description = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *PolicyExportModel) GetPriority() int64 {
	if o == nil || o.Priority == nil {
		var ret int64
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetPriorityOk() (*int64, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *PolicyExportModel) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int64 and assigns it to the Priority field.
func (o *PolicyExportModel) SetPriority(v int64) {
	o.Priority = &v
}

// GetAmazonAccountName returns the AmazonAccountName field value
func (o *PolicyExportModel) GetAmazonAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonAccountName
}

// GetAmazonAccountNameOk returns a tuple with the AmazonAccountName field value
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetAmazonAccountNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonAccountName, true
}

// SetAmazonAccountName sets field value
func (o *PolicyExportModel) SetAmazonAccountName(v string) {
	o.AmazonAccountName = v
}

// GetRetrySettings returns the RetrySettings field value if set, zero value otherwise.
func (o *PolicyExportModel) GetRetrySettings() RetrySettings {
	if o == nil || o.RetrySettings == nil {
		var ret RetrySettings
		return ret
	}
	return *o.RetrySettings
}

// GetRetrySettingsOk returns a tuple with the RetrySettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetRetrySettingsOk() (*RetrySettings, bool) {
	if o == nil || o.RetrySettings == nil {
		return nil, false
	}
	return o.RetrySettings, true
}

// HasRetrySettings returns a boolean if a field has been set.
func (o *PolicyExportModel) HasRetrySettings() bool {
	if o != nil && o.RetrySettings != nil {
		return true
	}

	return false
}

// SetRetrySettings gets a reference to the given RetrySettings and assigns it to the RetrySettings field.
func (o *PolicyExportModel) SetRetrySettings(v RetrySettings) {
	o.RetrySettings = &v
}

// GetPolicyNotificationSettings returns the PolicyNotificationSettings field value if set, zero value otherwise.
func (o *PolicyExportModel) GetPolicyNotificationSettings() PolicyNotificationSettings {
	if o == nil || o.PolicyNotificationSettings == nil {
		var ret PolicyNotificationSettings
		return ret
	}
	return *o.PolicyNotificationSettings
}

// GetPolicyNotificationSettingsOk returns a tuple with the PolicyNotificationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetPolicyNotificationSettingsOk() (*PolicyNotificationSettings, bool) {
	if o == nil || o.PolicyNotificationSettings == nil {
		return nil, false
	}
	return o.PolicyNotificationSettings, true
}

// HasPolicyNotificationSettings returns a boolean if a field has been set.
func (o *PolicyExportModel) HasPolicyNotificationSettings() bool {
	if o != nil && o.PolicyNotificationSettings != nil {
		return true
	}

	return false
}

// SetPolicyNotificationSettings gets a reference to the given PolicyNotificationSettings and assigns it to the PolicyNotificationSettings field.
func (o *PolicyExportModel) SetPolicyNotificationSettings(v PolicyNotificationSettings) {
	o.PolicyNotificationSettings = &v
}

// GetIsEnabled returns the IsEnabled field value
func (o *PolicyExportModel) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *PolicyExportModel) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetBackupType returns the BackupType field value
func (o *PolicyExportModel) GetBackupType() PolicySelectionTypes {
	if o == nil {
		var ret PolicySelectionTypes
		return ret
	}

	return o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value
// and a boolean to check if the value has been set.
func (o *PolicyExportModel) GetBackupTypeOk() (*PolicySelectionTypes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupType, true
}

// SetBackupType sets field value
func (o *PolicyExportModel) SetBackupType(v PolicySelectionTypes) {
	o.BackupType = v
}

func (o PolicyExportModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotSettings != nil {
		toSerialize["snapshotSettings"] = o.SnapshotSettings
	}
	if o.ReplicaSettings != nil {
		toSerialize["replicaSettings"] = o.ReplicaSettings
	}
	if o.BackupSettings != nil {
		toSerialize["backupSettings"] = o.BackupSettings
	}
	if true {
		toSerialize["regions"] = o.Regions
	}
	if o.SelectedItems != nil {
		toSerialize["selectedItems"] = o.SelectedItems
	}
	if o.ExcludedItems != nil {
		toSerialize["excludedItems"] = o.ExcludedItems
	}
	if o.ScheduleSettings != nil {
		toSerialize["scheduleSettings"] = o.ScheduleSettings
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if true {
		toSerialize["amazonAccountName"] = o.AmazonAccountName
	}
	if o.RetrySettings != nil {
		toSerialize["retrySettings"] = o.RetrySettings
	}
	if o.PolicyNotificationSettings != nil {
		toSerialize["policyNotificationSettings"] = o.PolicyNotificationSettings
	}
	if true {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if true {
		toSerialize["backupType"] = o.BackupType
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyExportModel struct {
	value *PolicyExportModel
	isSet bool
}

func (v NullablePolicyExportModel) Get() *PolicyExportModel {
	return v.value
}

func (v *NullablePolicyExportModel) Set(val *PolicyExportModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyExportModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyExportModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyExportModel(val *PolicyExportModel) *NullablePolicyExportModel {
	return &NullablePolicyExportModel{value: val, isSet: true}
}

func (v NullablePolicyExportModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyExportModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



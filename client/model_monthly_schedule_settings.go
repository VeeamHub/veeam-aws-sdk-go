/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MonthlyScheduleSettings struct for MonthlyScheduleSettings
type MonthlyScheduleSettings struct {
	TimeLocal        Time                            `json:"timeLocal"`
	DayNumberInMonth DayNumbersInMonth               `json:"dayNumberInMonth"`
	DayOfWeek        *DaysOfWeek                     `json:"dayOfWeek,omitempty"`
	DayOfMonth       *int32                          `json:"dayOfMonth,omitempty"`
	SnapshotOptions  MonthlySnapshotScheduleSettings `json:"snapshotOptions"`
	BackupOptions    *MonthlyBackupScheduleSettings  `json:"backupOptions,omitempty"`
	ReplicaOptions   *MonthlyReplicaScheduleSettings `json:"replicaOptions,omitempty"`
}

// NewMonthlyScheduleSettings instantiates a new MonthlyScheduleSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonthlyScheduleSettings(timeLocal Time, dayNumberInMonth DayNumbersInMonth, snapshotOptions MonthlySnapshotScheduleSettings) *MonthlyScheduleSettings {
	this := MonthlyScheduleSettings{}
	this.TimeLocal = timeLocal
	this.DayNumberInMonth = dayNumberInMonth
	this.SnapshotOptions = snapshotOptions
	return &this
}

// NewMonthlyScheduleSettingsWithDefaults instantiates a new MonthlyScheduleSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonthlyScheduleSettingsWithDefaults() *MonthlyScheduleSettings {
	this := MonthlyScheduleSettings{}
	return &this
}

// GetTimeLocal returns the TimeLocal field value
func (o *MonthlyScheduleSettings) GetTimeLocal() Time {
	if o == nil {
		var ret Time
		return ret
	}

	return o.TimeLocal
}

// GetTimeLocalOk returns a tuple with the TimeLocal field value
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetTimeLocalOk() (*Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeLocal, true
}

// SetTimeLocal sets field value
func (o *MonthlyScheduleSettings) SetTimeLocal(v Time) {
	o.TimeLocal = v
}

// GetDayNumberInMonth returns the DayNumberInMonth field value
func (o *MonthlyScheduleSettings) GetDayNumberInMonth() DayNumbersInMonth {
	if o == nil {
		var ret DayNumbersInMonth
		return ret
	}

	return o.DayNumberInMonth
}

// GetDayNumberInMonthOk returns a tuple with the DayNumberInMonth field value
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetDayNumberInMonthOk() (*DayNumbersInMonth, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DayNumberInMonth, true
}

// SetDayNumberInMonth sets field value
func (o *MonthlyScheduleSettings) SetDayNumberInMonth(v DayNumbersInMonth) {
	o.DayNumberInMonth = v
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *MonthlyScheduleSettings) GetDayOfWeek() DaysOfWeek {
	if o == nil || o.DayOfWeek == nil {
		var ret DaysOfWeek
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetDayOfWeekOk() (*DaysOfWeek, bool) {
	if o == nil || o.DayOfWeek == nil {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *MonthlyScheduleSettings) HasDayOfWeek() bool {
	if o != nil && o.DayOfWeek != nil {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given DaysOfWeek and assigns it to the DayOfWeek field.
func (o *MonthlyScheduleSettings) SetDayOfWeek(v DaysOfWeek) {
	o.DayOfWeek = &v
}

// GetDayOfMonth returns the DayOfMonth field value if set, zero value otherwise.
func (o *MonthlyScheduleSettings) GetDayOfMonth() int32 {
	if o == nil || o.DayOfMonth == nil {
		var ret int32
		return ret
	}
	return *o.DayOfMonth
}

// GetDayOfMonthOk returns a tuple with the DayOfMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetDayOfMonthOk() (*int32, bool) {
	if o == nil || o.DayOfMonth == nil {
		return nil, false
	}
	return o.DayOfMonth, true
}

// HasDayOfMonth returns a boolean if a field has been set.
func (o *MonthlyScheduleSettings) HasDayOfMonth() bool {
	if o != nil && o.DayOfMonth != nil {
		return true
	}

	return false
}

// SetDayOfMonth gets a reference to the given int32 and assigns it to the DayOfMonth field.
func (o *MonthlyScheduleSettings) SetDayOfMonth(v int32) {
	o.DayOfMonth = &v
}

// GetSnapshotOptions returns the SnapshotOptions field value
func (o *MonthlyScheduleSettings) GetSnapshotOptions() MonthlySnapshotScheduleSettings {
	if o == nil {
		var ret MonthlySnapshotScheduleSettings
		return ret
	}

	return o.SnapshotOptions
}

// GetSnapshotOptionsOk returns a tuple with the SnapshotOptions field value
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetSnapshotOptionsOk() (*MonthlySnapshotScheduleSettings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SnapshotOptions, true
}

// SetSnapshotOptions sets field value
func (o *MonthlyScheduleSettings) SetSnapshotOptions(v MonthlySnapshotScheduleSettings) {
	o.SnapshotOptions = v
}

// GetBackupOptions returns the BackupOptions field value if set, zero value otherwise.
func (o *MonthlyScheduleSettings) GetBackupOptions() MonthlyBackupScheduleSettings {
	if o == nil || o.BackupOptions == nil {
		var ret MonthlyBackupScheduleSettings
		return ret
	}
	return *o.BackupOptions
}

// GetBackupOptionsOk returns a tuple with the BackupOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetBackupOptionsOk() (*MonthlyBackupScheduleSettings, bool) {
	if o == nil || o.BackupOptions == nil {
		return nil, false
	}
	return o.BackupOptions, true
}

// HasBackupOptions returns a boolean if a field has been set.
func (o *MonthlyScheduleSettings) HasBackupOptions() bool {
	if o != nil && o.BackupOptions != nil {
		return true
	}

	return false
}

// SetBackupOptions gets a reference to the given MonthlyBackupScheduleSettings and assigns it to the BackupOptions field.
func (o *MonthlyScheduleSettings) SetBackupOptions(v MonthlyBackupScheduleSettings) {
	o.BackupOptions = &v
}

// GetReplicaOptions returns the ReplicaOptions field value if set, zero value otherwise.
func (o *MonthlyScheduleSettings) GetReplicaOptions() MonthlyReplicaScheduleSettings {
	if o == nil || o.ReplicaOptions == nil {
		var ret MonthlyReplicaScheduleSettings
		return ret
	}
	return *o.ReplicaOptions
}

// GetReplicaOptionsOk returns a tuple with the ReplicaOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyScheduleSettings) GetReplicaOptionsOk() (*MonthlyReplicaScheduleSettings, bool) {
	if o == nil || o.ReplicaOptions == nil {
		return nil, false
	}
	return o.ReplicaOptions, true
}

// HasReplicaOptions returns a boolean if a field has been set.
func (o *MonthlyScheduleSettings) HasReplicaOptions() bool {
	if o != nil && o.ReplicaOptions != nil {
		return true
	}

	return false
}

// SetReplicaOptions gets a reference to the given MonthlyReplicaScheduleSettings and assigns it to the ReplicaOptions field.
func (o *MonthlyScheduleSettings) SetReplicaOptions(v MonthlyReplicaScheduleSettings) {
	o.ReplicaOptions = &v
}

func (o MonthlyScheduleSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["timeLocal"] = o.TimeLocal
	}
	if true {
		toSerialize["dayNumberInMonth"] = o.DayNumberInMonth
	}
	if o.DayOfWeek != nil {
		toSerialize["dayOfWeek"] = o.DayOfWeek
	}
	if o.DayOfMonth != nil {
		toSerialize["dayOfMonth"] = o.DayOfMonth
	}
	if true {
		toSerialize["snapshotOptions"] = o.SnapshotOptions
	}
	if o.BackupOptions != nil {
		toSerialize["backupOptions"] = o.BackupOptions
	}
	if o.ReplicaOptions != nil {
		toSerialize["replicaOptions"] = o.ReplicaOptions
	}
	return json.Marshal(toSerialize)
}

type NullableMonthlyScheduleSettings struct {
	value *MonthlyScheduleSettings
	isSet bool
}

func (v NullableMonthlyScheduleSettings) Get() *MonthlyScheduleSettings {
	return v.value
}

func (v *NullableMonthlyScheduleSettings) Set(val *MonthlyScheduleSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableMonthlyScheduleSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableMonthlyScheduleSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonthlyScheduleSettings(val *MonthlyScheduleSettings) *NullableMonthlyScheduleSettings {
	return &NullableMonthlyScheduleSettings{value: val, isSet: true}
}

func (v NullableMonthlyScheduleSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonthlyScheduleSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// UserStatus struct for UserStatus
type UserStatus struct {
	ConnectionsCount int32 `json:"connectionsCount"`
	RepositoryCount int32 `json:"repositoryCount"`
	PoliciesCount int32 `json:"policiesCount"`
	WorkerLocationsCount int32 `json:"workerLocationsCount"`
}

// NewUserStatus instantiates a new UserStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserStatus(connectionsCount int32, repositoryCount int32, policiesCount int32, workerLocationsCount int32) *UserStatus {
	this := UserStatus{}
	this.ConnectionsCount = connectionsCount
	this.RepositoryCount = repositoryCount
	this.PoliciesCount = policiesCount
	this.WorkerLocationsCount = workerLocationsCount
	return &this
}

// NewUserStatusWithDefaults instantiates a new UserStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserStatusWithDefaults() *UserStatus {
	this := UserStatus{}
	return &this
}

// GetConnectionsCount returns the ConnectionsCount field value
func (o *UserStatus) GetConnectionsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConnectionsCount
}

// GetConnectionsCountOk returns a tuple with the ConnectionsCount field value
// and a boolean to check if the value has been set.
func (o *UserStatus) GetConnectionsCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConnectionsCount, true
}

// SetConnectionsCount sets field value
func (o *UserStatus) SetConnectionsCount(v int32) {
	o.ConnectionsCount = v
}

// GetRepositoryCount returns the RepositoryCount field value
func (o *UserStatus) GetRepositoryCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RepositoryCount
}

// GetRepositoryCountOk returns a tuple with the RepositoryCount field value
// and a boolean to check if the value has been set.
func (o *UserStatus) GetRepositoryCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RepositoryCount, true
}

// SetRepositoryCount sets field value
func (o *UserStatus) SetRepositoryCount(v int32) {
	o.RepositoryCount = v
}

// GetPoliciesCount returns the PoliciesCount field value
func (o *UserStatus) GetPoliciesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PoliciesCount
}

// GetPoliciesCountOk returns a tuple with the PoliciesCount field value
// and a boolean to check if the value has been set.
func (o *UserStatus) GetPoliciesCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PoliciesCount, true
}

// SetPoliciesCount sets field value
func (o *UserStatus) SetPoliciesCount(v int32) {
	o.PoliciesCount = v
}

// GetWorkerLocationsCount returns the WorkerLocationsCount field value
func (o *UserStatus) GetWorkerLocationsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkerLocationsCount
}

// GetWorkerLocationsCountOk returns a tuple with the WorkerLocationsCount field value
// and a boolean to check if the value has been set.
func (o *UserStatus) GetWorkerLocationsCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WorkerLocationsCount, true
}

// SetWorkerLocationsCount sets field value
func (o *UserStatus) SetWorkerLocationsCount(v int32) {
	o.WorkerLocationsCount = v
}

func (o UserStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["connectionsCount"] = o.ConnectionsCount
	}
	if true {
		toSerialize["repositoryCount"] = o.RepositoryCount
	}
	if true {
		toSerialize["policiesCount"] = o.PoliciesCount
	}
	if true {
		toSerialize["workerLocationsCount"] = o.WorkerLocationsCount
	}
	return json.Marshal(toSerialize)
}

type NullableUserStatus struct {
	value *UserStatus
	isSet bool
}

func (v NullableUserStatus) Get() *UserStatus {
	return v.value
}

func (v *NullableUserStatus) Set(val *UserStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableUserStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableUserStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserStatus(val *UserStatus) *NullableUserStatus {
	return &NullableUserStatus{value: val, isSet: true}
}

func (v NullableUserStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



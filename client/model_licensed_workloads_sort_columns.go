/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// LicensedWorkloadsSortColumns the model 'LicensedWorkloadsSortColumns'
type LicensedWorkloadsSortColumns string

// List of LicensedWorkloadsSortColumns
const (
	LICENSEDWORKLOADSSORTCOLUMNS_NAME_ASC LicensedWorkloadsSortColumns = "nameAsc"
	LICENSEDWORKLOADSSORTCOLUMNS_NAME_DESC LicensedWorkloadsSortColumns = "nameDesc"
	LICENSEDWORKLOADSSORTCOLUMNS_LAST_BACKUP_ASC LicensedWorkloadsSortColumns = "lastBackupAsc"
	LICENSEDWORKLOADSSORTCOLUMNS_LAST_BACKUP_DESC LicensedWorkloadsSortColumns = "lastBackupDesc"
)

func (v *LicensedWorkloadsSortColumns) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LicensedWorkloadsSortColumns(value)
	for _, existing := range []LicensedWorkloadsSortColumns{ "nameAsc", "nameDesc", "lastBackupAsc", "lastBackupDesc",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LicensedWorkloadsSortColumns", value)
}

// Ptr returns reference to LicensedWorkloadsSortColumns value
func (v LicensedWorkloadsSortColumns) Ptr() *LicensedWorkloadsSortColumns {
	return &v
}

type NullableLicensedWorkloadsSortColumns struct {
	value *LicensedWorkloadsSortColumns
	isSet bool
}

func (v NullableLicensedWorkloadsSortColumns) Get() *LicensedWorkloadsSortColumns {
	return v.value
}

func (v *NullableLicensedWorkloadsSortColumns) Set(val *LicensedWorkloadsSortColumns) {
	v.value = val
	v.isSet = true
}

func (v NullableLicensedWorkloadsSortColumns) IsSet() bool {
	return v.isSet
}

func (v *NullableLicensedWorkloadsSortColumns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicensedWorkloadsSortColumns(val *LicensedWorkloadsSortColumns) *NullableLicensedWorkloadsSortColumns {
	return &NullableLicensedWorkloadsSortColumns{value: val, isSet: true}
}

func (v NullableLicensedWorkloadsSortColumns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicensedWorkloadsSortColumns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


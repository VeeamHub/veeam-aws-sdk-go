/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ProtectedItem struct for ProtectedItem
type ProtectedItem struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Status *SessionItemsStatuses `json:"status,omitempty"`
	Region *string `json:"region,omitempty"`
	Embedded *ProtectedItemEmbedded `json:"_embedded,omitempty"`
}

// NewProtectedItem instantiates a new ProtectedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedItem(id string, name string) *ProtectedItem {
	this := ProtectedItem{}
	this.Id = id
	this.Name = name
	return &this
}

// NewProtectedItemWithDefaults instantiates a new ProtectedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedItemWithDefaults() *ProtectedItem {
	this := ProtectedItem{}
	return &this
}

// GetId returns the Id field value
func (o *ProtectedItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProtectedItem) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProtectedItem) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ProtectedItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProtectedItem) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProtectedItem) SetName(v string) {
	o.Name = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ProtectedItem) GetStatus() SessionItemsStatuses {
	if o == nil || o.Status == nil {
		var ret SessionItemsStatuses
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedItem) GetStatusOk() (*SessionItemsStatuses, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ProtectedItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SessionItemsStatuses and assigns it to the Status field.
func (o *ProtectedItem) SetStatus(v SessionItemsStatuses) {
	o.Status = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ProtectedItem) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedItem) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ProtectedItem) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ProtectedItem) SetRegion(v string) {
	o.Region = &v
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *ProtectedItem) GetEmbedded() ProtectedItemEmbedded {
	if o == nil || o.Embedded == nil {
		var ret ProtectedItemEmbedded
		return ret
	}
	return *o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedItem) GetEmbeddedOk() (*ProtectedItemEmbedded, bool) {
	if o == nil || o.Embedded == nil {
		return nil, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *ProtectedItem) HasEmbedded() bool {
	if o != nil && o.Embedded != nil {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given ProtectedItemEmbedded and assigns it to the Embedded field.
func (o *ProtectedItem) SetEmbedded(v ProtectedItemEmbedded) {
	o.Embedded = &v
}

func (o ProtectedItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.Embedded != nil {
		toSerialize["_embedded"] = o.Embedded
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedItem struct {
	value *ProtectedItem
	isSet bool
}

func (v NullableProtectedItem) Get() *ProtectedItem {
	return v.value
}

func (v *NullableProtectedItem) Set(val *ProtectedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedItem(val *ProtectedItem) *NullableProtectedItem {
	return &NullableProtectedItem{value: val, isSet: true}
}

func (v NullableProtectedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



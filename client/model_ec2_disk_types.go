/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// Ec2DiskTypes the model 'Ec2DiskTypes'
type Ec2DiskTypes string

// List of Ec2DiskTypes
const (
	EC2DISKTYPES_STANDART Ec2DiskTypes = "Standart"
	EC2DISKTYPES_ST1 Ec2DiskTypes = "St1"
	EC2DISKTYPES_SC1 Ec2DiskTypes = "Sc1"
	EC2DISKTYPES_IO1 Ec2DiskTypes = "Io1"
	EC2DISKTYPES_GP2 Ec2DiskTypes = "Gp2"
)

func (v *Ec2DiskTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Ec2DiskTypes(value)
	for _, existing := range []Ec2DiskTypes{ "Standart", "St1", "Sc1", "Io1", "Gp2",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Ec2DiskTypes", value)
}

// Ptr returns reference to Ec2DiskTypes value
func (v Ec2DiskTypes) Ptr() *Ec2DiskTypes {
	return &v
}

type NullableEc2DiskTypes struct {
	value *Ec2DiskTypes
	isSet bool
}

func (v NullableEc2DiskTypes) Get() *Ec2DiskTypes {
	return v.value
}

func (v *NullableEc2DiskTypes) Set(val *Ec2DiskTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableEc2DiskTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableEc2DiskTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEc2DiskTypes(val *Ec2DiskTypes) *NullableEc2DiskTypes {
	return &NullableEc2DiskTypes{value: val, isSet: true}
}

func (v NullableEc2DiskTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEc2DiskTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RestoredItem struct for RestoredItem
type RestoredItem struct {
	Name *string `json:"name,omitempty"`
	Status *SessionItemsStatuses `json:"status,omitempty"`
	RegionName *string `json:"regionName,omitempty"`
	Embedded *RestoreItemEmbedded `json:"_embedded,omitempty"`
}

// NewRestoredItem instantiates a new RestoredItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoredItem() *RestoredItem {
	this := RestoredItem{}
	return &this
}

// NewRestoredItemWithDefaults instantiates a new RestoredItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoredItemWithDefaults() *RestoredItem {
	this := RestoredItem{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RestoredItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RestoredItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RestoredItem) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *RestoredItem) GetStatus() SessionItemsStatuses {
	if o == nil || o.Status == nil {
		var ret SessionItemsStatuses
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredItem) GetStatusOk() (*SessionItemsStatuses, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *RestoredItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given SessionItemsStatuses and assigns it to the Status field.
func (o *RestoredItem) SetStatus(v SessionItemsStatuses) {
	o.Status = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *RestoredItem) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredItem) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *RestoredItem) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *RestoredItem) SetRegionName(v string) {
	o.RegionName = &v
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *RestoredItem) GetEmbedded() RestoreItemEmbedded {
	if o == nil || o.Embedded == nil {
		var ret RestoreItemEmbedded
		return ret
	}
	return *o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoredItem) GetEmbeddedOk() (*RestoreItemEmbedded, bool) {
	if o == nil || o.Embedded == nil {
		return nil, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *RestoredItem) HasEmbedded() bool {
	if o != nil && o.Embedded != nil {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given RestoreItemEmbedded and assigns it to the Embedded field.
func (o *RestoredItem) SetEmbedded(v RestoreItemEmbedded) {
	o.Embedded = &v
}

func (o RestoredItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.RegionName != nil {
		toSerialize["regionName"] = o.RegionName
	}
	if o.Embedded != nil {
		toSerialize["_embedded"] = o.Embedded
	}
	return json.Marshal(toSerialize)
}

type NullableRestoredItem struct {
	value *RestoredItem
	isSet bool
}

func (v NullableRestoredItem) Get() *RestoredItem {
	return v.value
}

func (v *NullableRestoredItem) Set(val *RestoredItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoredItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoredItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoredItem(val *RestoredItem) *NullableRestoredItem {
	return &NullableRestoredItem{value: val, isSet: true}
}

func (v NullableRestoredItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoredItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// WeeklySchedule struct for WeeklySchedule
type WeeklySchedule struct {
	Days []DaysOfWeek `json:"days"`
}

// NewWeeklySchedule instantiates a new WeeklySchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWeeklySchedule(days []DaysOfWeek) *WeeklySchedule {
	this := WeeklySchedule{}
	this.Days = days
	return &this
}

// NewWeeklyScheduleWithDefaults instantiates a new WeeklySchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWeeklyScheduleWithDefaults() *WeeklySchedule {
	this := WeeklySchedule{}
	return &this
}

// GetDays returns the Days field value
func (o *WeeklySchedule) GetDays() []DaysOfWeek {
	if o == nil {
		var ret []DaysOfWeek
		return ret
	}

	return o.Days
}

// GetDaysOk returns a tuple with the Days field value
// and a boolean to check if the value has been set.
func (o *WeeklySchedule) GetDaysOk() (*[]DaysOfWeek, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Days, true
}

// SetDays sets field value
func (o *WeeklySchedule) SetDays(v []DaysOfWeek) {
	o.Days = v
}

func (o WeeklySchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["days"] = o.Days
	}
	return json.Marshal(toSerialize)
}

type NullableWeeklySchedule struct {
	value *WeeklySchedule
	isSet bool
}

func (v NullableWeeklySchedule) Get() *WeeklySchedule {
	return v.value
}

func (v *NullableWeeklySchedule) Set(val *WeeklySchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableWeeklySchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableWeeklySchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWeeklySchedule(val *WeeklySchedule) *NullableWeeklySchedule {
	return &NullableWeeklySchedule{value: val, isSet: true}
}

func (v NullableWeeklySchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWeeklySchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



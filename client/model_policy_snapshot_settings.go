/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicySnapshotSettings struct for PolicySnapshotSettings
type PolicySnapshotSettings struct {
	AdditionalTags *[]TagSpec `json:"additionalTags,omitempty"`
	CopyTagsFromVolumeEnabled *bool `json:"copyTagsFromVolumeEnabled,omitempty"`
	TryCreateVSSSnapshot *bool `json:"tryCreateVSSSnapshot,omitempty"`
}

// NewPolicySnapshotSettings instantiates a new PolicySnapshotSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicySnapshotSettings() *PolicySnapshotSettings {
	this := PolicySnapshotSettings{}
	return &this
}

// NewPolicySnapshotSettingsWithDefaults instantiates a new PolicySnapshotSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicySnapshotSettingsWithDefaults() *PolicySnapshotSettings {
	this := PolicySnapshotSettings{}
	return &this
}

// GetAdditionalTags returns the AdditionalTags field value if set, zero value otherwise.
func (o *PolicySnapshotSettings) GetAdditionalTags() []TagSpec {
	if o == nil || o.AdditionalTags == nil {
		var ret []TagSpec
		return ret
	}
	return *o.AdditionalTags
}

// GetAdditionalTagsOk returns a tuple with the AdditionalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySnapshotSettings) GetAdditionalTagsOk() (*[]TagSpec, bool) {
	if o == nil || o.AdditionalTags == nil {
		return nil, false
	}
	return o.AdditionalTags, true
}

// HasAdditionalTags returns a boolean if a field has been set.
func (o *PolicySnapshotSettings) HasAdditionalTags() bool {
	if o != nil && o.AdditionalTags != nil {
		return true
	}

	return false
}

// SetAdditionalTags gets a reference to the given []TagSpec and assigns it to the AdditionalTags field.
func (o *PolicySnapshotSettings) SetAdditionalTags(v []TagSpec) {
	o.AdditionalTags = &v
}

// GetCopyTagsFromVolumeEnabled returns the CopyTagsFromVolumeEnabled field value if set, zero value otherwise.
func (o *PolicySnapshotSettings) GetCopyTagsFromVolumeEnabled() bool {
	if o == nil || o.CopyTagsFromVolumeEnabled == nil {
		var ret bool
		return ret
	}
	return *o.CopyTagsFromVolumeEnabled
}

// GetCopyTagsFromVolumeEnabledOk returns a tuple with the CopyTagsFromVolumeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySnapshotSettings) GetCopyTagsFromVolumeEnabledOk() (*bool, bool) {
	if o == nil || o.CopyTagsFromVolumeEnabled == nil {
		return nil, false
	}
	return o.CopyTagsFromVolumeEnabled, true
}

// HasCopyTagsFromVolumeEnabled returns a boolean if a field has been set.
func (o *PolicySnapshotSettings) HasCopyTagsFromVolumeEnabled() bool {
	if o != nil && o.CopyTagsFromVolumeEnabled != nil {
		return true
	}

	return false
}

// SetCopyTagsFromVolumeEnabled gets a reference to the given bool and assigns it to the CopyTagsFromVolumeEnabled field.
func (o *PolicySnapshotSettings) SetCopyTagsFromVolumeEnabled(v bool) {
	o.CopyTagsFromVolumeEnabled = &v
}

// GetTryCreateVSSSnapshot returns the TryCreateVSSSnapshot field value if set, zero value otherwise.
func (o *PolicySnapshotSettings) GetTryCreateVSSSnapshot() bool {
	if o == nil || o.TryCreateVSSSnapshot == nil {
		var ret bool
		return ret
	}
	return *o.TryCreateVSSSnapshot
}

// GetTryCreateVSSSnapshotOk returns a tuple with the TryCreateVSSSnapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySnapshotSettings) GetTryCreateVSSSnapshotOk() (*bool, bool) {
	if o == nil || o.TryCreateVSSSnapshot == nil {
		return nil, false
	}
	return o.TryCreateVSSSnapshot, true
}

// HasTryCreateVSSSnapshot returns a boolean if a field has been set.
func (o *PolicySnapshotSettings) HasTryCreateVSSSnapshot() bool {
	if o != nil && o.TryCreateVSSSnapshot != nil {
		return true
	}

	return false
}

// SetTryCreateVSSSnapshot gets a reference to the given bool and assigns it to the TryCreateVSSSnapshot field.
func (o *PolicySnapshotSettings) SetTryCreateVSSSnapshot(v bool) {
	o.TryCreateVSSSnapshot = &v
}

func (o PolicySnapshotSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalTags != nil {
		toSerialize["additionalTags"] = o.AdditionalTags
	}
	if o.CopyTagsFromVolumeEnabled != nil {
		toSerialize["copyTagsFromVolumeEnabled"] = o.CopyTagsFromVolumeEnabled
	}
	if o.TryCreateVSSSnapshot != nil {
		toSerialize["tryCreateVSSSnapshot"] = o.TryCreateVSSSnapshot
	}
	return json.Marshal(toSerialize)
}

type NullablePolicySnapshotSettings struct {
	value *PolicySnapshotSettings
	isSet bool
}

func (v NullablePolicySnapshotSettings) Get() *PolicySnapshotSettings {
	return v.value
}

func (v *NullablePolicySnapshotSettings) Set(val *PolicySnapshotSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicySnapshotSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicySnapshotSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicySnapshotSettings(val *PolicySnapshotSettings) *NullablePolicySnapshotSettings {
	return &NullablePolicySnapshotSettings{value: val, isSet: true}
}

func (v NullablePolicySnapshotSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicySnapshotSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



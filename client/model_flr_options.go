/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// FlrOptions struct for FlrOptions
type FlrOptions struct {
	Reason *string `json:"reason,omitempty"`
}

// NewFlrOptions instantiates a new FlrOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlrOptions() *FlrOptions {
	this := FlrOptions{}
	return &this
}

// NewFlrOptionsWithDefaults instantiates a new FlrOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlrOptionsWithDefaults() *FlrOptions {
	this := FlrOptions{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *FlrOptions) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlrOptions) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *FlrOptions) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *FlrOptions) SetReason(v string) {
	o.Reason = &v
}

func (o FlrOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableFlrOptions struct {
	value *FlrOptions
	isSet bool
}

func (v NullableFlrOptions) Get() *FlrOptions {
	return v.value
}

func (v *NullableFlrOptions) Set(val *FlrOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFlrOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFlrOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlrOptions(val *FlrOptions) *NullableFlrOptions {
	return &NullableFlrOptions{value: val, isSet: true}
}

func (v NullableFlrOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlrOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



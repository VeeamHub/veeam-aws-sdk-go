/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// VirtualMachineRestoreOptions struct for VirtualMachineRestoreOptions
type VirtualMachineRestoreOptions struct {
	Reason *string `json:"reason,omitempty"`
	AmazonAccountId *string `json:"amazonAccountId,omitempty"`
	AccessKey *string `json:"accessKey,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
	StartInstance *bool `json:"startInstance,omitempty"`
	ToAlternative *VirtualMachineToAlternativeRestoreOptions `json:"toAlternative,omitempty"`
}

// NewVirtualMachineRestoreOptions instantiates a new VirtualMachineRestoreOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineRestoreOptions() *VirtualMachineRestoreOptions {
	this := VirtualMachineRestoreOptions{}
	return &this
}

// NewVirtualMachineRestoreOptionsWithDefaults instantiates a new VirtualMachineRestoreOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineRestoreOptionsWithDefaults() *VirtualMachineRestoreOptions {
	this := VirtualMachineRestoreOptions{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *VirtualMachineRestoreOptions) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineRestoreOptions) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *VirtualMachineRestoreOptions) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *VirtualMachineRestoreOptions) SetReason(v string) {
	o.Reason = &v
}

// GetAmazonAccountId returns the AmazonAccountId field value if set, zero value otherwise.
func (o *VirtualMachineRestoreOptions) GetAmazonAccountId() string {
	if o == nil || o.AmazonAccountId == nil {
		var ret string
		return ret
	}
	return *o.AmazonAccountId
}

// GetAmazonAccountIdOk returns a tuple with the AmazonAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineRestoreOptions) GetAmazonAccountIdOk() (*string, bool) {
	if o == nil || o.AmazonAccountId == nil {
		return nil, false
	}
	return o.AmazonAccountId, true
}

// HasAmazonAccountId returns a boolean if a field has been set.
func (o *VirtualMachineRestoreOptions) HasAmazonAccountId() bool {
	if o != nil && o.AmazonAccountId != nil {
		return true
	}

	return false
}

// SetAmazonAccountId gets a reference to the given string and assigns it to the AmazonAccountId field.
func (o *VirtualMachineRestoreOptions) SetAmazonAccountId(v string) {
	o.AmazonAccountId = &v
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *VirtualMachineRestoreOptions) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineRestoreOptions) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *VirtualMachineRestoreOptions) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *VirtualMachineRestoreOptions) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *VirtualMachineRestoreOptions) GetSecretKey() string {
	if o == nil || o.SecretKey == nil {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineRestoreOptions) GetSecretKeyOk() (*string, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *VirtualMachineRestoreOptions) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *VirtualMachineRestoreOptions) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetStartInstance returns the StartInstance field value if set, zero value otherwise.
func (o *VirtualMachineRestoreOptions) GetStartInstance() bool {
	if o == nil || o.StartInstance == nil {
		var ret bool
		return ret
	}
	return *o.StartInstance
}

// GetStartInstanceOk returns a tuple with the StartInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineRestoreOptions) GetStartInstanceOk() (*bool, bool) {
	if o == nil || o.StartInstance == nil {
		return nil, false
	}
	return o.StartInstance, true
}

// HasStartInstance returns a boolean if a field has been set.
func (o *VirtualMachineRestoreOptions) HasStartInstance() bool {
	if o != nil && o.StartInstance != nil {
		return true
	}

	return false
}

// SetStartInstance gets a reference to the given bool and assigns it to the StartInstance field.
func (o *VirtualMachineRestoreOptions) SetStartInstance(v bool) {
	o.StartInstance = &v
}

// GetToAlternative returns the ToAlternative field value if set, zero value otherwise.
func (o *VirtualMachineRestoreOptions) GetToAlternative() VirtualMachineToAlternativeRestoreOptions {
	if o == nil || o.ToAlternative == nil {
		var ret VirtualMachineToAlternativeRestoreOptions
		return ret
	}
	return *o.ToAlternative
}

// GetToAlternativeOk returns a tuple with the ToAlternative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineRestoreOptions) GetToAlternativeOk() (*VirtualMachineToAlternativeRestoreOptions, bool) {
	if o == nil || o.ToAlternative == nil {
		return nil, false
	}
	return o.ToAlternative, true
}

// HasToAlternative returns a boolean if a field has been set.
func (o *VirtualMachineRestoreOptions) HasToAlternative() bool {
	if o != nil && o.ToAlternative != nil {
		return true
	}

	return false
}

// SetToAlternative gets a reference to the given VirtualMachineToAlternativeRestoreOptions and assigns it to the ToAlternative field.
func (o *VirtualMachineRestoreOptions) SetToAlternative(v VirtualMachineToAlternativeRestoreOptions) {
	o.ToAlternative = &v
}

func (o VirtualMachineRestoreOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.AmazonAccountId != nil {
		toSerialize["amazonAccountId"] = o.AmazonAccountId
	}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	if o.StartInstance != nil {
		toSerialize["startInstance"] = o.StartInstance
	}
	if o.ToAlternative != nil {
		toSerialize["toAlternative"] = o.ToAlternative
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualMachineRestoreOptions struct {
	value *VirtualMachineRestoreOptions
	isSet bool
}

func (v NullableVirtualMachineRestoreOptions) Get() *VirtualMachineRestoreOptions {
	return v.value
}

func (v *NullableVirtualMachineRestoreOptions) Set(val *VirtualMachineRestoreOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineRestoreOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineRestoreOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineRestoreOptions(val *VirtualMachineRestoreOptions) *NullableVirtualMachineRestoreOptions {
	return &NullableVirtualMachineRestoreOptions{value: val, isSet: true}
}

func (v NullableVirtualMachineRestoreOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineRestoreOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



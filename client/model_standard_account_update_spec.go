/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// StandardAccountUpdateSpec struct for StandardAccountUpdateSpec
type StandardAccountUpdateSpec struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
}

// NewStandardAccountUpdateSpec instantiates a new StandardAccountUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStandardAccountUpdateSpec(name string) *StandardAccountUpdateSpec {
	this := StandardAccountUpdateSpec{}
	this.Name = name
	return &this
}

// NewStandardAccountUpdateSpecWithDefaults instantiates a new StandardAccountUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStandardAccountUpdateSpecWithDefaults() *StandardAccountUpdateSpec {
	this := StandardAccountUpdateSpec{}
	return &this
}

// GetName returns the Name field value
func (o *StandardAccountUpdateSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *StandardAccountUpdateSpec) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *StandardAccountUpdateSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *StandardAccountUpdateSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardAccountUpdateSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *StandardAccountUpdateSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *StandardAccountUpdateSpec) SetDescription(v string) {
	o.Description = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *StandardAccountUpdateSpec) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardAccountUpdateSpec) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *StandardAccountUpdateSpec) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *StandardAccountUpdateSpec) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *StandardAccountUpdateSpec) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StandardAccountUpdateSpec) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *StandardAccountUpdateSpec) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *StandardAccountUpdateSpec) SetPassword(v string) {
	o.Password = &v
}

func (o StandardAccountUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableStandardAccountUpdateSpec struct {
	value *StandardAccountUpdateSpec
	isSet bool
}

func (v NullableStandardAccountUpdateSpec) Get() *StandardAccountUpdateSpec {
	return v.value
}

func (v *NullableStandardAccountUpdateSpec) Set(val *StandardAccountUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableStandardAccountUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableStandardAccountUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStandardAccountUpdateSpec(val *StandardAccountUpdateSpec) *NullableStandardAccountUpdateSpec {
	return &NullableStandardAccountUpdateSpec{value: val, isSet: true}
}

func (v NullableStandardAccountUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStandardAccountUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



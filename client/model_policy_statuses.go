/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// PolicyStatuses the model 'PolicyStatuses'
type PolicyStatuses string

// List of PolicyStatuses
const (
	POLICYSTATUSES_ENABLED PolicyStatuses = "Enabled"
	POLICYSTATUSES_DISABLED PolicyStatuses = "Disabled"
)

func (v *PolicyStatuses) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PolicyStatuses(value)
	for _, existing := range []PolicyStatuses{ "Enabled", "Disabled",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PolicyStatuses", value)
}

// Ptr returns reference to PolicyStatuses value
func (v PolicyStatuses) Ptr() *PolicyStatuses {
	return &v
}

type NullablePolicyStatuses struct {
	value *PolicyStatuses
	isSet bool
}

func (v NullablePolicyStatuses) Get() *PolicyStatuses {
	return v.value
}

func (v *NullablePolicyStatuses) Set(val *PolicyStatuses) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyStatuses) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyStatuses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyStatuses(val *PolicyStatuses) *NullablePolicyStatuses {
	return &NullablePolicyStatuses{value: val, isSet: true}
}

func (v NullablePolicyStatuses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyStatuses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// VmRestorePointDefaultNetworkSettings struct for VmRestorePointDefaultNetworkSettings
type VmRestorePointDefaultNetworkSettings struct {
	RestorePointId string `json:"restorePointId"`
	NetworkName *string `json:"networkName,omitempty"`
	NetworkId *string `json:"networkId,omitempty"`
	SubNetworkName *string `json:"subNetworkName,omitempty"`
	SubNetworkId *string `json:"subNetworkId,omitempty"`
	SecurityGroupName *string `json:"securityGroupName,omitempty"`
	SecurityGroupId *string `json:"securityGroupId,omitempty"`
}

// NewVmRestorePointDefaultNetworkSettings instantiates a new VmRestorePointDefaultNetworkSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmRestorePointDefaultNetworkSettings(restorePointId string) *VmRestorePointDefaultNetworkSettings {
	this := VmRestorePointDefaultNetworkSettings{}
	this.RestorePointId = restorePointId
	return &this
}

// NewVmRestorePointDefaultNetworkSettingsWithDefaults instantiates a new VmRestorePointDefaultNetworkSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmRestorePointDefaultNetworkSettingsWithDefaults() *VmRestorePointDefaultNetworkSettings {
	this := VmRestorePointDefaultNetworkSettings{}
	return &this
}

// GetRestorePointId returns the RestorePointId field value
func (o *VmRestorePointDefaultNetworkSettings) GetRestorePointId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestorePointId
}

// GetRestorePointIdOk returns a tuple with the RestorePointId field value
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetRestorePointIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RestorePointId, true
}

// SetRestorePointId sets field value
func (o *VmRestorePointDefaultNetworkSettings) SetRestorePointId(v string) {
	o.RestorePointId = v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *VmRestorePointDefaultNetworkSettings) GetNetworkName() string {
	if o == nil || o.NetworkName == nil {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetNetworkNameOk() (*string, bool) {
	if o == nil || o.NetworkName == nil {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *VmRestorePointDefaultNetworkSettings) HasNetworkName() bool {
	if o != nil && o.NetworkName != nil {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *VmRestorePointDefaultNetworkSettings) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *VmRestorePointDefaultNetworkSettings) GetNetworkId() string {
	if o == nil || o.NetworkId == nil {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetNetworkIdOk() (*string, bool) {
	if o == nil || o.NetworkId == nil {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *VmRestorePointDefaultNetworkSettings) HasNetworkId() bool {
	if o != nil && o.NetworkId != nil {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *VmRestorePointDefaultNetworkSettings) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetSubNetworkName returns the SubNetworkName field value if set, zero value otherwise.
func (o *VmRestorePointDefaultNetworkSettings) GetSubNetworkName() string {
	if o == nil || o.SubNetworkName == nil {
		var ret string
		return ret
	}
	return *o.SubNetworkName
}

// GetSubNetworkNameOk returns a tuple with the SubNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetSubNetworkNameOk() (*string, bool) {
	if o == nil || o.SubNetworkName == nil {
		return nil, false
	}
	return o.SubNetworkName, true
}

// HasSubNetworkName returns a boolean if a field has been set.
func (o *VmRestorePointDefaultNetworkSettings) HasSubNetworkName() bool {
	if o != nil && o.SubNetworkName != nil {
		return true
	}

	return false
}

// SetSubNetworkName gets a reference to the given string and assigns it to the SubNetworkName field.
func (o *VmRestorePointDefaultNetworkSettings) SetSubNetworkName(v string) {
	o.SubNetworkName = &v
}

// GetSubNetworkId returns the SubNetworkId field value if set, zero value otherwise.
func (o *VmRestorePointDefaultNetworkSettings) GetSubNetworkId() string {
	if o == nil || o.SubNetworkId == nil {
		var ret string
		return ret
	}
	return *o.SubNetworkId
}

// GetSubNetworkIdOk returns a tuple with the SubNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetSubNetworkIdOk() (*string, bool) {
	if o == nil || o.SubNetworkId == nil {
		return nil, false
	}
	return o.SubNetworkId, true
}

// HasSubNetworkId returns a boolean if a field has been set.
func (o *VmRestorePointDefaultNetworkSettings) HasSubNetworkId() bool {
	if o != nil && o.SubNetworkId != nil {
		return true
	}

	return false
}

// SetSubNetworkId gets a reference to the given string and assigns it to the SubNetworkId field.
func (o *VmRestorePointDefaultNetworkSettings) SetSubNetworkId(v string) {
	o.SubNetworkId = &v
}

// GetSecurityGroupName returns the SecurityGroupName field value if set, zero value otherwise.
func (o *VmRestorePointDefaultNetworkSettings) GetSecurityGroupName() string {
	if o == nil || o.SecurityGroupName == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupName
}

// GetSecurityGroupNameOk returns a tuple with the SecurityGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetSecurityGroupNameOk() (*string, bool) {
	if o == nil || o.SecurityGroupName == nil {
		return nil, false
	}
	return o.SecurityGroupName, true
}

// HasSecurityGroupName returns a boolean if a field has been set.
func (o *VmRestorePointDefaultNetworkSettings) HasSecurityGroupName() bool {
	if o != nil && o.SecurityGroupName != nil {
		return true
	}

	return false
}

// SetSecurityGroupName gets a reference to the given string and assigns it to the SecurityGroupName field.
func (o *VmRestorePointDefaultNetworkSettings) SetSecurityGroupName(v string) {
	o.SecurityGroupName = &v
}

// GetSecurityGroupId returns the SecurityGroupId field value if set, zero value otherwise.
func (o *VmRestorePointDefaultNetworkSettings) GetSecurityGroupId() string {
	if o == nil || o.SecurityGroupId == nil {
		var ret string
		return ret
	}
	return *o.SecurityGroupId
}

// GetSecurityGroupIdOk returns a tuple with the SecurityGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePointDefaultNetworkSettings) GetSecurityGroupIdOk() (*string, bool) {
	if o == nil || o.SecurityGroupId == nil {
		return nil, false
	}
	return o.SecurityGroupId, true
}

// HasSecurityGroupId returns a boolean if a field has been set.
func (o *VmRestorePointDefaultNetworkSettings) HasSecurityGroupId() bool {
	if o != nil && o.SecurityGroupId != nil {
		return true
	}

	return false
}

// SetSecurityGroupId gets a reference to the given string and assigns it to the SecurityGroupId field.
func (o *VmRestorePointDefaultNetworkSettings) SetSecurityGroupId(v string) {
	o.SecurityGroupId = &v
}

func (o VmRestorePointDefaultNetworkSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["restorePointId"] = o.RestorePointId
	}
	if o.NetworkName != nil {
		toSerialize["networkName"] = o.NetworkName
	}
	if o.NetworkId != nil {
		toSerialize["networkId"] = o.NetworkId
	}
	if o.SubNetworkName != nil {
		toSerialize["subNetworkName"] = o.SubNetworkName
	}
	if o.SubNetworkId != nil {
		toSerialize["subNetworkId"] = o.SubNetworkId
	}
	if o.SecurityGroupName != nil {
		toSerialize["securityGroupName"] = o.SecurityGroupName
	}
	if o.SecurityGroupId != nil {
		toSerialize["securityGroupId"] = o.SecurityGroupId
	}
	return json.Marshal(toSerialize)
}

type NullableVmRestorePointDefaultNetworkSettings struct {
	value *VmRestorePointDefaultNetworkSettings
	isSet bool
}

func (v NullableVmRestorePointDefaultNetworkSettings) Get() *VmRestorePointDefaultNetworkSettings {
	return v.value
}

func (v *NullableVmRestorePointDefaultNetworkSettings) Set(val *VmRestorePointDefaultNetworkSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableVmRestorePointDefaultNetworkSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableVmRestorePointDefaultNetworkSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmRestorePointDefaultNetworkSettings(val *VmRestorePointDefaultNetworkSettings) *NullableVmRestorePointDefaultNetworkSettings {
	return &NullableVmRestorePointDefaultNetworkSettings{value: val, isSet: true}
}

func (v NullableVmRestorePointDefaultNetworkSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmRestorePointDefaultNetworkSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



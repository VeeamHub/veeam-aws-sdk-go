/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CostEstimationsPage struct for CostEstimationsPage
type CostEstimationsPage struct {
	TotalCount int32 `json:"totalCount"`
	Items []CostEstimationItem `json:"items"`
	IsEmpty bool `json:"isEmpty"`
	TotalSnapshotCost *float64 `json:"totalSnapshotCost,omitempty"`
	TotalReplicaCost *float64 `json:"totalReplicaCost,omitempty"`
	TotalBackupCost *float64 `json:"totalBackupCost,omitempty"`
	TotalTrafficCost float64 `json:"totalTrafficCost"`
	TotalTransactionCost float64 `json:"totalTransactionCost"`
	TotalCost float64 `json:"totalCost"`
	Links *[]Link `json:"_links,omitempty"`
}

// NewCostEstimationsPage instantiates a new CostEstimationsPage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCostEstimationsPage(totalCount int32, items []CostEstimationItem, isEmpty bool, totalTrafficCost float64, totalTransactionCost float64, totalCost float64) *CostEstimationsPage {
	this := CostEstimationsPage{}
	this.TotalCount = totalCount
	this.Items = items
	this.IsEmpty = isEmpty
	this.TotalTrafficCost = totalTrafficCost
	this.TotalTransactionCost = totalTransactionCost
	this.TotalCost = totalCost
	return &this
}

// NewCostEstimationsPageWithDefaults instantiates a new CostEstimationsPage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCostEstimationsPageWithDefaults() *CostEstimationsPage {
	this := CostEstimationsPage{}
	return &this
}

// GetTotalCount returns the TotalCount field value
func (o *CostEstimationsPage) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *CostEstimationsPage) SetTotalCount(v int32) {
	o.TotalCount = v
}

// GetItems returns the Items field value
func (o *CostEstimationsPage) GetItems() []CostEstimationItem {
	if o == nil {
		var ret []CostEstimationItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetItemsOk() (*[]CostEstimationItem, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Items, true
}

// SetItems sets field value
func (o *CostEstimationsPage) SetItems(v []CostEstimationItem) {
	o.Items = v
}

// GetIsEmpty returns the IsEmpty field value
func (o *CostEstimationsPage) GetIsEmpty() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEmpty
}

// GetIsEmptyOk returns a tuple with the IsEmpty field value
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetIsEmptyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsEmpty, true
}

// SetIsEmpty sets field value
func (o *CostEstimationsPage) SetIsEmpty(v bool) {
	o.IsEmpty = v
}

// GetTotalSnapshotCost returns the TotalSnapshotCost field value if set, zero value otherwise.
func (o *CostEstimationsPage) GetTotalSnapshotCost() float64 {
	if o == nil || o.TotalSnapshotCost == nil {
		var ret float64
		return ret
	}
	return *o.TotalSnapshotCost
}

// GetTotalSnapshotCostOk returns a tuple with the TotalSnapshotCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalSnapshotCostOk() (*float64, bool) {
	if o == nil || o.TotalSnapshotCost == nil {
		return nil, false
	}
	return o.TotalSnapshotCost, true
}

// HasTotalSnapshotCost returns a boolean if a field has been set.
func (o *CostEstimationsPage) HasTotalSnapshotCost() bool {
	if o != nil && o.TotalSnapshotCost != nil {
		return true
	}

	return false
}

// SetTotalSnapshotCost gets a reference to the given float64 and assigns it to the TotalSnapshotCost field.
func (o *CostEstimationsPage) SetTotalSnapshotCost(v float64) {
	o.TotalSnapshotCost = &v
}

// GetTotalReplicaCost returns the TotalReplicaCost field value if set, zero value otherwise.
func (o *CostEstimationsPage) GetTotalReplicaCost() float64 {
	if o == nil || o.TotalReplicaCost == nil {
		var ret float64
		return ret
	}
	return *o.TotalReplicaCost
}

// GetTotalReplicaCostOk returns a tuple with the TotalReplicaCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalReplicaCostOk() (*float64, bool) {
	if o == nil || o.TotalReplicaCost == nil {
		return nil, false
	}
	return o.TotalReplicaCost, true
}

// HasTotalReplicaCost returns a boolean if a field has been set.
func (o *CostEstimationsPage) HasTotalReplicaCost() bool {
	if o != nil && o.TotalReplicaCost != nil {
		return true
	}

	return false
}

// SetTotalReplicaCost gets a reference to the given float64 and assigns it to the TotalReplicaCost field.
func (o *CostEstimationsPage) SetTotalReplicaCost(v float64) {
	o.TotalReplicaCost = &v
}

// GetTotalBackupCost returns the TotalBackupCost field value if set, zero value otherwise.
func (o *CostEstimationsPage) GetTotalBackupCost() float64 {
	if o == nil || o.TotalBackupCost == nil {
		var ret float64
		return ret
	}
	return *o.TotalBackupCost
}

// GetTotalBackupCostOk returns a tuple with the TotalBackupCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalBackupCostOk() (*float64, bool) {
	if o == nil || o.TotalBackupCost == nil {
		return nil, false
	}
	return o.TotalBackupCost, true
}

// HasTotalBackupCost returns a boolean if a field has been set.
func (o *CostEstimationsPage) HasTotalBackupCost() bool {
	if o != nil && o.TotalBackupCost != nil {
		return true
	}

	return false
}

// SetTotalBackupCost gets a reference to the given float64 and assigns it to the TotalBackupCost field.
func (o *CostEstimationsPage) SetTotalBackupCost(v float64) {
	o.TotalBackupCost = &v
}

// GetTotalTrafficCost returns the TotalTrafficCost field value
func (o *CostEstimationsPage) GetTotalTrafficCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalTrafficCost
}

// GetTotalTrafficCostOk returns a tuple with the TotalTrafficCost field value
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalTrafficCostOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalTrafficCost, true
}

// SetTotalTrafficCost sets field value
func (o *CostEstimationsPage) SetTotalTrafficCost(v float64) {
	o.TotalTrafficCost = v
}

// GetTotalTransactionCost returns the TotalTransactionCost field value
func (o *CostEstimationsPage) GetTotalTransactionCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalTransactionCost
}

// GetTotalTransactionCostOk returns a tuple with the TotalTransactionCost field value
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalTransactionCostOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalTransactionCost, true
}

// SetTotalTransactionCost sets field value
func (o *CostEstimationsPage) SetTotalTransactionCost(v float64) {
	o.TotalTransactionCost = v
}

// GetTotalCost returns the TotalCost field value
func (o *CostEstimationsPage) GetTotalCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetTotalCostOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalCost, true
}

// SetTotalCost sets field value
func (o *CostEstimationsPage) SetTotalCost(v float64) {
	o.TotalCost = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CostEstimationsPage) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationsPage) GetLinksOk() (*[]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CostEstimationsPage) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *CostEstimationsPage) SetLinks(v []Link) {
	o.Links = &v
}

func (o CostEstimationsPage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["totalCount"] = o.TotalCount
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["isEmpty"] = o.IsEmpty
	}
	if o.TotalSnapshotCost != nil {
		toSerialize["totalSnapshotCost"] = o.TotalSnapshotCost
	}
	if o.TotalReplicaCost != nil {
		toSerialize["totalReplicaCost"] = o.TotalReplicaCost
	}
	if o.TotalBackupCost != nil {
		toSerialize["totalBackupCost"] = o.TotalBackupCost
	}
	if true {
		toSerialize["totalTrafficCost"] = o.TotalTrafficCost
	}
	if true {
		toSerialize["totalTransactionCost"] = o.TotalTransactionCost
	}
	if true {
		toSerialize["totalCost"] = o.TotalCost
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableCostEstimationsPage struct {
	value *CostEstimationsPage
	isSet bool
}

func (v NullableCostEstimationsPage) Get() *CostEstimationsPage {
	return v.value
}

func (v *NullableCostEstimationsPage) Set(val *CostEstimationsPage) {
	v.value = val
	v.isSet = true
}

func (v NullableCostEstimationsPage) IsSet() bool {
	return v.isSet
}

func (v *NullableCostEstimationsPage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCostEstimationsPage(val *CostEstimationsPage) *NullableCostEstimationsPage {
	return &NullableCostEstimationsPage{value: val, isSet: true}
}

func (v NullableCostEstimationsPage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCostEstimationsPage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// SessionTypes the model 'SessionTypes'
type SessionTypes string

// List of SessionTypes
const (
	SESSIONTYPES_POLICY SessionTypes = "Policy"
	SESSIONTYPES_JOB SessionTypes = "Job"
	SESSIONTYPES_TASK SessionTypes = "Task"
	SESSIONTYPES_USER_POLICY SessionTypes = "UserPolicy"
	SESSIONTYPES_RETENTION_ACTIVITY SessionTypes = "RetentionActivity"
	SESSIONTYPES_RESTORE_TASK SessionTypes = "RestoreTask"
	SESSIONTYPES_FLR_TASK SessionTypes = "FLRTask"
	SESSIONTYPES_SELF_BACKUP_ACTIVITY SessionTypes = "SelfBackupActivity"
	SESSIONTYPES_IMPORT_POLICY SessionTypes = "ImportPolicy"
	SESSIONTYPES_TOMBSTONE_RETENTION SessionTypes = "TombstoneRetention"
)

func (v *SessionTypes) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SessionTypes(value)
	for _, existing := range []SessionTypes{ "Policy", "Job", "Task", "UserPolicy", "RetentionActivity", "RestoreTask", "FLRTask", "SelfBackupActivity", "ImportPolicy", "TombstoneRetention",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SessionTypes", value)
}

// Ptr returns reference to SessionTypes value
func (v SessionTypes) Ptr() *SessionTypes {
	return &v
}

type NullableSessionTypes struct {
	value *SessionTypes
	isSet bool
}

func (v NullableSessionTypes) Get() *SessionTypes {
	return v.value
}

func (v *NullableSessionTypes) Set(val *SessionTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionTypes(val *SessionTypes) *NullableSessionTypes {
	return &NullableSessionTypes{value: val, isSet: true}
}

func (v NullableSessionTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


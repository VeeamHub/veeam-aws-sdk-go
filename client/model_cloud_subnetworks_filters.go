/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CloudSubnetworksFilters struct for CloudSubnetworksFilters
type CloudSubnetworksFilters struct {
	CloudNetworkId *string `json:"cloudNetworkId,omitempty"`
	AvailabilityZone *string `json:"availabilityZone,omitempty"`
	Offset *int32 `json:"Offset,omitempty"`
	Limit *int32 `json:"Limit,omitempty"`
}

// NewCloudSubnetworksFilters instantiates a new CloudSubnetworksFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudSubnetworksFilters() *CloudSubnetworksFilters {
	this := CloudSubnetworksFilters{}
	return &this
}

// NewCloudSubnetworksFiltersWithDefaults instantiates a new CloudSubnetworksFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudSubnetworksFiltersWithDefaults() *CloudSubnetworksFilters {
	this := CloudSubnetworksFilters{}
	return &this
}

// GetCloudNetworkId returns the CloudNetworkId field value if set, zero value otherwise.
func (o *CloudSubnetworksFilters) GetCloudNetworkId() string {
	if o == nil || o.CloudNetworkId == nil {
		var ret string
		return ret
	}
	return *o.CloudNetworkId
}

// GetCloudNetworkIdOk returns a tuple with the CloudNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSubnetworksFilters) GetCloudNetworkIdOk() (*string, bool) {
	if o == nil || o.CloudNetworkId == nil {
		return nil, false
	}
	return o.CloudNetworkId, true
}

// HasCloudNetworkId returns a boolean if a field has been set.
func (o *CloudSubnetworksFilters) HasCloudNetworkId() bool {
	if o != nil && o.CloudNetworkId != nil {
		return true
	}

	return false
}

// SetCloudNetworkId gets a reference to the given string and assigns it to the CloudNetworkId field.
func (o *CloudSubnetworksFilters) SetCloudNetworkId(v string) {
	o.CloudNetworkId = &v
}

// GetAvailabilityZone returns the AvailabilityZone field value if set, zero value otherwise.
func (o *CloudSubnetworksFilters) GetAvailabilityZone() string {
	if o == nil || o.AvailabilityZone == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSubnetworksFilters) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil || o.AvailabilityZone == nil {
		return nil, false
	}
	return o.AvailabilityZone, true
}

// HasAvailabilityZone returns a boolean if a field has been set.
func (o *CloudSubnetworksFilters) HasAvailabilityZone() bool {
	if o != nil && o.AvailabilityZone != nil {
		return true
	}

	return false
}

// SetAvailabilityZone gets a reference to the given string and assigns it to the AvailabilityZone field.
func (o *CloudSubnetworksFilters) SetAvailabilityZone(v string) {
	o.AvailabilityZone = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *CloudSubnetworksFilters) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSubnetworksFilters) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *CloudSubnetworksFilters) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *CloudSubnetworksFilters) SetOffset(v int32) {
	o.Offset = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *CloudSubnetworksFilters) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudSubnetworksFilters) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *CloudSubnetworksFilters) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *CloudSubnetworksFilters) SetLimit(v int32) {
	o.Limit = &v
}

func (o CloudSubnetworksFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudNetworkId != nil {
		toSerialize["cloudNetworkId"] = o.CloudNetworkId
	}
	if o.AvailabilityZone != nil {
		toSerialize["availabilityZone"] = o.AvailabilityZone
	}
	if o.Offset != nil {
		toSerialize["Offset"] = o.Offset
	}
	if o.Limit != nil {
		toSerialize["Limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableCloudSubnetworksFilters struct {
	value *CloudSubnetworksFilters
	isSet bool
}

func (v NullableCloudSubnetworksFilters) Get() *CloudSubnetworksFilters {
	return v.value
}

func (v *NullableCloudSubnetworksFilters) Set(val *CloudSubnetworksFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudSubnetworksFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudSubnetworksFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudSubnetworksFilters(val *CloudSubnetworksFilters) *NullableCloudSubnetworksFilters {
	return &NullableCloudSubnetworksFilters{value: val, isSet: true}
}

func (v NullableCloudSubnetworksFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudSubnetworksFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AuthorizationCode struct for AuthorizationCode
type AuthorizationCode struct {
	Code string `json:"code"`
}

// NewAuthorizationCode instantiates a new AuthorizationCode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationCode(code string) *AuthorizationCode {
	this := AuthorizationCode{}
	this.Code = code
	return &this
}

// NewAuthorizationCodeWithDefaults instantiates a new AuthorizationCode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationCodeWithDefaults() *AuthorizationCode {
	this := AuthorizationCode{}
	return &this
}

// GetCode returns the Code field value
func (o *AuthorizationCode) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *AuthorizationCode) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *AuthorizationCode) SetCode(v string) {
	o.Code = v
}

func (o AuthorizationCode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizationCode struct {
	value *AuthorizationCode
	isSet bool
}

func (v NullableAuthorizationCode) Get() *AuthorizationCode {
	return v.value
}

func (v *NullableAuthorizationCode) Set(val *AuthorizationCode) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationCode) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationCode(val *AuthorizationCode) *NullableAuthorizationCode {
	return &NullableAuthorizationCode{value: val, isSet: true}
}

func (v NullableAuthorizationCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// DiskBulkRestoreToAlternativeOptions struct for DiskBulkRestoreToAlternativeOptions
type DiskBulkRestoreToAlternativeOptions struct {
	AvailabilityZoneId string `json:"availabilityZoneId"`
	PreserveEncryptionForVolumes bool `json:"preserveEncryptionForVolumes"`
	EncryptionKeyId *string `json:"encryptionKeyId,omitempty"`
}

// NewDiskBulkRestoreToAlternativeOptions instantiates a new DiskBulkRestoreToAlternativeOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskBulkRestoreToAlternativeOptions(availabilityZoneId string, preserveEncryptionForVolumes bool) *DiskBulkRestoreToAlternativeOptions {
	this := DiskBulkRestoreToAlternativeOptions{}
	this.AvailabilityZoneId = availabilityZoneId
	this.PreserveEncryptionForVolumes = preserveEncryptionForVolumes
	return &this
}

// NewDiskBulkRestoreToAlternativeOptionsWithDefaults instantiates a new DiskBulkRestoreToAlternativeOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskBulkRestoreToAlternativeOptionsWithDefaults() *DiskBulkRestoreToAlternativeOptions {
	this := DiskBulkRestoreToAlternativeOptions{}
	return &this
}

// GetAvailabilityZoneId returns the AvailabilityZoneId field value
func (o *DiskBulkRestoreToAlternativeOptions) GetAvailabilityZoneId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvailabilityZoneId
}

// GetAvailabilityZoneIdOk returns a tuple with the AvailabilityZoneId field value
// and a boolean to check if the value has been set.
func (o *DiskBulkRestoreToAlternativeOptions) GetAvailabilityZoneIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AvailabilityZoneId, true
}

// SetAvailabilityZoneId sets field value
func (o *DiskBulkRestoreToAlternativeOptions) SetAvailabilityZoneId(v string) {
	o.AvailabilityZoneId = v
}

// GetPreserveEncryptionForVolumes returns the PreserveEncryptionForVolumes field value
func (o *DiskBulkRestoreToAlternativeOptions) GetPreserveEncryptionForVolumes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PreserveEncryptionForVolumes
}

// GetPreserveEncryptionForVolumesOk returns a tuple with the PreserveEncryptionForVolumes field value
// and a boolean to check if the value has been set.
func (o *DiskBulkRestoreToAlternativeOptions) GetPreserveEncryptionForVolumesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PreserveEncryptionForVolumes, true
}

// SetPreserveEncryptionForVolumes sets field value
func (o *DiskBulkRestoreToAlternativeOptions) SetPreserveEncryptionForVolumes(v bool) {
	o.PreserveEncryptionForVolumes = v
}

// GetEncryptionKeyId returns the EncryptionKeyId field value if set, zero value otherwise.
func (o *DiskBulkRestoreToAlternativeOptions) GetEncryptionKeyId() string {
	if o == nil || o.EncryptionKeyId == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKeyId
}

// GetEncryptionKeyIdOk returns a tuple with the EncryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskBulkRestoreToAlternativeOptions) GetEncryptionKeyIdOk() (*string, bool) {
	if o == nil || o.EncryptionKeyId == nil {
		return nil, false
	}
	return o.EncryptionKeyId, true
}

// HasEncryptionKeyId returns a boolean if a field has been set.
func (o *DiskBulkRestoreToAlternativeOptions) HasEncryptionKeyId() bool {
	if o != nil && o.EncryptionKeyId != nil {
		return true
	}

	return false
}

// SetEncryptionKeyId gets a reference to the given string and assigns it to the EncryptionKeyId field.
func (o *DiskBulkRestoreToAlternativeOptions) SetEncryptionKeyId(v string) {
	o.EncryptionKeyId = &v
}

func (o DiskBulkRestoreToAlternativeOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["availabilityZoneId"] = o.AvailabilityZoneId
	}
	if true {
		toSerialize["preserveEncryptionForVolumes"] = o.PreserveEncryptionForVolumes
	}
	if o.EncryptionKeyId != nil {
		toSerialize["encryptionKeyId"] = o.EncryptionKeyId
	}
	return json.Marshal(toSerialize)
}

type NullableDiskBulkRestoreToAlternativeOptions struct {
	value *DiskBulkRestoreToAlternativeOptions
	isSet bool
}

func (v NullableDiskBulkRestoreToAlternativeOptions) Get() *DiskBulkRestoreToAlternativeOptions {
	return v.value
}

func (v *NullableDiskBulkRestoreToAlternativeOptions) Set(val *DiskBulkRestoreToAlternativeOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskBulkRestoreToAlternativeOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskBulkRestoreToAlternativeOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskBulkRestoreToAlternativeOptions(val *DiskBulkRestoreToAlternativeOptions) *NullableDiskBulkRestoreToAlternativeOptions {
	return &NullableDiskBulkRestoreToAlternativeOptions{value: val, isSet: true}
}

func (v NullableDiskBulkRestoreToAlternativeOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskBulkRestoreToAlternativeOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// UserMfaSetup struct for UserMfaSetup
type UserMfaSetup struct {
	Recreate *bool `json:"recreate,omitempty"`
}

// NewUserMfaSetup instantiates a new UserMfaSetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserMfaSetup() *UserMfaSetup {
	this := UserMfaSetup{}
	return &this
}

// NewUserMfaSetupWithDefaults instantiates a new UserMfaSetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserMfaSetupWithDefaults() *UserMfaSetup {
	this := UserMfaSetup{}
	return &this
}

// GetRecreate returns the Recreate field value if set, zero value otherwise.
func (o *UserMfaSetup) GetRecreate() bool {
	if o == nil || o.Recreate == nil {
		var ret bool
		return ret
	}
	return *o.Recreate
}

// GetRecreateOk returns a tuple with the Recreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserMfaSetup) GetRecreateOk() (*bool, bool) {
	if o == nil || o.Recreate == nil {
		return nil, false
	}
	return o.Recreate, true
}

// HasRecreate returns a boolean if a field has been set.
func (o *UserMfaSetup) HasRecreate() bool {
	if o != nil && o.Recreate != nil {
		return true
	}

	return false
}

// SetRecreate gets a reference to the given bool and assigns it to the Recreate field.
func (o *UserMfaSetup) SetRecreate(v bool) {
	o.Recreate = &v
}

func (o UserMfaSetup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Recreate != nil {
		toSerialize["recreate"] = o.Recreate
	}
	return json.Marshal(toSerialize)
}

type NullableUserMfaSetup struct {
	value *UserMfaSetup
	isSet bool
}

func (v NullableUserMfaSetup) Get() *UserMfaSetup {
	return v.value
}

func (v *NullableUserMfaSetup) Set(val *UserMfaSetup) {
	v.value = val
	v.isSet = true
}

func (v NullableUserMfaSetup) IsSet() bool {
	return v.isSet
}

func (v *NullableUserMfaSetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserMfaSetup(val *UserMfaSetup) *NullableUserMfaSetup {
	return &NullableUserMfaSetup{value: val, isSet: true}
}

func (v NullableUserMfaSetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserMfaSetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonAccountIAMRole struct for AmazonAccountIAMRole
type AmazonAccountIAMRole struct {
	ParentAmazonAccountId *string `json:"parentAmazonAccountId,omitempty"`
	RoleName string `json:"roleName"`
	IsDefault bool `json:"isDefault"`
}

// NewAmazonAccountIAMRole instantiates a new AmazonAccountIAMRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonAccountIAMRole(roleName string, isDefault bool) *AmazonAccountIAMRole {
	this := AmazonAccountIAMRole{}
	this.RoleName = roleName
	this.IsDefault = isDefault
	return &this
}

// NewAmazonAccountIAMRoleWithDefaults instantiates a new AmazonAccountIAMRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonAccountIAMRoleWithDefaults() *AmazonAccountIAMRole {
	this := AmazonAccountIAMRole{}
	return &this
}

// GetParentAmazonAccountId returns the ParentAmazonAccountId field value if set, zero value otherwise.
func (o *AmazonAccountIAMRole) GetParentAmazonAccountId() string {
	if o == nil || o.ParentAmazonAccountId == nil {
		var ret string
		return ret
	}
	return *o.ParentAmazonAccountId
}

// GetParentAmazonAccountIdOk returns a tuple with the ParentAmazonAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccountIAMRole) GetParentAmazonAccountIdOk() (*string, bool) {
	if o == nil || o.ParentAmazonAccountId == nil {
		return nil, false
	}
	return o.ParentAmazonAccountId, true
}

// HasParentAmazonAccountId returns a boolean if a field has been set.
func (o *AmazonAccountIAMRole) HasParentAmazonAccountId() bool {
	if o != nil && o.ParentAmazonAccountId != nil {
		return true
	}

	return false
}

// SetParentAmazonAccountId gets a reference to the given string and assigns it to the ParentAmazonAccountId field.
func (o *AmazonAccountIAMRole) SetParentAmazonAccountId(v string) {
	o.ParentAmazonAccountId = &v
}

// GetRoleName returns the RoleName field value
func (o *AmazonAccountIAMRole) GetRoleName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value
// and a boolean to check if the value has been set.
func (o *AmazonAccountIAMRole) GetRoleNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoleName, true
}

// SetRoleName sets field value
func (o *AmazonAccountIAMRole) SetRoleName(v string) {
	o.RoleName = v
}

// GetIsDefault returns the IsDefault field value
func (o *AmazonAccountIAMRole) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *AmazonAccountIAMRole) GetIsDefaultOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *AmazonAccountIAMRole) SetIsDefault(v bool) {
	o.IsDefault = v
}

func (o AmazonAccountIAMRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentAmazonAccountId != nil {
		toSerialize["parentAmazonAccountId"] = o.ParentAmazonAccountId
	}
	if true {
		toSerialize["roleName"] = o.RoleName
	}
	if true {
		toSerialize["isDefault"] = o.IsDefault
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonAccountIAMRole struct {
	value *AmazonAccountIAMRole
	isSet bool
}

func (v NullableAmazonAccountIAMRole) Get() *AmazonAccountIAMRole {
	return v.value
}

func (v *NullableAmazonAccountIAMRole) Set(val *AmazonAccountIAMRole) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonAccountIAMRole) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonAccountIAMRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonAccountIAMRole(val *AmazonAccountIAMRole) *NullableAmazonAccountIAMRole {
	return &NullableAmazonAccountIAMRole{value: val, isSet: true}
}

func (v NullableAmazonAccountIAMRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonAccountIAMRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicyItem struct for PolicyItem
type PolicyItem struct {
	Name *string `json:"name,omitempty"`
	Tag *Link `json:"tag,omitempty"`
	VirtualMachine *Link `json:"virtualMachine,omitempty"`
	DeletedItem *PolicyItemDeletedFromAmazon `json:"deletedItem,omitempty"`
}

// NewPolicyItem instantiates a new PolicyItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyItem() *PolicyItem {
	this := PolicyItem{}
	return &this
}

// NewPolicyItemWithDefaults instantiates a new PolicyItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyItemWithDefaults() *PolicyItem {
	this := PolicyItem{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyItem) SetName(v string) {
	o.Name = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *PolicyItem) GetTag() Link {
	if o == nil || o.Tag == nil {
		var ret Link
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyItem) GetTagOk() (*Link, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *PolicyItem) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given Link and assigns it to the Tag field.
func (o *PolicyItem) SetTag(v Link) {
	o.Tag = &v
}

// GetVirtualMachine returns the VirtualMachine field value if set, zero value otherwise.
func (o *PolicyItem) GetVirtualMachine() Link {
	if o == nil || o.VirtualMachine == nil {
		var ret Link
		return ret
	}
	return *o.VirtualMachine
}

// GetVirtualMachineOk returns a tuple with the VirtualMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyItem) GetVirtualMachineOk() (*Link, bool) {
	if o == nil || o.VirtualMachine == nil {
		return nil, false
	}
	return o.VirtualMachine, true
}

// HasVirtualMachine returns a boolean if a field has been set.
func (o *PolicyItem) HasVirtualMachine() bool {
	if o != nil && o.VirtualMachine != nil {
		return true
	}

	return false
}

// SetVirtualMachine gets a reference to the given Link and assigns it to the VirtualMachine field.
func (o *PolicyItem) SetVirtualMachine(v Link) {
	o.VirtualMachine = &v
}

// GetDeletedItem returns the DeletedItem field value if set, zero value otherwise.
func (o *PolicyItem) GetDeletedItem() PolicyItemDeletedFromAmazon {
	if o == nil || o.DeletedItem == nil {
		var ret PolicyItemDeletedFromAmazon
		return ret
	}
	return *o.DeletedItem
}

// GetDeletedItemOk returns a tuple with the DeletedItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyItem) GetDeletedItemOk() (*PolicyItemDeletedFromAmazon, bool) {
	if o == nil || o.DeletedItem == nil {
		return nil, false
	}
	return o.DeletedItem, true
}

// HasDeletedItem returns a boolean if a field has been set.
func (o *PolicyItem) HasDeletedItem() bool {
	if o != nil && o.DeletedItem != nil {
		return true
	}

	return false
}

// SetDeletedItem gets a reference to the given PolicyItemDeletedFromAmazon and assigns it to the DeletedItem field.
func (o *PolicyItem) SetDeletedItem(v PolicyItemDeletedFromAmazon) {
	o.DeletedItem = &v
}

func (o PolicyItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.VirtualMachine != nil {
		toSerialize["virtualMachine"] = o.VirtualMachine
	}
	if o.DeletedItem != nil {
		toSerialize["deletedItem"] = o.DeletedItem
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyItem struct {
	value *PolicyItem
	isSet bool
}

func (v NullablePolicyItem) Get() *PolicyItem {
	return v.value
}

func (v *NullablePolicyItem) Set(val *PolicyItem) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyItem) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyItem(val *PolicyItem) *NullablePolicyItem {
	return &NullablePolicyItem{value: val, isSet: true}
}

func (v NullablePolicyItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



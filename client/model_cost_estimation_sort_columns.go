/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// CostEstimationSortColumns the model 'CostEstimationSortColumns'
type CostEstimationSortColumns string

// List of CostEstimationSortColumns
const (
	COSTESTIMATIONSORTCOLUMNS_VIRTUAL_MACHINE_NAME_ASC CostEstimationSortColumns = "virtualMachineNameAsc"
	COSTESTIMATIONSORTCOLUMNS_VIRTUAL_MACHINE_NAME_DESC CostEstimationSortColumns = "virtualMachineNameDesc"
	COSTESTIMATIONSORTCOLUMNS_SNAPSHOT_COST_ASC CostEstimationSortColumns = "snapshotCostAsc"
	COSTESTIMATIONSORTCOLUMNS_SNAPSHOT_COST_DESC CostEstimationSortColumns = "snapshotCostDesc"
	COSTESTIMATIONSORTCOLUMNS_REPLICA_COST_ASC CostEstimationSortColumns = "replicaCostAsc"
	COSTESTIMATIONSORTCOLUMNS_REPLICA_COST_DESC CostEstimationSortColumns = "replicaCostDesc"
	COSTESTIMATIONSORTCOLUMNS_BACKUP_COST_ASC CostEstimationSortColumns = "backupCostAsc"
	COSTESTIMATIONSORTCOLUMNS_BACKUP_COST_DESC CostEstimationSortColumns = "backupCostDesc"
	COSTESTIMATIONSORTCOLUMNS_TRAFFIC_ASC CostEstimationSortColumns = "trafficAsc"
	COSTESTIMATIONSORTCOLUMNS_TRAFFIC_DESC CostEstimationSortColumns = "trafficDesc"
	COSTESTIMATIONSORTCOLUMNS_TRANSACTION_ASC CostEstimationSortColumns = "transactionAsc"
	COSTESTIMATIONSORTCOLUMNS_TRANSACTION_DESC CostEstimationSortColumns = "transactionDesc"
	COSTESTIMATIONSORTCOLUMNS_TOTAL_ASC CostEstimationSortColumns = "totalAsc"
	COSTESTIMATIONSORTCOLUMNS_TOTAL_DESC CostEstimationSortColumns = "totalDesc"
)

func (v *CostEstimationSortColumns) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CostEstimationSortColumns(value)
	for _, existing := range []CostEstimationSortColumns{ "virtualMachineNameAsc", "virtualMachineNameDesc", "snapshotCostAsc", "snapshotCostDesc", "replicaCostAsc", "replicaCostDesc", "backupCostAsc", "backupCostDesc", "trafficAsc", "trafficDesc", "transactionAsc", "transactionDesc", "totalAsc", "totalDesc",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CostEstimationSortColumns", value)
}

// Ptr returns reference to CostEstimationSortColumns value
func (v CostEstimationSortColumns) Ptr() *CostEstimationSortColumns {
	return &v
}

type NullableCostEstimationSortColumns struct {
	value *CostEstimationSortColumns
	isSet bool
}

func (v NullableCostEstimationSortColumns) Get() *CostEstimationSortColumns {
	return v.value
}

func (v *NullableCostEstimationSortColumns) Set(val *CostEstimationSortColumns) {
	v.value = val
	v.isSet = true
}

func (v NullableCostEstimationSortColumns) IsSet() bool {
	return v.isSet
}

func (v *NullableCostEstimationSortColumns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCostEstimationSortColumns(val *CostEstimationSortColumns) *NullableCostEstimationSortColumns {
	return &NullableCostEstimationSortColumns{value: val, isSet: true}
}

func (v NullableCostEstimationSortColumns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCostEstimationSortColumns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


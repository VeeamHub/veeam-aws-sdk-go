/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicyBackupSettings struct for PolicyBackupSettings
type PolicyBackupSettings struct {
	TargetRepositoryId *string `json:"targetRepositoryId,omitempty"`
}

// NewPolicyBackupSettings instantiates a new PolicyBackupSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyBackupSettings() *PolicyBackupSettings {
	this := PolicyBackupSettings{}
	return &this
}

// NewPolicyBackupSettingsWithDefaults instantiates a new PolicyBackupSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyBackupSettingsWithDefaults() *PolicyBackupSettings {
	this := PolicyBackupSettings{}
	return &this
}

// GetTargetRepositoryId returns the TargetRepositoryId field value if set, zero value otherwise.
func (o *PolicyBackupSettings) GetTargetRepositoryId() string {
	if o == nil || o.TargetRepositoryId == nil {
		var ret string
		return ret
	}
	return *o.TargetRepositoryId
}

// GetTargetRepositoryIdOk returns a tuple with the TargetRepositoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyBackupSettings) GetTargetRepositoryIdOk() (*string, bool) {
	if o == nil || o.TargetRepositoryId == nil {
		return nil, false
	}
	return o.TargetRepositoryId, true
}

// HasTargetRepositoryId returns a boolean if a field has been set.
func (o *PolicyBackupSettings) HasTargetRepositoryId() bool {
	if o != nil && o.TargetRepositoryId != nil {
		return true
	}

	return false
}

// SetTargetRepositoryId gets a reference to the given string and assigns it to the TargetRepositoryId field.
func (o *PolicyBackupSettings) SetTargetRepositoryId(v string) {
	o.TargetRepositoryId = &v
}

func (o PolicyBackupSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TargetRepositoryId != nil {
		toSerialize["targetRepositoryId"] = o.TargetRepositoryId
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyBackupSettings struct {
	value *PolicyBackupSettings
	isSet bool
}

func (v NullablePolicyBackupSettings) Get() *PolicyBackupSettings {
	return v.value
}

func (v *NullablePolicyBackupSettings) Set(val *PolicyBackupSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyBackupSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyBackupSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyBackupSettings(val *PolicyBackupSettings) *NullablePolicyBackupSettings {
	return &NullablePolicyBackupSettings{value: val, isSet: true}
}

func (v NullablePolicyBackupSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyBackupSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicyBackupItems struct for PolicyBackupItems
type PolicyBackupItems struct {
	VirtualMachineIds *[]string `json:"virtualMachineIds,omitempty"`
	TagIds *[]string `json:"tagIds,omitempty"`
}

// NewPolicyBackupItems instantiates a new PolicyBackupItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyBackupItems() *PolicyBackupItems {
	this := PolicyBackupItems{}
	return &this
}

// NewPolicyBackupItemsWithDefaults instantiates a new PolicyBackupItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyBackupItemsWithDefaults() *PolicyBackupItems {
	this := PolicyBackupItems{}
	return &this
}

// GetVirtualMachineIds returns the VirtualMachineIds field value if set, zero value otherwise.
func (o *PolicyBackupItems) GetVirtualMachineIds() []string {
	if o == nil || o.VirtualMachineIds == nil {
		var ret []string
		return ret
	}
	return *o.VirtualMachineIds
}

// GetVirtualMachineIdsOk returns a tuple with the VirtualMachineIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyBackupItems) GetVirtualMachineIdsOk() (*[]string, bool) {
	if o == nil || o.VirtualMachineIds == nil {
		return nil, false
	}
	return o.VirtualMachineIds, true
}

// HasVirtualMachineIds returns a boolean if a field has been set.
func (o *PolicyBackupItems) HasVirtualMachineIds() bool {
	if o != nil && o.VirtualMachineIds != nil {
		return true
	}

	return false
}

// SetVirtualMachineIds gets a reference to the given []string and assigns it to the VirtualMachineIds field.
func (o *PolicyBackupItems) SetVirtualMachineIds(v []string) {
	o.VirtualMachineIds = &v
}

// GetTagIds returns the TagIds field value if set, zero value otherwise.
func (o *PolicyBackupItems) GetTagIds() []string {
	if o == nil || o.TagIds == nil {
		var ret []string
		return ret
	}
	return *o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyBackupItems) GetTagIdsOk() (*[]string, bool) {
	if o == nil || o.TagIds == nil {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *PolicyBackupItems) HasTagIds() bool {
	if o != nil && o.TagIds != nil {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []string and assigns it to the TagIds field.
func (o *PolicyBackupItems) SetTagIds(v []string) {
	o.TagIds = &v
}

func (o PolicyBackupItems) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VirtualMachineIds != nil {
		toSerialize["virtualMachineIds"] = o.VirtualMachineIds
	}
	if o.TagIds != nil {
		toSerialize["tagIds"] = o.TagIds
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyBackupItems struct {
	value *PolicyBackupItems
	isSet bool
}

func (v NullablePolicyBackupItems) Get() *PolicyBackupItems {
	return v.value
}

func (v *NullablePolicyBackupItems) Set(val *PolicyBackupItems) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyBackupItems) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyBackupItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyBackupItems(val *PolicyBackupItems) *NullablePolicyBackupItems {
	return &NullablePolicyBackupItems{value: val, isSet: true}
}

func (v NullablePolicyBackupItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyBackupItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



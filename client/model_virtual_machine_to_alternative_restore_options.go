/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// VirtualMachineToAlternativeRestoreOptions struct for VirtualMachineToAlternativeRestoreOptions
type VirtualMachineToAlternativeRestoreOptions struct {
	Name string `json:"name"`
	RegionId string `json:"regionId"`
	VmType string `json:"vmType"`
	SubnetId string `json:"subnetId"`
	NetworkSecurityGroupId string `json:"networkSecurityGroupId"`
	PreserveEncryptionForVolumes bool `json:"preserveEncryptionForVolumes"`
	EncryptionKeyId *string `json:"encryptionKeyId,omitempty"`
}

// NewVirtualMachineToAlternativeRestoreOptions instantiates a new VirtualMachineToAlternativeRestoreOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualMachineToAlternativeRestoreOptions(name string, regionId string, vmType string, subnetId string, networkSecurityGroupId string, preserveEncryptionForVolumes bool) *VirtualMachineToAlternativeRestoreOptions {
	this := VirtualMachineToAlternativeRestoreOptions{}
	this.Name = name
	this.RegionId = regionId
	this.VmType = vmType
	this.SubnetId = subnetId
	this.NetworkSecurityGroupId = networkSecurityGroupId
	this.PreserveEncryptionForVolumes = preserveEncryptionForVolumes
	return &this
}

// NewVirtualMachineToAlternativeRestoreOptionsWithDefaults instantiates a new VirtualMachineToAlternativeRestoreOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualMachineToAlternativeRestoreOptionsWithDefaults() *VirtualMachineToAlternativeRestoreOptions {
	this := VirtualMachineToAlternativeRestoreOptions{}
	return &this
}

// GetName returns the Name field value
func (o *VirtualMachineToAlternativeRestoreOptions) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VirtualMachineToAlternativeRestoreOptions) SetName(v string) {
	o.Name = v
}

// GetRegionId returns the RegionId field value
func (o *VirtualMachineToAlternativeRestoreOptions) GetRegionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetRegionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RegionId, true
}

// SetRegionId sets field value
func (o *VirtualMachineToAlternativeRestoreOptions) SetRegionId(v string) {
	o.RegionId = v
}

// GetVmType returns the VmType field value
func (o *VirtualMachineToAlternativeRestoreOptions) GetVmType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmType
}

// GetVmTypeOk returns a tuple with the VmType field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetVmTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmType, true
}

// SetVmType sets field value
func (o *VirtualMachineToAlternativeRestoreOptions) SetVmType(v string) {
	o.VmType = v
}

// GetSubnetId returns the SubnetId field value
func (o *VirtualMachineToAlternativeRestoreOptions) GetSubnetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetSubnetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetId, true
}

// SetSubnetId sets field value
func (o *VirtualMachineToAlternativeRestoreOptions) SetSubnetId(v string) {
	o.SubnetId = v
}

// GetNetworkSecurityGroupId returns the NetworkSecurityGroupId field value
func (o *VirtualMachineToAlternativeRestoreOptions) GetNetworkSecurityGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkSecurityGroupId
}

// GetNetworkSecurityGroupIdOk returns a tuple with the NetworkSecurityGroupId field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetNetworkSecurityGroupIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkSecurityGroupId, true
}

// SetNetworkSecurityGroupId sets field value
func (o *VirtualMachineToAlternativeRestoreOptions) SetNetworkSecurityGroupId(v string) {
	o.NetworkSecurityGroupId = v
}

// GetPreserveEncryptionForVolumes returns the PreserveEncryptionForVolumes field value
func (o *VirtualMachineToAlternativeRestoreOptions) GetPreserveEncryptionForVolumes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PreserveEncryptionForVolumes
}

// GetPreserveEncryptionForVolumesOk returns a tuple with the PreserveEncryptionForVolumes field value
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetPreserveEncryptionForVolumesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PreserveEncryptionForVolumes, true
}

// SetPreserveEncryptionForVolumes sets field value
func (o *VirtualMachineToAlternativeRestoreOptions) SetPreserveEncryptionForVolumes(v bool) {
	o.PreserveEncryptionForVolumes = v
}

// GetEncryptionKeyId returns the EncryptionKeyId field value if set, zero value otherwise.
func (o *VirtualMachineToAlternativeRestoreOptions) GetEncryptionKeyId() string {
	if o == nil || o.EncryptionKeyId == nil {
		var ret string
		return ret
	}
	return *o.EncryptionKeyId
}

// GetEncryptionKeyIdOk returns a tuple with the EncryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) GetEncryptionKeyIdOk() (*string, bool) {
	if o == nil || o.EncryptionKeyId == nil {
		return nil, false
	}
	return o.EncryptionKeyId, true
}

// HasEncryptionKeyId returns a boolean if a field has been set.
func (o *VirtualMachineToAlternativeRestoreOptions) HasEncryptionKeyId() bool {
	if o != nil && o.EncryptionKeyId != nil {
		return true
	}

	return false
}

// SetEncryptionKeyId gets a reference to the given string and assigns it to the EncryptionKeyId field.
func (o *VirtualMachineToAlternativeRestoreOptions) SetEncryptionKeyId(v string) {
	o.EncryptionKeyId = &v
}

func (o VirtualMachineToAlternativeRestoreOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["regionId"] = o.RegionId
	}
	if true {
		toSerialize["vmType"] = o.VmType
	}
	if true {
		toSerialize["subnetId"] = o.SubnetId
	}
	if true {
		toSerialize["networkSecurityGroupId"] = o.NetworkSecurityGroupId
	}
	if true {
		toSerialize["preserveEncryptionForVolumes"] = o.PreserveEncryptionForVolumes
	}
	if o.EncryptionKeyId != nil {
		toSerialize["encryptionKeyId"] = o.EncryptionKeyId
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualMachineToAlternativeRestoreOptions struct {
	value *VirtualMachineToAlternativeRestoreOptions
	isSet bool
}

func (v NullableVirtualMachineToAlternativeRestoreOptions) Get() *VirtualMachineToAlternativeRestoreOptions {
	return v.value
}

func (v *NullableVirtualMachineToAlternativeRestoreOptions) Set(val *VirtualMachineToAlternativeRestoreOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualMachineToAlternativeRestoreOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualMachineToAlternativeRestoreOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualMachineToAlternativeRestoreOptions(val *VirtualMachineToAlternativeRestoreOptions) *NullableVirtualMachineToAlternativeRestoreOptions {
	return &NullableVirtualMachineToAlternativeRestoreOptions{value: val, isSet: true}
}

func (v NullableVirtualMachineToAlternativeRestoreOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualMachineToAlternativeRestoreOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



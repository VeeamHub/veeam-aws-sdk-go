/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonAccount struct for AmazonAccount
type AmazonAccount struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Description string `json:"description"`
	Awsid string `json:"awsid"`
	RegionType *RegionTypes `json:"regionType,omitempty"`
	AccessKeys *AmazonAccountAccessKeys `json:"accessKeys,omitempty"`
	IAMRole *AmazonAccountIAMRole `json:"IAMRole,omitempty"`
	IAMRoleFromAnotherAccount *AmazonAccountIAMRoleFromAnotherAccount `json:"IAMRoleFromAnotherAccount,omitempty"`
	Links *[]Link `json:"_links,omitempty"`
}

// NewAmazonAccount instantiates a new AmazonAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonAccount(id string, name string, description string, awsid string) *AmazonAccount {
	this := AmazonAccount{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.Awsid = awsid
	return &this
}

// NewAmazonAccountWithDefaults instantiates a new AmazonAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonAccountWithDefaults() *AmazonAccount {
	this := AmazonAccount{}
	return &this
}

// GetId returns the Id field value
func (o *AmazonAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AmazonAccount) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AmazonAccount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AmazonAccount) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *AmazonAccount) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AmazonAccount) SetDescription(v string) {
	o.Description = v
}

// GetAwsid returns the Awsid field value
func (o *AmazonAccount) GetAwsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Awsid
}

// GetAwsidOk returns a tuple with the Awsid field value
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetAwsidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Awsid, true
}

// SetAwsid sets field value
func (o *AmazonAccount) SetAwsid(v string) {
	o.Awsid = v
}

// GetRegionType returns the RegionType field value if set, zero value otherwise.
func (o *AmazonAccount) GetRegionType() RegionTypes {
	if o == nil || o.RegionType == nil {
		var ret RegionTypes
		return ret
	}
	return *o.RegionType
}

// GetRegionTypeOk returns a tuple with the RegionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetRegionTypeOk() (*RegionTypes, bool) {
	if o == nil || o.RegionType == nil {
		return nil, false
	}
	return o.RegionType, true
}

// HasRegionType returns a boolean if a field has been set.
func (o *AmazonAccount) HasRegionType() bool {
	if o != nil && o.RegionType != nil {
		return true
	}

	return false
}

// SetRegionType gets a reference to the given RegionTypes and assigns it to the RegionType field.
func (o *AmazonAccount) SetRegionType(v RegionTypes) {
	o.RegionType = &v
}

// GetAccessKeys returns the AccessKeys field value if set, zero value otherwise.
func (o *AmazonAccount) GetAccessKeys() AmazonAccountAccessKeys {
	if o == nil || o.AccessKeys == nil {
		var ret AmazonAccountAccessKeys
		return ret
	}
	return *o.AccessKeys
}

// GetAccessKeysOk returns a tuple with the AccessKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetAccessKeysOk() (*AmazonAccountAccessKeys, bool) {
	if o == nil || o.AccessKeys == nil {
		return nil, false
	}
	return o.AccessKeys, true
}

// HasAccessKeys returns a boolean if a field has been set.
func (o *AmazonAccount) HasAccessKeys() bool {
	if o != nil && o.AccessKeys != nil {
		return true
	}

	return false
}

// SetAccessKeys gets a reference to the given AmazonAccountAccessKeys and assigns it to the AccessKeys field.
func (o *AmazonAccount) SetAccessKeys(v AmazonAccountAccessKeys) {
	o.AccessKeys = &v
}

// GetIAMRole returns the IAMRole field value if set, zero value otherwise.
func (o *AmazonAccount) GetIAMRole() AmazonAccountIAMRole {
	if o == nil || o.IAMRole == nil {
		var ret AmazonAccountIAMRole
		return ret
	}
	return *o.IAMRole
}

// GetIAMRoleOk returns a tuple with the IAMRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetIAMRoleOk() (*AmazonAccountIAMRole, bool) {
	if o == nil || o.IAMRole == nil {
		return nil, false
	}
	return o.IAMRole, true
}

// HasIAMRole returns a boolean if a field has been set.
func (o *AmazonAccount) HasIAMRole() bool {
	if o != nil && o.IAMRole != nil {
		return true
	}

	return false
}

// SetIAMRole gets a reference to the given AmazonAccountIAMRole and assigns it to the IAMRole field.
func (o *AmazonAccount) SetIAMRole(v AmazonAccountIAMRole) {
	o.IAMRole = &v
}

// GetIAMRoleFromAnotherAccount returns the IAMRoleFromAnotherAccount field value if set, zero value otherwise.
func (o *AmazonAccount) GetIAMRoleFromAnotherAccount() AmazonAccountIAMRoleFromAnotherAccount {
	if o == nil || o.IAMRoleFromAnotherAccount == nil {
		var ret AmazonAccountIAMRoleFromAnotherAccount
		return ret
	}
	return *o.IAMRoleFromAnotherAccount
}

// GetIAMRoleFromAnotherAccountOk returns a tuple with the IAMRoleFromAnotherAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetIAMRoleFromAnotherAccountOk() (*AmazonAccountIAMRoleFromAnotherAccount, bool) {
	if o == nil || o.IAMRoleFromAnotherAccount == nil {
		return nil, false
	}
	return o.IAMRoleFromAnotherAccount, true
}

// HasIAMRoleFromAnotherAccount returns a boolean if a field has been set.
func (o *AmazonAccount) HasIAMRoleFromAnotherAccount() bool {
	if o != nil && o.IAMRoleFromAnotherAccount != nil {
		return true
	}

	return false
}

// SetIAMRoleFromAnotherAccount gets a reference to the given AmazonAccountIAMRoleFromAnotherAccount and assigns it to the IAMRoleFromAnotherAccount field.
func (o *AmazonAccount) SetIAMRoleFromAnotherAccount(v AmazonAccountIAMRoleFromAnotherAccount) {
	o.IAMRoleFromAnotherAccount = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AmazonAccount) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccount) GetLinksOk() (*[]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AmazonAccount) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *AmazonAccount) SetLinks(v []Link) {
	o.Links = &v
}

func (o AmazonAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["awsid"] = o.Awsid
	}
	if o.RegionType != nil {
		toSerialize["regionType"] = o.RegionType
	}
	if o.AccessKeys != nil {
		toSerialize["accessKeys"] = o.AccessKeys
	}
	if o.IAMRole != nil {
		toSerialize["IAMRole"] = o.IAMRole
	}
	if o.IAMRoleFromAnotherAccount != nil {
		toSerialize["IAMRoleFromAnotherAccount"] = o.IAMRoleFromAnotherAccount
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonAccount struct {
	value *AmazonAccount
	isSet bool
}

func (v NullableAmazonAccount) Get() *AmazonAccount {
	return v.value
}

func (v *NullableAmazonAccount) Set(val *AmazonAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonAccount(val *AmazonAccount) *NullableAmazonAccount {
	return &NullableAmazonAccount{value: val, isSet: true}
}

func (v NullableAmazonAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



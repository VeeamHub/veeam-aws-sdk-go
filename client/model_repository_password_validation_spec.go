/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RepositoryPasswordValidationSpec struct for RepositoryPasswordValidationSpec
type RepositoryPasswordValidationSpec struct {
	Password string `json:"password"`
}

// NewRepositoryPasswordValidationSpec instantiates a new RepositoryPasswordValidationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryPasswordValidationSpec(password string) *RepositoryPasswordValidationSpec {
	this := RepositoryPasswordValidationSpec{}
	this.Password = password
	return &this
}

// NewRepositoryPasswordValidationSpecWithDefaults instantiates a new RepositoryPasswordValidationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryPasswordValidationSpecWithDefaults() *RepositoryPasswordValidationSpec {
	this := RepositoryPasswordValidationSpec{}
	return &this
}

// GetPassword returns the Password field value
func (o *RepositoryPasswordValidationSpec) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *RepositoryPasswordValidationSpec) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *RepositoryPasswordValidationSpec) SetPassword(v string) {
	o.Password = v
}

func (o RepositoryPasswordValidationSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryPasswordValidationSpec struct {
	value *RepositoryPasswordValidationSpec
	isSet bool
}

func (v NullableRepositoryPasswordValidationSpec) Get() *RepositoryPasswordValidationSpec {
	return v.value
}

func (v *NullableRepositoryPasswordValidationSpec) Set(val *RepositoryPasswordValidationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryPasswordValidationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryPasswordValidationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryPasswordValidationSpec(val *RepositoryPasswordValidationSpec) *NullableRepositoryPasswordValidationSpec {
	return &NullableRepositoryPasswordValidationSpec{value: val, isSet: true}
}

func (v NullableRepositoryPasswordValidationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryPasswordValidationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// LoginSpec struct for LoginSpec
type LoginSpec struct {
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	RefreshToken *string `json:"refresh_token,omitempty"`
	// required if grant_type = authorization_code
	Code *string `json:"code,omitempty"`
	GrantType LoginGrantTypes `json:"grant_type"`
	MfaToken *string `json:"mfa_token,omitempty"`
	MfaCode *string `json:"mfa_code,omitempty"`
}

// NewLoginSpec instantiates a new LoginSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginSpec(grantType LoginGrantTypes) *LoginSpec {
	this := LoginSpec{}
	this.GrantType = grantType
	return &this
}

// NewLoginSpecWithDefaults instantiates a new LoginSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginSpecWithDefaults() *LoginSpec {
	this := LoginSpec{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *LoginSpec) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *LoginSpec) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *LoginSpec) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *LoginSpec) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *LoginSpec) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *LoginSpec) SetPassword(v string) {
	o.Password = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *LoginSpec) GetRefreshToken() string {
	if o == nil || o.RefreshToken == nil {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetRefreshTokenOk() (*string, bool) {
	if o == nil || o.RefreshToken == nil {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *LoginSpec) HasRefreshToken() bool {
	if o != nil && o.RefreshToken != nil {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *LoginSpec) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *LoginSpec) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *LoginSpec) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *LoginSpec) SetCode(v string) {
	o.Code = &v
}

// GetGrantType returns the GrantType field value
func (o *LoginSpec) GetGrantType() LoginGrantTypes {
	if o == nil {
		var ret LoginGrantTypes
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetGrantTypeOk() (*LoginGrantTypes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *LoginSpec) SetGrantType(v LoginGrantTypes) {
	o.GrantType = v
}

// GetMfaToken returns the MfaToken field value if set, zero value otherwise.
func (o *LoginSpec) GetMfaToken() string {
	if o == nil || o.MfaToken == nil {
		var ret string
		return ret
	}
	return *o.MfaToken
}

// GetMfaTokenOk returns a tuple with the MfaToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetMfaTokenOk() (*string, bool) {
	if o == nil || o.MfaToken == nil {
		return nil, false
	}
	return o.MfaToken, true
}

// HasMfaToken returns a boolean if a field has been set.
func (o *LoginSpec) HasMfaToken() bool {
	if o != nil && o.MfaToken != nil {
		return true
	}

	return false
}

// SetMfaToken gets a reference to the given string and assigns it to the MfaToken field.
func (o *LoginSpec) SetMfaToken(v string) {
	o.MfaToken = &v
}

// GetMfaCode returns the MfaCode field value if set, zero value otherwise.
func (o *LoginSpec) GetMfaCode() string {
	if o == nil || o.MfaCode == nil {
		var ret string
		return ret
	}
	return *o.MfaCode
}

// GetMfaCodeOk returns a tuple with the MfaCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginSpec) GetMfaCodeOk() (*string, bool) {
	if o == nil || o.MfaCode == nil {
		return nil, false
	}
	return o.MfaCode, true
}

// HasMfaCode returns a boolean if a field has been set.
func (o *LoginSpec) HasMfaCode() bool {
	if o != nil && o.MfaCode != nil {
		return true
	}

	return false
}

// SetMfaCode gets a reference to the given string and assigns it to the MfaCode field.
func (o *LoginSpec) SetMfaCode(v string) {
	o.MfaCode = &v
}

func (o LoginSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.RefreshToken != nil {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["grant_type"] = o.GrantType
	}
	if o.MfaToken != nil {
		toSerialize["mfa_token"] = o.MfaToken
	}
	if o.MfaCode != nil {
		toSerialize["mfa_code"] = o.MfaCode
	}
	return json.Marshal(toSerialize)
}

type NullableLoginSpec struct {
	value *LoginSpec
	isSet bool
}

func (v NullableLoginSpec) Get() *LoginSpec {
	return v.value
}

func (v *NullableLoginSpec) Set(val *LoginSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginSpec(val *LoginSpec) *NullableLoginSpec {
	return &NullableLoginSpec{value: val, isSet: true}
}

func (v NullableLoginSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



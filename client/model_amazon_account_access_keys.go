/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// AmazonAccountAccessKeys struct for AmazonAccountAccessKeys
type AmazonAccountAccessKeys struct {
	AccessKey string `json:"accessKey"`
	DefaultRegion *RegionTypes `json:"defaultRegion,omitempty"`
}

// NewAmazonAccountAccessKeys instantiates a new AmazonAccountAccessKeys object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmazonAccountAccessKeys(accessKey string) *AmazonAccountAccessKeys {
	this := AmazonAccountAccessKeys{}
	this.AccessKey = accessKey
	return &this
}

// NewAmazonAccountAccessKeysWithDefaults instantiates a new AmazonAccountAccessKeys object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmazonAccountAccessKeysWithDefaults() *AmazonAccountAccessKeys {
	this := AmazonAccountAccessKeys{}
	return &this
}

// GetAccessKey returns the AccessKey field value
func (o *AmazonAccountAccessKeys) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *AmazonAccountAccessKeys) GetAccessKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *AmazonAccountAccessKeys) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetDefaultRegion returns the DefaultRegion field value if set, zero value otherwise.
func (o *AmazonAccountAccessKeys) GetDefaultRegion() RegionTypes {
	if o == nil || o.DefaultRegion == nil {
		var ret RegionTypes
		return ret
	}
	return *o.DefaultRegion
}

// GetDefaultRegionOk returns a tuple with the DefaultRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmazonAccountAccessKeys) GetDefaultRegionOk() (*RegionTypes, bool) {
	if o == nil || o.DefaultRegion == nil {
		return nil, false
	}
	return o.DefaultRegion, true
}

// HasDefaultRegion returns a boolean if a field has been set.
func (o *AmazonAccountAccessKeys) HasDefaultRegion() bool {
	if o != nil && o.DefaultRegion != nil {
		return true
	}

	return false
}

// SetDefaultRegion gets a reference to the given RegionTypes and assigns it to the DefaultRegion field.
func (o *AmazonAccountAccessKeys) SetDefaultRegion(v RegionTypes) {
	o.DefaultRegion = &v
}

func (o AmazonAccountAccessKeys) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.DefaultRegion != nil {
		toSerialize["defaultRegion"] = o.DefaultRegion
	}
	return json.Marshal(toSerialize)
}

type NullableAmazonAccountAccessKeys struct {
	value *AmazonAccountAccessKeys
	isSet bool
}

func (v NullableAmazonAccountAccessKeys) Get() *AmazonAccountAccessKeys {
	return v.value
}

func (v *NullableAmazonAccountAccessKeys) Set(val *AmazonAccountAccessKeys) {
	v.value = val
	v.isSet = true
}

func (v NullableAmazonAccountAccessKeys) IsSet() bool {
	return v.isSet
}

func (v *NullableAmazonAccountAccessKeys) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmazonAccountAccessKeys(val *AmazonAccountAccessKeys) *NullableAmazonAccountAccessKeys {
	return &NullableAmazonAccountAccessKeys{value: val, isSet: true}
}

func (v NullableAmazonAccountAccessKeys) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmazonAccountAccessKeys) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



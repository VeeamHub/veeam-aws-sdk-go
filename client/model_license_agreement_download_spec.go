/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// LicenseAgreementDownloadSpec struct for LicenseAgreementDownloadSpec
type LicenseAgreementDownloadSpec struct {
	LicenseAgreementType LicenseAgreementTypes `json:"licenseAgreementType"`
}

// NewLicenseAgreementDownloadSpec instantiates a new LicenseAgreementDownloadSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseAgreementDownloadSpec(licenseAgreementType LicenseAgreementTypes) *LicenseAgreementDownloadSpec {
	this := LicenseAgreementDownloadSpec{}
	this.LicenseAgreementType = licenseAgreementType
	return &this
}

// NewLicenseAgreementDownloadSpecWithDefaults instantiates a new LicenseAgreementDownloadSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseAgreementDownloadSpecWithDefaults() *LicenseAgreementDownloadSpec {
	this := LicenseAgreementDownloadSpec{}
	return &this
}

// GetLicenseAgreementType returns the LicenseAgreementType field value
func (o *LicenseAgreementDownloadSpec) GetLicenseAgreementType() LicenseAgreementTypes {
	if o == nil {
		var ret LicenseAgreementTypes
		return ret
	}

	return o.LicenseAgreementType
}

// GetLicenseAgreementTypeOk returns a tuple with the LicenseAgreementType field value
// and a boolean to check if the value has been set.
func (o *LicenseAgreementDownloadSpec) GetLicenseAgreementTypeOk() (*LicenseAgreementTypes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LicenseAgreementType, true
}

// SetLicenseAgreementType sets field value
func (o *LicenseAgreementDownloadSpec) SetLicenseAgreementType(v LicenseAgreementTypes) {
	o.LicenseAgreementType = v
}

func (o LicenseAgreementDownloadSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["licenseAgreementType"] = o.LicenseAgreementType
	}
	return json.Marshal(toSerialize)
}

type NullableLicenseAgreementDownloadSpec struct {
	value *LicenseAgreementDownloadSpec
	isSet bool
}

func (v NullableLicenseAgreementDownloadSpec) Get() *LicenseAgreementDownloadSpec {
	return v.value
}

func (v *NullableLicenseAgreementDownloadSpec) Set(val *LicenseAgreementDownloadSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseAgreementDownloadSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseAgreementDownloadSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseAgreementDownloadSpec(val *LicenseAgreementDownloadSpec) *NullableLicenseAgreementDownloadSpec {
	return &NullableLicenseAgreementDownloadSpec{value: val, isSet: true}
}

func (v NullableLicenseAgreementDownloadSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseAgreementDownloadSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RetentionSettings struct for RetentionSettings
type RetentionSettings struct {
	LingeringSnapshotRetentionDisabled bool `json:"lingeringSnapshotRetentionDisabled"`
	LingeringSnapshotRetention *RetentionSetting `json:"lingeringSnapshotRetention,omitempty"`
	SessionsRetention *RetentionSetting `json:"sessionsRetention,omitempty"`
	KeepAllSessions bool `json:"keepAllSessions"`
	Links *[]Link `json:"_links,omitempty"`
}

// NewRetentionSettings instantiates a new RetentionSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetentionSettings(lingeringSnapshotRetentionDisabled bool, keepAllSessions bool) *RetentionSettings {
	this := RetentionSettings{}
	this.LingeringSnapshotRetentionDisabled = lingeringSnapshotRetentionDisabled
	this.KeepAllSessions = keepAllSessions
	return &this
}

// NewRetentionSettingsWithDefaults instantiates a new RetentionSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetentionSettingsWithDefaults() *RetentionSettings {
	this := RetentionSettings{}
	return &this
}

// GetLingeringSnapshotRetentionDisabled returns the LingeringSnapshotRetentionDisabled field value
func (o *RetentionSettings) GetLingeringSnapshotRetentionDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LingeringSnapshotRetentionDisabled
}

// GetLingeringSnapshotRetentionDisabledOk returns a tuple with the LingeringSnapshotRetentionDisabled field value
// and a boolean to check if the value has been set.
func (o *RetentionSettings) GetLingeringSnapshotRetentionDisabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LingeringSnapshotRetentionDisabled, true
}

// SetLingeringSnapshotRetentionDisabled sets field value
func (o *RetentionSettings) SetLingeringSnapshotRetentionDisabled(v bool) {
	o.LingeringSnapshotRetentionDisabled = v
}

// GetLingeringSnapshotRetention returns the LingeringSnapshotRetention field value if set, zero value otherwise.
func (o *RetentionSettings) GetLingeringSnapshotRetention() RetentionSetting {
	if o == nil || o.LingeringSnapshotRetention == nil {
		var ret RetentionSetting
		return ret
	}
	return *o.LingeringSnapshotRetention
}

// GetLingeringSnapshotRetentionOk returns a tuple with the LingeringSnapshotRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionSettings) GetLingeringSnapshotRetentionOk() (*RetentionSetting, bool) {
	if o == nil || o.LingeringSnapshotRetention == nil {
		return nil, false
	}
	return o.LingeringSnapshotRetention, true
}

// HasLingeringSnapshotRetention returns a boolean if a field has been set.
func (o *RetentionSettings) HasLingeringSnapshotRetention() bool {
	if o != nil && o.LingeringSnapshotRetention != nil {
		return true
	}

	return false
}

// SetLingeringSnapshotRetention gets a reference to the given RetentionSetting and assigns it to the LingeringSnapshotRetention field.
func (o *RetentionSettings) SetLingeringSnapshotRetention(v RetentionSetting) {
	o.LingeringSnapshotRetention = &v
}

// GetSessionsRetention returns the SessionsRetention field value if set, zero value otherwise.
func (o *RetentionSettings) GetSessionsRetention() RetentionSetting {
	if o == nil || o.SessionsRetention == nil {
		var ret RetentionSetting
		return ret
	}
	return *o.SessionsRetention
}

// GetSessionsRetentionOk returns a tuple with the SessionsRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionSettings) GetSessionsRetentionOk() (*RetentionSetting, bool) {
	if o == nil || o.SessionsRetention == nil {
		return nil, false
	}
	return o.SessionsRetention, true
}

// HasSessionsRetention returns a boolean if a field has been set.
func (o *RetentionSettings) HasSessionsRetention() bool {
	if o != nil && o.SessionsRetention != nil {
		return true
	}

	return false
}

// SetSessionsRetention gets a reference to the given RetentionSetting and assigns it to the SessionsRetention field.
func (o *RetentionSettings) SetSessionsRetention(v RetentionSetting) {
	o.SessionsRetention = &v
}

// GetKeepAllSessions returns the KeepAllSessions field value
func (o *RetentionSettings) GetKeepAllSessions() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.KeepAllSessions
}

// GetKeepAllSessionsOk returns a tuple with the KeepAllSessions field value
// and a boolean to check if the value has been set.
func (o *RetentionSettings) GetKeepAllSessionsOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeepAllSessions, true
}

// SetKeepAllSessions sets field value
func (o *RetentionSettings) SetKeepAllSessions(v bool) {
	o.KeepAllSessions = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RetentionSettings) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetentionSettings) GetLinksOk() (*[]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RetentionSettings) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *RetentionSettings) SetLinks(v []Link) {
	o.Links = &v
}

func (o RetentionSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["lingeringSnapshotRetentionDisabled"] = o.LingeringSnapshotRetentionDisabled
	}
	if o.LingeringSnapshotRetention != nil {
		toSerialize["lingeringSnapshotRetention"] = o.LingeringSnapshotRetention
	}
	if o.SessionsRetention != nil {
		toSerialize["sessionsRetention"] = o.SessionsRetention
	}
	if true {
		toSerialize["keepAllSessions"] = o.KeepAllSessions
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableRetentionSettings struct {
	value *RetentionSettings
	isSet bool
}

func (v NullableRetentionSettings) Get() *RetentionSettings {
	return v.value
}

func (v *NullableRetentionSettings) Set(val *RetentionSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableRetentionSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableRetentionSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetentionSettings(val *RetentionSettings) *NullableRetentionSettings {
	return &NullableRetentionSettings{value: val, isSet: true}
}

func (v NullableRetentionSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetentionSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



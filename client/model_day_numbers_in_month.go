/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// DayNumbersInMonth the model 'DayNumbersInMonth'
type DayNumbersInMonth string

// List of DayNumbersInMonth
const (
	DAYNUMBERSINMONTH_FIRST DayNumbersInMonth = "First"
	DAYNUMBERSINMONTH_SECOND DayNumbersInMonth = "Second"
	DAYNUMBERSINMONTH_THIRD DayNumbersInMonth = "Third"
	DAYNUMBERSINMONTH_FOURTH DayNumbersInMonth = "Fourth"
	DAYNUMBERSINMONTH_LAST DayNumbersInMonth = "Last"
	DAYNUMBERSINMONTH_ON_DAY DayNumbersInMonth = "OnDay"
)

func (v *DayNumbersInMonth) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DayNumbersInMonth(value)
	for _, existing := range []DayNumbersInMonth{ "First", "Second", "Third", "Fourth", "Last", "OnDay",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DayNumbersInMonth", value)
}

// Ptr returns reference to DayNumbersInMonth value
func (v DayNumbersInMonth) Ptr() *DayNumbersInMonth {
	return &v
}

type NullableDayNumbersInMonth struct {
	value *DayNumbersInMonth
	isSet bool
}

func (v NullableDayNumbersInMonth) Get() *DayNumbersInMonth {
	return v.value
}

func (v *NullableDayNumbersInMonth) Set(val *DayNumbersInMonth) {
	v.value = val
	v.isSet = true
}

func (v NullableDayNumbersInMonth) IsSet() bool {
	return v.isSet
}

func (v *NullableDayNumbersInMonth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDayNumbersInMonth(val *DayNumbersInMonth) *NullableDayNumbersInMonth {
	return &NullableDayNumbersInMonth{value: val, isSet: true}
}

func (v NullableDayNumbersInMonth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDayNumbersInMonth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


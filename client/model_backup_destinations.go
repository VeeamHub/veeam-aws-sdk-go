/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// BackupDestinations the model 'BackupDestinations'
type BackupDestinations string

// List of BackupDestinations
const (
	BACKUPDESTINATIONS_SNAPSHOT BackupDestinations = "Snapshot"
	BACKUPDESTINATIONS_AWS_BLOB BackupDestinations = "AwsBlob"
	BACKUPDESTINATIONS_MANUAL_SNAPSHOT BackupDestinations = "ManualSnapshot"
)

func (v *BackupDestinations) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BackupDestinations(value)
	for _, existing := range []BackupDestinations{ "Snapshot", "AwsBlob", "ManualSnapshot",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BackupDestinations", value)
}

// Ptr returns reference to BackupDestinations value
func (v BackupDestinations) Ptr() *BackupDestinations {
	return &v
}

type NullableBackupDestinations struct {
	value *BackupDestinations
	isSet bool
}

func (v NullableBackupDestinations) Get() *BackupDestinations {
	return v.value
}

func (v *NullableBackupDestinations) Set(val *BackupDestinations) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupDestinations) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupDestinations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupDestinations(val *BackupDestinations) *NullableBackupDestinations {
	return &NullableBackupDestinations{value: val, isSet: true}
}

func (v NullableBackupDestinations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupDestinations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


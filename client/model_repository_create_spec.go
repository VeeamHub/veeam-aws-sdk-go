/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RepositoryCreateSpec struct for RepositoryCreateSpec
type RepositoryCreateSpec struct {
	Name string `json:"name"`
	Description *string `json:"description,omitempty"`
	AmazonAccountId string `json:"amazonAccountId"`
	AmazonBucketId string `json:"amazonBucketId"`
	AmazonStorageFolder string `json:"amazonStorageFolder"`
	Password *string `json:"password,omitempty"`
	Hint *string `json:"hint,omitempty"`
	EnableEncryption bool `json:"enableEncryption"`
}

// NewRepositoryCreateSpec instantiates a new RepositoryCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryCreateSpec(name string, amazonAccountId string, amazonBucketId string, amazonStorageFolder string, enableEncryption bool) *RepositoryCreateSpec {
	this := RepositoryCreateSpec{}
	this.Name = name
	this.AmazonAccountId = amazonAccountId
	this.AmazonBucketId = amazonBucketId
	this.AmazonStorageFolder = amazonStorageFolder
	this.EnableEncryption = enableEncryption
	return &this
}

// NewRepositoryCreateSpecWithDefaults instantiates a new RepositoryCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryCreateSpecWithDefaults() *RepositoryCreateSpec {
	this := RepositoryCreateSpec{}
	return &this
}

// GetName returns the Name field value
func (o *RepositoryCreateSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RepositoryCreateSpec) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RepositoryCreateSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RepositoryCreateSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RepositoryCreateSpec) SetDescription(v string) {
	o.Description = &v
}

// GetAmazonAccountId returns the AmazonAccountId field value
func (o *RepositoryCreateSpec) GetAmazonAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonAccountId
}

// GetAmazonAccountIdOk returns a tuple with the AmazonAccountId field value
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetAmazonAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonAccountId, true
}

// SetAmazonAccountId sets field value
func (o *RepositoryCreateSpec) SetAmazonAccountId(v string) {
	o.AmazonAccountId = v
}

// GetAmazonBucketId returns the AmazonBucketId field value
func (o *RepositoryCreateSpec) GetAmazonBucketId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonBucketId
}

// GetAmazonBucketIdOk returns a tuple with the AmazonBucketId field value
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetAmazonBucketIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonBucketId, true
}

// SetAmazonBucketId sets field value
func (o *RepositoryCreateSpec) SetAmazonBucketId(v string) {
	o.AmazonBucketId = v
}

// GetAmazonStorageFolder returns the AmazonStorageFolder field value
func (o *RepositoryCreateSpec) GetAmazonStorageFolder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonStorageFolder
}

// GetAmazonStorageFolderOk returns a tuple with the AmazonStorageFolder field value
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetAmazonStorageFolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonStorageFolder, true
}

// SetAmazonStorageFolder sets field value
func (o *RepositoryCreateSpec) SetAmazonStorageFolder(v string) {
	o.AmazonStorageFolder = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RepositoryCreateSpec) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RepositoryCreateSpec) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RepositoryCreateSpec) SetPassword(v string) {
	o.Password = &v
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *RepositoryCreateSpec) GetHint() string {
	if o == nil || o.Hint == nil {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetHintOk() (*string, bool) {
	if o == nil || o.Hint == nil {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *RepositoryCreateSpec) HasHint() bool {
	if o != nil && o.Hint != nil {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *RepositoryCreateSpec) SetHint(v string) {
	o.Hint = &v
}

// GetEnableEncryption returns the EnableEncryption field value
func (o *RepositoryCreateSpec) GetEnableEncryption() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableEncryption
}

// GetEnableEncryptionOk returns a tuple with the EnableEncryption field value
// and a boolean to check if the value has been set.
func (o *RepositoryCreateSpec) GetEnableEncryptionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnableEncryption, true
}

// SetEnableEncryption sets field value
func (o *RepositoryCreateSpec) SetEnableEncryption(v bool) {
	o.EnableEncryption = v
}

func (o RepositoryCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["amazonAccountId"] = o.AmazonAccountId
	}
	if true {
		toSerialize["amazonBucketId"] = o.AmazonBucketId
	}
	if true {
		toSerialize["amazonStorageFolder"] = o.AmazonStorageFolder
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Hint != nil {
		toSerialize["hint"] = o.Hint
	}
	if true {
		toSerialize["enableEncryption"] = o.EnableEncryption
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryCreateSpec struct {
	value *RepositoryCreateSpec
	isSet bool
}

func (v NullableRepositoryCreateSpec) Get() *RepositoryCreateSpec {
	return v.value
}

func (v *NullableRepositoryCreateSpec) Set(val *RepositoryCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryCreateSpec(val *RepositoryCreateSpec) *NullableRepositoryCreateSpec {
	return &NullableRepositoryCreateSpec{value: val, isSet: true}
}

func (v NullableRepositoryCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// UsersSortColumns the model 'UsersSortColumns'
type UsersSortColumns string

// List of UsersSortColumns
const (
	USERSSORTCOLUMNS_NAME_ASC UsersSortColumns = "nameAsc"
	USERSSORTCOLUMNS_NAME_DESC UsersSortColumns = "nameDesc"
	USERSSORTCOLUMNS_DESCRIPTION_ASC UsersSortColumns = "descriptionAsc"
	USERSSORTCOLUMNS_DESCRIPTION_DESC UsersSortColumns = "descriptionDesc"
	USERSSORTCOLUMNS_IS_DEFAULT_ASC UsersSortColumns = "isDefaultAsc"
	USERSSORTCOLUMNS_IS_DEFAULT_DESC UsersSortColumns = "isDefaultDesc"
	USERSSORTCOLUMNS_MFA_ENABLED_ASC UsersSortColumns = "mfaEnabledAsc"
	USERSSORTCOLUMNS_MFA_ENABLED_DESC UsersSortColumns = "mfaEnabledDesc"
)

func (v *UsersSortColumns) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UsersSortColumns(value)
	for _, existing := range []UsersSortColumns{ "nameAsc", "nameDesc", "descriptionAsc", "descriptionDesc", "isDefaultAsc", "isDefaultDesc", "mfaEnabledAsc", "mfaEnabledDesc",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UsersSortColumns", value)
}

// Ptr returns reference to UsersSortColumns value
func (v UsersSortColumns) Ptr() *UsersSortColumns {
	return &v
}

type NullableUsersSortColumns struct {
	value *UsersSortColumns
	isSet bool
}

func (v NullableUsersSortColumns) Get() *UsersSortColumns {
	return v.value
}

func (v *NullableUsersSortColumns) Set(val *UsersSortColumns) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersSortColumns) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersSortColumns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersSortColumns(val *UsersSortColumns) *NullableUsersSortColumns {
	return &NullableUsersSortColumns{value: val, isSet: true}
}

func (v NullableUsersSortColumns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersSortColumns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


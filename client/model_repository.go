/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Repository struct for Repository
type Repository struct {
	Id string `json:"id"`
	Name string `json:"name"`
	Description string `json:"description"`
	AmazonAccountId string `json:"amazonAccountId"`
	AmazonStorageFolder string `json:"amazonStorageFolder"`
	AmazonBucketId *string `json:"amazonBucketId,omitempty"`
	Hint *string `json:"hint,omitempty"`
	EnableEncryption bool `json:"enableEncryption"`
	Embedded *RepositoryEmbedded `json:"_embedded,omitempty"`
	Links *[]Link `json:"_links,omitempty"`
}

// NewRepository instantiates a new Repository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepository(id string, name string, description string, amazonAccountId string, amazonStorageFolder string, enableEncryption bool) *Repository {
	this := Repository{}
	this.Id = id
	this.Name = name
	this.Description = description
	this.AmazonAccountId = amazonAccountId
	this.AmazonStorageFolder = amazonStorageFolder
	this.EnableEncryption = enableEncryption
	return &this
}

// NewRepositoryWithDefaults instantiates a new Repository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryWithDefaults() *Repository {
	this := Repository{}
	return &this
}

// GetId returns the Id field value
func (o *Repository) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Repository) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Repository) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Repository) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Repository) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Repository) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Repository) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Repository) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Repository) SetDescription(v string) {
	o.Description = v
}

// GetAmazonAccountId returns the AmazonAccountId field value
func (o *Repository) GetAmazonAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonAccountId
}

// GetAmazonAccountIdOk returns a tuple with the AmazonAccountId field value
// and a boolean to check if the value has been set.
func (o *Repository) GetAmazonAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonAccountId, true
}

// SetAmazonAccountId sets field value
func (o *Repository) SetAmazonAccountId(v string) {
	o.AmazonAccountId = v
}

// GetAmazonStorageFolder returns the AmazonStorageFolder field value
func (o *Repository) GetAmazonStorageFolder() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonStorageFolder
}

// GetAmazonStorageFolderOk returns a tuple with the AmazonStorageFolder field value
// and a boolean to check if the value has been set.
func (o *Repository) GetAmazonStorageFolderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonStorageFolder, true
}

// SetAmazonStorageFolder sets field value
func (o *Repository) SetAmazonStorageFolder(v string) {
	o.AmazonStorageFolder = v
}

// GetAmazonBucketId returns the AmazonBucketId field value if set, zero value otherwise.
func (o *Repository) GetAmazonBucketId() string {
	if o == nil || o.AmazonBucketId == nil {
		var ret string
		return ret
	}
	return *o.AmazonBucketId
}

// GetAmazonBucketIdOk returns a tuple with the AmazonBucketId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repository) GetAmazonBucketIdOk() (*string, bool) {
	if o == nil || o.AmazonBucketId == nil {
		return nil, false
	}
	return o.AmazonBucketId, true
}

// HasAmazonBucketId returns a boolean if a field has been set.
func (o *Repository) HasAmazonBucketId() bool {
	if o != nil && o.AmazonBucketId != nil {
		return true
	}

	return false
}

// SetAmazonBucketId gets a reference to the given string and assigns it to the AmazonBucketId field.
func (o *Repository) SetAmazonBucketId(v string) {
	o.AmazonBucketId = &v
}

// GetHint returns the Hint field value if set, zero value otherwise.
func (o *Repository) GetHint() string {
	if o == nil || o.Hint == nil {
		var ret string
		return ret
	}
	return *o.Hint
}

// GetHintOk returns a tuple with the Hint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repository) GetHintOk() (*string, bool) {
	if o == nil || o.Hint == nil {
		return nil, false
	}
	return o.Hint, true
}

// HasHint returns a boolean if a field has been set.
func (o *Repository) HasHint() bool {
	if o != nil && o.Hint != nil {
		return true
	}

	return false
}

// SetHint gets a reference to the given string and assigns it to the Hint field.
func (o *Repository) SetHint(v string) {
	o.Hint = &v
}

// GetEnableEncryption returns the EnableEncryption field value
func (o *Repository) GetEnableEncryption() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableEncryption
}

// GetEnableEncryptionOk returns a tuple with the EnableEncryption field value
// and a boolean to check if the value has been set.
func (o *Repository) GetEnableEncryptionOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.EnableEncryption, true
}

// SetEnableEncryption sets field value
func (o *Repository) SetEnableEncryption(v bool) {
	o.EnableEncryption = v
}

// GetEmbedded returns the Embedded field value if set, zero value otherwise.
func (o *Repository) GetEmbedded() RepositoryEmbedded {
	if o == nil || o.Embedded == nil {
		var ret RepositoryEmbedded
		return ret
	}
	return *o.Embedded
}

// GetEmbeddedOk returns a tuple with the Embedded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repository) GetEmbeddedOk() (*RepositoryEmbedded, bool) {
	if o == nil || o.Embedded == nil {
		return nil, false
	}
	return o.Embedded, true
}

// HasEmbedded returns a boolean if a field has been set.
func (o *Repository) HasEmbedded() bool {
	if o != nil && o.Embedded != nil {
		return true
	}

	return false
}

// SetEmbedded gets a reference to the given RepositoryEmbedded and assigns it to the Embedded field.
func (o *Repository) SetEmbedded(v RepositoryEmbedded) {
	o.Embedded = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Repository) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Repository) GetLinksOk() (*[]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Repository) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *Repository) SetLinks(v []Link) {
	o.Links = &v
}

func (o Repository) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["amazonAccountId"] = o.AmazonAccountId
	}
	if true {
		toSerialize["amazonStorageFolder"] = o.AmazonStorageFolder
	}
	if o.AmazonBucketId != nil {
		toSerialize["amazonBucketId"] = o.AmazonBucketId
	}
	if o.Hint != nil {
		toSerialize["hint"] = o.Hint
	}
	if true {
		toSerialize["enableEncryption"] = o.EnableEncryption
	}
	if o.Embedded != nil {
		toSerialize["_embedded"] = o.Embedded
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableRepository struct {
	value *Repository
	isSet bool
}

func (v NullableRepository) Get() *Repository {
	return v.value
}

func (v *NullableRepository) Set(val *Repository) {
	v.value = val
	v.isSet = true
}

func (v NullableRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepository(val *Repository) *NullableRepository {
	return &NullableRepository{value: val, isSet: true}
}

func (v NullableRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



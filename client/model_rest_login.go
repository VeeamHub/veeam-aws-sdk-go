/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// RESTLogin struct for RESTLogin
type RESTLogin struct {
	AccessToken  *string `json:"access_token,omitempty"`
	TokenType    *string `json:"token_type,omitempty"`
	RefreshToken *string `json:"refresh_token,omitempty"`
	ExpiresIn    *int32  `json:"expires_in,omitempty"`
	Issued       *Time   `json:".issued,omitempty"`
	Expires      *Time   `json:".expires,omitempty"`
	Username     *string `json:"username,omitempty"`
	RoleName     *string `json:"roleName,omitempty"`
	MfaEnabled   *bool   `json:"mfa_enabled,omitempty"`
	MfaToken     *string `json:"mfa_token,omitempty"`
}

// NewRESTLogin instantiates a new RESTLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRESTLogin() *RESTLogin {
	this := RESTLogin{}
	return &this
}

// NewRESTLoginWithDefaults instantiates a new RESTLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRESTLoginWithDefaults() *RESTLogin {
	this := RESTLogin{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *RESTLogin) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *RESTLogin) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *RESTLogin) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetTokenType returns the TokenType field value if set, zero value otherwise.
func (o *RESTLogin) GetTokenType() string {
	if o == nil || o.TokenType == nil {
		var ret string
		return ret
	}
	return *o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetTokenTypeOk() (*string, bool) {
	if o == nil || o.TokenType == nil {
		return nil, false
	}
	return o.TokenType, true
}

// HasTokenType returns a boolean if a field has been set.
func (o *RESTLogin) HasTokenType() bool {
	if o != nil && o.TokenType != nil {
		return true
	}

	return false
}

// SetTokenType gets a reference to the given string and assigns it to the TokenType field.
func (o *RESTLogin) SetTokenType(v string) {
	o.TokenType = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *RESTLogin) GetRefreshToken() string {
	if o == nil || o.RefreshToken == nil {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetRefreshTokenOk() (*string, bool) {
	if o == nil || o.RefreshToken == nil {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *RESTLogin) HasRefreshToken() bool {
	if o != nil && o.RefreshToken != nil {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *RESTLogin) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *RESTLogin) GetExpiresIn() int32 {
	if o == nil || o.ExpiresIn == nil {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetExpiresInOk() (*int32, bool) {
	if o == nil || o.ExpiresIn == nil {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *RESTLogin) HasExpiresIn() bool {
	if o != nil && o.ExpiresIn != nil {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *RESTLogin) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

// GetIssued returns the Issued field value if set, zero value otherwise.
func (o *RESTLogin) GetIssued() Time {
	if o == nil || o.Issued == nil {
		var ret Time
		return ret
	}
	return *o.Issued
}

// GetIssuedOk returns a tuple with the Issued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetIssuedOk() (*Time, bool) {
	if o == nil || o.Issued == nil {
		return nil, false
	}
	return o.Issued, true
}

// HasIssued returns a boolean if a field has been set.
func (o *RESTLogin) HasIssued() bool {
	if o != nil && o.Issued != nil {
		return true
	}

	return false
}

// SetIssued gets a reference to the given time.Time and assigns it to the Issued field.
func (o *RESTLogin) SetIssued(v Time) {
	o.Issued = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *RESTLogin) GetExpires() Time {
	if o == nil || o.Expires == nil {
		var ret Time
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetExpiresOk() (*Time, bool) {
	if o == nil || o.Expires == nil {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *RESTLogin) HasExpires() bool {
	if o != nil && o.Expires != nil {
		return true
	}

	return false
}

// SetExpires gets a reference to the given time.Time and assigns it to the Expires field.
func (o *RESTLogin) SetExpires(v Time) {
	o.Expires = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RESTLogin) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RESTLogin) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RESTLogin) SetUsername(v string) {
	o.Username = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *RESTLogin) GetRoleName() string {
	if o == nil || o.RoleName == nil {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetRoleNameOk() (*string, bool) {
	if o == nil || o.RoleName == nil {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *RESTLogin) HasRoleName() bool {
	if o != nil && o.RoleName != nil {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *RESTLogin) SetRoleName(v string) {
	o.RoleName = &v
}

// GetMfaEnabled returns the MfaEnabled field value if set, zero value otherwise.
func (o *RESTLogin) GetMfaEnabled() bool {
	if o == nil || o.MfaEnabled == nil {
		var ret bool
		return ret
	}
	return *o.MfaEnabled
}

// GetMfaEnabledOk returns a tuple with the MfaEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetMfaEnabledOk() (*bool, bool) {
	if o == nil || o.MfaEnabled == nil {
		return nil, false
	}
	return o.MfaEnabled, true
}

// HasMfaEnabled returns a boolean if a field has been set.
func (o *RESTLogin) HasMfaEnabled() bool {
	if o != nil && o.MfaEnabled != nil {
		return true
	}

	return false
}

// SetMfaEnabled gets a reference to the given bool and assigns it to the MfaEnabled field.
func (o *RESTLogin) SetMfaEnabled(v bool) {
	o.MfaEnabled = &v
}

// GetMfaToken returns the MfaToken field value if set, zero value otherwise.
func (o *RESTLogin) GetMfaToken() string {
	if o == nil || o.MfaToken == nil {
		var ret string
		return ret
	}
	return *o.MfaToken
}

// GetMfaTokenOk returns a tuple with the MfaToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RESTLogin) GetMfaTokenOk() (*string, bool) {
	if o == nil || o.MfaToken == nil {
		return nil, false
	}
	return o.MfaToken, true
}

// HasMfaToken returns a boolean if a field has been set.
func (o *RESTLogin) HasMfaToken() bool {
	if o != nil && o.MfaToken != nil {
		return true
	}

	return false
}

// SetMfaToken gets a reference to the given string and assigns it to the MfaToken field.
func (o *RESTLogin) SetMfaToken(v string) {
	o.MfaToken = &v
}

func (o RESTLogin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessToken != nil {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.TokenType != nil {
		toSerialize["token_type"] = o.TokenType
	}
	if o.RefreshToken != nil {
		toSerialize["refresh_token"] = o.RefreshToken
	}
	if o.ExpiresIn != nil {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if o.Issued != nil {
		toSerialize[".issued"] = o.Issued
	}
	if o.Expires != nil {
		toSerialize[".expires"] = o.Expires
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.RoleName != nil {
		toSerialize["roleName"] = o.RoleName
	}
	if o.MfaEnabled != nil {
		toSerialize["mfa_enabled"] = o.MfaEnabled
	}
	if o.MfaToken != nil {
		toSerialize["mfa_token"] = o.MfaToken
	}
	return json.Marshal(toSerialize)
}

type NullableRESTLogin struct {
	value *RESTLogin
	isSet bool
}

func (v NullableRESTLogin) Get() *RESTLogin {
	return v.value
}

func (v *NullableRESTLogin) Set(val *RESTLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableRESTLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableRESTLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRESTLogin(val *RESTLogin) *NullableRESTLogin {
	return &NullableRESTLogin{value: val, isSet: true}
}

func (v NullableRESTLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRESTLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

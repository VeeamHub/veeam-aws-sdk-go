/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BackupSettingsExportModel struct for BackupSettingsExportModel
type BackupSettingsExportModel struct {
	TargetRepositoryName string `json:"targetRepositoryName"`
}

// NewBackupSettingsExportModel instantiates a new BackupSettingsExportModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupSettingsExportModel(targetRepositoryName string) *BackupSettingsExportModel {
	this := BackupSettingsExportModel{}
	this.TargetRepositoryName = targetRepositoryName
	return &this
}

// NewBackupSettingsExportModelWithDefaults instantiates a new BackupSettingsExportModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupSettingsExportModelWithDefaults() *BackupSettingsExportModel {
	this := BackupSettingsExportModel{}
	return &this
}

// GetTargetRepositoryName returns the TargetRepositoryName field value
func (o *BackupSettingsExportModel) GetTargetRepositoryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetRepositoryName
}

// GetTargetRepositoryNameOk returns a tuple with the TargetRepositoryName field value
// and a boolean to check if the value has been set.
func (o *BackupSettingsExportModel) GetTargetRepositoryNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetRepositoryName, true
}

// SetTargetRepositoryName sets field value
func (o *BackupSettingsExportModel) SetTargetRepositoryName(v string) {
	o.TargetRepositoryName = v
}

func (o BackupSettingsExportModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["targetRepositoryName"] = o.TargetRepositoryName
	}
	return json.Marshal(toSerialize)
}

type NullableBackupSettingsExportModel struct {
	value *BackupSettingsExportModel
	isSet bool
}

func (v NullableBackupSettingsExportModel) Get() *BackupSettingsExportModel {
	return v.value
}

func (v *NullableBackupSettingsExportModel) Set(val *BackupSettingsExportModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupSettingsExportModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupSettingsExportModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupSettingsExportModel(val *BackupSettingsExportModel) *NullableBackupSettingsExportModel {
	return &NullableBackupSettingsExportModel{value: val, isSet: true}
}

func (v NullableBackupSettingsExportModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupSettingsExportModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



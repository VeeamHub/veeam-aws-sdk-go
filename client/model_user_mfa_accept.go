/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// UserMfaAccept struct for UserMfaAccept
type UserMfaAccept struct {
	Code string `json:"code"`
	Token string `json:"token"`
}

// NewUserMfaAccept instantiates a new UserMfaAccept object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserMfaAccept(code string, token string) *UserMfaAccept {
	this := UserMfaAccept{}
	this.Code = code
	this.Token = token
	return &this
}

// NewUserMfaAcceptWithDefaults instantiates a new UserMfaAccept object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserMfaAcceptWithDefaults() *UserMfaAccept {
	this := UserMfaAccept{}
	return &this
}

// GetCode returns the Code field value
func (o *UserMfaAccept) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *UserMfaAccept) GetCodeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *UserMfaAccept) SetCode(v string) {
	o.Code = v
}

// GetToken returns the Token field value
func (o *UserMfaAccept) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *UserMfaAccept) GetTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *UserMfaAccept) SetToken(v string) {
	o.Token = v
}

func (o UserMfaAccept) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableUserMfaAccept struct {
	value *UserMfaAccept
	isSet bool
}

func (v NullableUserMfaAccept) Get() *UserMfaAccept {
	return v.value
}

func (v *NullableUserMfaAccept) Set(val *UserMfaAccept) {
	v.value = val
	v.isSet = true
}

func (v NullableUserMfaAccept) IsSet() bool {
	return v.isSet
}

func (v *NullableUserMfaAccept) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserMfaAccept(val *UserMfaAccept) *NullableUserMfaAccept {
	return &NullableUserMfaAccept{value: val, isSet: true}
}

func (v NullableUserMfaAccept) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserMfaAccept) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



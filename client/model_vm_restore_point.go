/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// VmRestorePoint struct for VmRestorePoint
type VmRestorePoint struct {
	Id                 string           `json:"id"`
	BackupId           string           `json:"backupId"`
	JobType            JobTypes         `json:"jobType"`
	PointInTime        Time             `json:"pointInTime"`
	BackupSizeBytes    int64            `json:"backupSizeBytes"`
	Volumes            []VmBackupVolume `json:"volumes"`
	RegionId           *string          `json:"regionId,omitempty"`
	AvailabilityZoneId *string          `json:"availabilityZoneId,omitempty"`
	Links              *[]Link          `json:"_links,omitempty"`
}

// NewVmRestorePoint instantiates a new VmRestorePoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmRestorePoint(id string, backupId string, jobType JobTypes, pointInTime Time, backupSizeBytes int64, volumes []VmBackupVolume) *VmRestorePoint {
	this := VmRestorePoint{}
	this.Id = id
	this.BackupId = backupId
	this.JobType = jobType
	this.PointInTime = pointInTime
	this.BackupSizeBytes = backupSizeBytes
	this.Volumes = volumes
	return &this
}

// NewVmRestorePointWithDefaults instantiates a new VmRestorePoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmRestorePointWithDefaults() *VmRestorePoint {
	this := VmRestorePoint{}
	return &this
}

// GetId returns the Id field value
func (o *VmRestorePoint) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VmRestorePoint) SetId(v string) {
	o.Id = v
}

// GetBackupId returns the BackupId field value
func (o *VmRestorePoint) GetBackupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackupId
}

// GetBackupIdOk returns a tuple with the BackupId field value
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetBackupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupId, true
}

// SetBackupId sets field value
func (o *VmRestorePoint) SetBackupId(v string) {
	o.BackupId = v
}

// GetJobType returns the JobType field value
func (o *VmRestorePoint) GetJobType() JobTypes {
	if o == nil {
		var ret JobTypes
		return ret
	}

	return o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetJobTypeOk() (*JobTypes, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobType, true
}

// SetJobType sets field value
func (o *VmRestorePoint) SetJobType(v JobTypes) {
	o.JobType = v
}

// GetPointInTime returns the PointInTime field value
func (o *VmRestorePoint) GetPointInTime() Time {
	if o == nil {
		var ret Time
		return ret
	}

	return o.PointInTime
}

// GetPointInTimeOk returns a tuple with the PointInTime field value
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetPointInTimeOk() (*Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PointInTime, true
}

// SetPointInTime sets field value
func (o *VmRestorePoint) SetPointInTime(v Time) {
	o.PointInTime = v
}

// GetBackupSizeBytes returns the BackupSizeBytes field value
func (o *VmRestorePoint) GetBackupSizeBytes() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BackupSizeBytes
}

// GetBackupSizeBytesOk returns a tuple with the BackupSizeBytes field value
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetBackupSizeBytesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackupSizeBytes, true
}

// SetBackupSizeBytes sets field value
func (o *VmRestorePoint) SetBackupSizeBytes(v int64) {
	o.BackupSizeBytes = v
}

// GetVolumes returns the Volumes field value
func (o *VmRestorePoint) GetVolumes() []VmBackupVolume {
	if o == nil {
		var ret []VmBackupVolume
		return ret
	}

	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetVolumesOk() (*[]VmBackupVolume, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Volumes, true
}

// SetVolumes sets field value
func (o *VmRestorePoint) SetVolumes(v []VmBackupVolume) {
	o.Volumes = v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *VmRestorePoint) GetRegionId() string {
	if o == nil || o.RegionId == nil {
		var ret string
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetRegionIdOk() (*string, bool) {
	if o == nil || o.RegionId == nil {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *VmRestorePoint) HasRegionId() bool {
	if o != nil && o.RegionId != nil {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given string and assigns it to the RegionId field.
func (o *VmRestorePoint) SetRegionId(v string) {
	o.RegionId = &v
}

// GetAvailabilityZoneId returns the AvailabilityZoneId field value if set, zero value otherwise.
func (o *VmRestorePoint) GetAvailabilityZoneId() string {
	if o == nil || o.AvailabilityZoneId == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityZoneId
}

// GetAvailabilityZoneIdOk returns a tuple with the AvailabilityZoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetAvailabilityZoneIdOk() (*string, bool) {
	if o == nil || o.AvailabilityZoneId == nil {
		return nil, false
	}
	return o.AvailabilityZoneId, true
}

// HasAvailabilityZoneId returns a boolean if a field has been set.
func (o *VmRestorePoint) HasAvailabilityZoneId() bool {
	if o != nil && o.AvailabilityZoneId != nil {
		return true
	}

	return false
}

// SetAvailabilityZoneId gets a reference to the given string and assigns it to the AvailabilityZoneId field.
func (o *VmRestorePoint) SetAvailabilityZoneId(v string) {
	o.AvailabilityZoneId = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *VmRestorePoint) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmRestorePoint) GetLinksOk() (*[]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *VmRestorePoint) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *VmRestorePoint) SetLinks(v []Link) {
	o.Links = &v
}

func (o VmRestorePoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["backupId"] = o.BackupId
	}
	if true {
		toSerialize["jobType"] = o.JobType
	}
	if true {
		toSerialize["pointInTime"] = o.PointInTime
	}
	if true {
		toSerialize["backupSizeBytes"] = o.BackupSizeBytes
	}
	if true {
		toSerialize["volumes"] = o.Volumes
	}
	if o.RegionId != nil {
		toSerialize["regionId"] = o.RegionId
	}
	if o.AvailabilityZoneId != nil {
		toSerialize["availabilityZoneId"] = o.AvailabilityZoneId
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableVmRestorePoint struct {
	value *VmRestorePoint
	isSet bool
}

func (v NullableVmRestorePoint) Get() *VmRestorePoint {
	return v.value
}

func (v *NullableVmRestorePoint) Set(val *VmRestorePoint) {
	v.value = val
	v.isSet = true
}

func (v NullableVmRestorePoint) IsSet() bool {
	return v.isSet
}

func (v *NullableVmRestorePoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmRestorePoint(val *VmRestorePoint) *NullableVmRestorePoint {
	return &NullableVmRestorePoint{value: val, isSet: true}
}

func (v NullableVmRestorePoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmRestorePoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

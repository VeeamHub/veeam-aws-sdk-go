/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// LicenseAgreementAcceptResult struct for LicenseAgreementAcceptResult
type LicenseAgreementAcceptResult struct {
	Accepted bool `json:"accepted"`
}

// NewLicenseAgreementAcceptResult instantiates a new LicenseAgreementAcceptResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseAgreementAcceptResult(accepted bool) *LicenseAgreementAcceptResult {
	this := LicenseAgreementAcceptResult{}
	this.Accepted = accepted
	return &this
}

// NewLicenseAgreementAcceptResultWithDefaults instantiates a new LicenseAgreementAcceptResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseAgreementAcceptResultWithDefaults() *LicenseAgreementAcceptResult {
	this := LicenseAgreementAcceptResult{}
	return &this
}

// GetAccepted returns the Accepted field value
func (o *LicenseAgreementAcceptResult) GetAccepted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Accepted
}

// GetAcceptedOk returns a tuple with the Accepted field value
// and a boolean to check if the value has been set.
func (o *LicenseAgreementAcceptResult) GetAcceptedOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Accepted, true
}

// SetAccepted sets field value
func (o *LicenseAgreementAcceptResult) SetAccepted(v bool) {
	o.Accepted = v
}

func (o LicenseAgreementAcceptResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accepted"] = o.Accepted
	}
	return json.Marshal(toSerialize)
}

type NullableLicenseAgreementAcceptResult struct {
	value *LicenseAgreementAcceptResult
	isSet bool
}

func (v NullableLicenseAgreementAcceptResult) Get() *LicenseAgreementAcceptResult {
	return v.value
}

func (v *NullableLicenseAgreementAcceptResult) Set(val *LicenseAgreementAcceptResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseAgreementAcceptResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseAgreementAcceptResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseAgreementAcceptResult(val *LicenseAgreementAcceptResult) *NullableLicenseAgreementAcceptResult {
	return &NullableLicenseAgreementAcceptResult{value: val, isSet: true}
}

func (v NullableLicenseAgreementAcceptResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseAgreementAcceptResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



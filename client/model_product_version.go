/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ProductVersion struct for ProductVersion
type ProductVersion struct {
	About string `json:"about"`
	Version string `json:"version"`
}

// NewProductVersion instantiates a new ProductVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductVersion(about string, version string) *ProductVersion {
	this := ProductVersion{}
	this.About = about
	this.Version = version
	return &this
}

// NewProductVersionWithDefaults instantiates a new ProductVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductVersionWithDefaults() *ProductVersion {
	this := ProductVersion{}
	return &this
}

// GetAbout returns the About field value
func (o *ProductVersion) GetAbout() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.About
}

// GetAboutOk returns a tuple with the About field value
// and a boolean to check if the value has been set.
func (o *ProductVersion) GetAboutOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.About, true
}

// SetAbout sets field value
func (o *ProductVersion) SetAbout(v string) {
	o.About = v
}

// GetVersion returns the Version field value
func (o *ProductVersion) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ProductVersion) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ProductVersion) SetVersion(v string) {
	o.Version = v
}

func (o ProductVersion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["about"] = o.About
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableProductVersion struct {
	value *ProductVersion
	isSet bool
}

func (v NullableProductVersion) Get() *ProductVersion {
	return v.value
}

func (v *NullableProductVersion) Set(val *ProductVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableProductVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableProductVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductVersion(val *ProductVersion) *NullableProductVersion {
	return &NullableProductVersion{value: val, isSet: true}
}

func (v NullableProductVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



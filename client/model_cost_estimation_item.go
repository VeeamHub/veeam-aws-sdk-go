/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CostEstimationItem struct for CostEstimationItem
type CostEstimationItem struct {
	VirtualMachineId string `json:"virtualMachineId"`
	VirtualMachineName string `json:"virtualMachineName"`
	SnapshotCost *float64 `json:"snapshotCost,omitempty"`
	ReplicaCost *float64 `json:"replicaCost,omitempty"`
	BackupCost *float64 `json:"backupCost,omitempty"`
	TrafficCost float64 `json:"trafficCost"`
	TransactionCost float64 `json:"transactionCost"`
	TotalCost float64 `json:"totalCost"`
}

// NewCostEstimationItem instantiates a new CostEstimationItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCostEstimationItem(virtualMachineId string, virtualMachineName string, trafficCost float64, transactionCost float64, totalCost float64) *CostEstimationItem {
	this := CostEstimationItem{}
	this.VirtualMachineId = virtualMachineId
	this.VirtualMachineName = virtualMachineName
	this.TrafficCost = trafficCost
	this.TransactionCost = transactionCost
	this.TotalCost = totalCost
	return &this
}

// NewCostEstimationItemWithDefaults instantiates a new CostEstimationItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCostEstimationItemWithDefaults() *CostEstimationItem {
	this := CostEstimationItem{}
	return &this
}

// GetVirtualMachineId returns the VirtualMachineId field value
func (o *CostEstimationItem) GetVirtualMachineId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualMachineId
}

// GetVirtualMachineIdOk returns a tuple with the VirtualMachineId field value
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetVirtualMachineIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualMachineId, true
}

// SetVirtualMachineId sets field value
func (o *CostEstimationItem) SetVirtualMachineId(v string) {
	o.VirtualMachineId = v
}

// GetVirtualMachineName returns the VirtualMachineName field value
func (o *CostEstimationItem) GetVirtualMachineName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualMachineName
}

// GetVirtualMachineNameOk returns a tuple with the VirtualMachineName field value
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetVirtualMachineNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VirtualMachineName, true
}

// SetVirtualMachineName sets field value
func (o *CostEstimationItem) SetVirtualMachineName(v string) {
	o.VirtualMachineName = v
}

// GetSnapshotCost returns the SnapshotCost field value if set, zero value otherwise.
func (o *CostEstimationItem) GetSnapshotCost() float64 {
	if o == nil || o.SnapshotCost == nil {
		var ret float64
		return ret
	}
	return *o.SnapshotCost
}

// GetSnapshotCostOk returns a tuple with the SnapshotCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetSnapshotCostOk() (*float64, bool) {
	if o == nil || o.SnapshotCost == nil {
		return nil, false
	}
	return o.SnapshotCost, true
}

// HasSnapshotCost returns a boolean if a field has been set.
func (o *CostEstimationItem) HasSnapshotCost() bool {
	if o != nil && o.SnapshotCost != nil {
		return true
	}

	return false
}

// SetSnapshotCost gets a reference to the given float64 and assigns it to the SnapshotCost field.
func (o *CostEstimationItem) SetSnapshotCost(v float64) {
	o.SnapshotCost = &v
}

// GetReplicaCost returns the ReplicaCost field value if set, zero value otherwise.
func (o *CostEstimationItem) GetReplicaCost() float64 {
	if o == nil || o.ReplicaCost == nil {
		var ret float64
		return ret
	}
	return *o.ReplicaCost
}

// GetReplicaCostOk returns a tuple with the ReplicaCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetReplicaCostOk() (*float64, bool) {
	if o == nil || o.ReplicaCost == nil {
		return nil, false
	}
	return o.ReplicaCost, true
}

// HasReplicaCost returns a boolean if a field has been set.
func (o *CostEstimationItem) HasReplicaCost() bool {
	if o != nil && o.ReplicaCost != nil {
		return true
	}

	return false
}

// SetReplicaCost gets a reference to the given float64 and assigns it to the ReplicaCost field.
func (o *CostEstimationItem) SetReplicaCost(v float64) {
	o.ReplicaCost = &v
}

// GetBackupCost returns the BackupCost field value if set, zero value otherwise.
func (o *CostEstimationItem) GetBackupCost() float64 {
	if o == nil || o.BackupCost == nil {
		var ret float64
		return ret
	}
	return *o.BackupCost
}

// GetBackupCostOk returns a tuple with the BackupCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetBackupCostOk() (*float64, bool) {
	if o == nil || o.BackupCost == nil {
		return nil, false
	}
	return o.BackupCost, true
}

// HasBackupCost returns a boolean if a field has been set.
func (o *CostEstimationItem) HasBackupCost() bool {
	if o != nil && o.BackupCost != nil {
		return true
	}

	return false
}

// SetBackupCost gets a reference to the given float64 and assigns it to the BackupCost field.
func (o *CostEstimationItem) SetBackupCost(v float64) {
	o.BackupCost = &v
}

// GetTrafficCost returns the TrafficCost field value
func (o *CostEstimationItem) GetTrafficCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TrafficCost
}

// GetTrafficCostOk returns a tuple with the TrafficCost field value
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetTrafficCostOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TrafficCost, true
}

// SetTrafficCost sets field value
func (o *CostEstimationItem) SetTrafficCost(v float64) {
	o.TrafficCost = v
}

// GetTransactionCost returns the TransactionCost field value
func (o *CostEstimationItem) GetTransactionCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TransactionCost
}

// GetTransactionCostOk returns a tuple with the TransactionCost field value
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetTransactionCostOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TransactionCost, true
}

// SetTransactionCost sets field value
func (o *CostEstimationItem) SetTransactionCost(v float64) {
	o.TransactionCost = v
}

// GetTotalCost returns the TotalCost field value
func (o *CostEstimationItem) GetTotalCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalCost
}

// GetTotalCostOk returns a tuple with the TotalCost field value
// and a boolean to check if the value has been set.
func (o *CostEstimationItem) GetTotalCostOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TotalCost, true
}

// SetTotalCost sets field value
func (o *CostEstimationItem) SetTotalCost(v float64) {
	o.TotalCost = v
}

func (o CostEstimationItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["virtualMachineId"] = o.VirtualMachineId
	}
	if true {
		toSerialize["virtualMachineName"] = o.VirtualMachineName
	}
	if o.SnapshotCost != nil {
		toSerialize["snapshotCost"] = o.SnapshotCost
	}
	if o.ReplicaCost != nil {
		toSerialize["replicaCost"] = o.ReplicaCost
	}
	if o.BackupCost != nil {
		toSerialize["backupCost"] = o.BackupCost
	}
	if true {
		toSerialize["trafficCost"] = o.TrafficCost
	}
	if true {
		toSerialize["transactionCost"] = o.TransactionCost
	}
	if true {
		toSerialize["totalCost"] = o.TotalCost
	}
	return json.Marshal(toSerialize)
}

type NullableCostEstimationItem struct {
	value *CostEstimationItem
	isSet bool
}

func (v NullableCostEstimationItem) Get() *CostEstimationItem {
	return v.value
}

func (v *NullableCostEstimationItem) Set(val *CostEstimationItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCostEstimationItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCostEstimationItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCostEstimationItem(val *CostEstimationItem) *NullableCostEstimationItem {
	return &NullableCostEstimationItem{value: val, isSet: true}
}

func (v NullableCostEstimationItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCostEstimationItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



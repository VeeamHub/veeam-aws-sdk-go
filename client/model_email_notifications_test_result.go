/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// EmailNotificationsTestResult struct for EmailNotificationsTestResult
type EmailNotificationsTestResult struct {
	Success bool `json:"success"`
	Message *string `json:"message,omitempty"`
}

// NewEmailNotificationsTestResult instantiates a new EmailNotificationsTestResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmailNotificationsTestResult(success bool) *EmailNotificationsTestResult {
	this := EmailNotificationsTestResult{}
	this.Success = success
	return &this
}

// NewEmailNotificationsTestResultWithDefaults instantiates a new EmailNotificationsTestResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmailNotificationsTestResultWithDefaults() *EmailNotificationsTestResult {
	this := EmailNotificationsTestResult{}
	return &this
}

// GetSuccess returns the Success field value
func (o *EmailNotificationsTestResult) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *EmailNotificationsTestResult) GetSuccessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *EmailNotificationsTestResult) SetSuccess(v bool) {
	o.Success = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *EmailNotificationsTestResult) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmailNotificationsTestResult) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *EmailNotificationsTestResult) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *EmailNotificationsTestResult) SetMessage(v string) {
	o.Message = &v
}

func (o EmailNotificationsTestResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["success"] = o.Success
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableEmailNotificationsTestResult struct {
	value *EmailNotificationsTestResult
	isSet bool
}

func (v NullableEmailNotificationsTestResult) Get() *EmailNotificationsTestResult {
	return v.value
}

func (v *NullableEmailNotificationsTestResult) Set(val *EmailNotificationsTestResult) {
	v.value = val
	v.isSet = true
}

func (v NullableEmailNotificationsTestResult) IsSet() bool {
	return v.isSet
}

func (v *NullableEmailNotificationsTestResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmailNotificationsTestResult(val *EmailNotificationsTestResult) *NullableEmailNotificationsTestResult {
	return &NullableEmailNotificationsTestResult{value: val, isSet: true}
}

func (v NullableEmailNotificationsTestResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmailNotificationsTestResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



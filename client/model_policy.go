/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// Policy struct for Policy
type Policy struct {
	Id string `json:"id"`
	SnapshotSettings *PolicySnapshotSettings `json:"snapshotSettings,omitempty"`
	ReplicaSettings *PolicyReplicaSettings `json:"replicaSettings,omitempty"`
	BackupSettings *PolicyBackupSettings `json:"backupSettings,omitempty"`
	RegionIds []string `json:"regionIds"`
	SelectedItems *PolicyBackupItems `json:"selectedItems,omitempty"`
	ExcludedItems *PolicyBackupItems `json:"excludedItems,omitempty"`
	ScheduleSettings *ScheduleSettings `json:"scheduleSettings,omitempty"`
	Name string `json:"name"`
	Description string `json:"description"`
	Priority int64 `json:"priority"`
	AmazonAccountId string `json:"amazonAccountId"`
	RetrySettings *RetrySettings `json:"retrySettings,omitempty"`
	PolicyNotificationSettings *PolicyNotificationSettings `json:"policyNotificationSettings,omitempty"`
	IsEnabled bool `json:"isEnabled"`
	BackupType PolicySelectionTypes `json:"backupType"`
	CreatedBy *string `json:"createdBy,omitempty"`
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	LastPolicySessionStatus *SessionStatuses `json:"lastPolicySessionStatus,omitempty"`
	Warning *string `json:"warning,omitempty"`
	Usn *int64 `json:"usn,omitempty"`
	EmbeddedResources *PolicyEmbeddedResources `json:"_embeddedResources,omitempty"`
	Links *[]Link `json:"_links,omitempty"`
}

// NewPolicy instantiates a new Policy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicy(id string, regionIds []string, name string, description string, priority int64, amazonAccountId string, isEnabled bool, backupType PolicySelectionTypes) *Policy {
	this := Policy{}
	this.Id = id
	this.RegionIds = regionIds
	this.Name = name
	this.Description = description
	this.Priority = priority
	this.AmazonAccountId = amazonAccountId
	this.IsEnabled = isEnabled
	this.BackupType = backupType
	return &this
}

// NewPolicyWithDefaults instantiates a new Policy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyWithDefaults() *Policy {
	this := Policy{}
	return &this
}

// GetId returns the Id field value
func (o *Policy) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Policy) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Policy) SetId(v string) {
	o.Id = v
}

// GetSnapshotSettings returns the SnapshotSettings field value if set, zero value otherwise.
func (o *Policy) GetSnapshotSettings() PolicySnapshotSettings {
	if o == nil || o.SnapshotSettings == nil {
		var ret PolicySnapshotSettings
		return ret
	}
	return *o.SnapshotSettings
}

// GetSnapshotSettingsOk returns a tuple with the SnapshotSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetSnapshotSettingsOk() (*PolicySnapshotSettings, bool) {
	if o == nil || o.SnapshotSettings == nil {
		return nil, false
	}
	return o.SnapshotSettings, true
}

// HasSnapshotSettings returns a boolean if a field has been set.
func (o *Policy) HasSnapshotSettings() bool {
	if o != nil && o.SnapshotSettings != nil {
		return true
	}

	return false
}

// SetSnapshotSettings gets a reference to the given PolicySnapshotSettings and assigns it to the SnapshotSettings field.
func (o *Policy) SetSnapshotSettings(v PolicySnapshotSettings) {
	o.SnapshotSettings = &v
}

// GetReplicaSettings returns the ReplicaSettings field value if set, zero value otherwise.
func (o *Policy) GetReplicaSettings() PolicyReplicaSettings {
	if o == nil || o.ReplicaSettings == nil {
		var ret PolicyReplicaSettings
		return ret
	}
	return *o.ReplicaSettings
}

// GetReplicaSettingsOk returns a tuple with the ReplicaSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetReplicaSettingsOk() (*PolicyReplicaSettings, bool) {
	if o == nil || o.ReplicaSettings == nil {
		return nil, false
	}
	return o.ReplicaSettings, true
}

// HasReplicaSettings returns a boolean if a field has been set.
func (o *Policy) HasReplicaSettings() bool {
	if o != nil && o.ReplicaSettings != nil {
		return true
	}

	return false
}

// SetReplicaSettings gets a reference to the given PolicyReplicaSettings and assigns it to the ReplicaSettings field.
func (o *Policy) SetReplicaSettings(v PolicyReplicaSettings) {
	o.ReplicaSettings = &v
}

// GetBackupSettings returns the BackupSettings field value if set, zero value otherwise.
func (o *Policy) GetBackupSettings() PolicyBackupSettings {
	if o == nil || o.BackupSettings == nil {
		var ret PolicyBackupSettings
		return ret
	}
	return *o.BackupSettings
}

// GetBackupSettingsOk returns a tuple with the BackupSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetBackupSettingsOk() (*PolicyBackupSettings, bool) {
	if o == nil || o.BackupSettings == nil {
		return nil, false
	}
	return o.BackupSettings, true
}

// HasBackupSettings returns a boolean if a field has been set.
func (o *Policy) HasBackupSettings() bool {
	if o != nil && o.BackupSettings != nil {
		return true
	}

	return false
}

// SetBackupSettings gets a reference to the given PolicyBackupSettings and assigns it to the BackupSettings field.
func (o *Policy) SetBackupSettings(v PolicyBackupSettings) {
	o.BackupSettings = &v
}

// GetRegionIds returns the RegionIds field value
func (o *Policy) GetRegionIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RegionIds
}

// GetRegionIdsOk returns a tuple with the RegionIds field value
// and a boolean to check if the value has been set.
func (o *Policy) GetRegionIdsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RegionIds, true
}

// SetRegionIds sets field value
func (o *Policy) SetRegionIds(v []string) {
	o.RegionIds = v
}

// GetSelectedItems returns the SelectedItems field value if set, zero value otherwise.
func (o *Policy) GetSelectedItems() PolicyBackupItems {
	if o == nil || o.SelectedItems == nil {
		var ret PolicyBackupItems
		return ret
	}
	return *o.SelectedItems
}

// GetSelectedItemsOk returns a tuple with the SelectedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetSelectedItemsOk() (*PolicyBackupItems, bool) {
	if o == nil || o.SelectedItems == nil {
		return nil, false
	}
	return o.SelectedItems, true
}

// HasSelectedItems returns a boolean if a field has been set.
func (o *Policy) HasSelectedItems() bool {
	if o != nil && o.SelectedItems != nil {
		return true
	}

	return false
}

// SetSelectedItems gets a reference to the given PolicyBackupItems and assigns it to the SelectedItems field.
func (o *Policy) SetSelectedItems(v PolicyBackupItems) {
	o.SelectedItems = &v
}

// GetExcludedItems returns the ExcludedItems field value if set, zero value otherwise.
func (o *Policy) GetExcludedItems() PolicyBackupItems {
	if o == nil || o.ExcludedItems == nil {
		var ret PolicyBackupItems
		return ret
	}
	return *o.ExcludedItems
}

// GetExcludedItemsOk returns a tuple with the ExcludedItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetExcludedItemsOk() (*PolicyBackupItems, bool) {
	if o == nil || o.ExcludedItems == nil {
		return nil, false
	}
	return o.ExcludedItems, true
}

// HasExcludedItems returns a boolean if a field has been set.
func (o *Policy) HasExcludedItems() bool {
	if o != nil && o.ExcludedItems != nil {
		return true
	}

	return false
}

// SetExcludedItems gets a reference to the given PolicyBackupItems and assigns it to the ExcludedItems field.
func (o *Policy) SetExcludedItems(v PolicyBackupItems) {
	o.ExcludedItems = &v
}

// GetScheduleSettings returns the ScheduleSettings field value if set, zero value otherwise.
func (o *Policy) GetScheduleSettings() ScheduleSettings {
	if o == nil || o.ScheduleSettings == nil {
		var ret ScheduleSettings
		return ret
	}
	return *o.ScheduleSettings
}

// GetScheduleSettingsOk returns a tuple with the ScheduleSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetScheduleSettingsOk() (*ScheduleSettings, bool) {
	if o == nil || o.ScheduleSettings == nil {
		return nil, false
	}
	return o.ScheduleSettings, true
}

// HasScheduleSettings returns a boolean if a field has been set.
func (o *Policy) HasScheduleSettings() bool {
	if o != nil && o.ScheduleSettings != nil {
		return true
	}

	return false
}

// SetScheduleSettings gets a reference to the given ScheduleSettings and assigns it to the ScheduleSettings field.
func (o *Policy) SetScheduleSettings(v ScheduleSettings) {
	o.ScheduleSettings = &v
}

// GetName returns the Name field value
func (o *Policy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Policy) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Policy) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *Policy) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *Policy) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *Policy) SetDescription(v string) {
	o.Description = v
}

// GetPriority returns the Priority field value
func (o *Policy) GetPriority() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *Policy) GetPriorityOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *Policy) SetPriority(v int64) {
	o.Priority = v
}

// GetAmazonAccountId returns the AmazonAccountId field value
func (o *Policy) GetAmazonAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmazonAccountId
}

// GetAmazonAccountIdOk returns a tuple with the AmazonAccountId field value
// and a boolean to check if the value has been set.
func (o *Policy) GetAmazonAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AmazonAccountId, true
}

// SetAmazonAccountId sets field value
func (o *Policy) SetAmazonAccountId(v string) {
	o.AmazonAccountId = v
}

// GetRetrySettings returns the RetrySettings field value if set, zero value otherwise.
func (o *Policy) GetRetrySettings() RetrySettings {
	if o == nil || o.RetrySettings == nil {
		var ret RetrySettings
		return ret
	}
	return *o.RetrySettings
}

// GetRetrySettingsOk returns a tuple with the RetrySettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetRetrySettingsOk() (*RetrySettings, bool) {
	if o == nil || o.RetrySettings == nil {
		return nil, false
	}
	return o.RetrySettings, true
}

// HasRetrySettings returns a boolean if a field has been set.
func (o *Policy) HasRetrySettings() bool {
	if o != nil && o.RetrySettings != nil {
		return true
	}

	return false
}

// SetRetrySettings gets a reference to the given RetrySettings and assigns it to the RetrySettings field.
func (o *Policy) SetRetrySettings(v RetrySettings) {
	o.RetrySettings = &v
}

// GetPolicyNotificationSettings returns the PolicyNotificationSettings field value if set, zero value otherwise.
func (o *Policy) GetPolicyNotificationSettings() PolicyNotificationSettings {
	if o == nil || o.PolicyNotificationSettings == nil {
		var ret PolicyNotificationSettings
		return ret
	}
	return *o.PolicyNotificationSettings
}

// GetPolicyNotificationSettingsOk returns a tuple with the PolicyNotificationSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetPolicyNotificationSettingsOk() (*PolicyNotificationSettings, bool) {
	if o == nil || o.PolicyNotificationSettings == nil {
		return nil, false
	}
	return o.PolicyNotificationSettings, true
}

// HasPolicyNotificationSettings returns a boolean if a field has been set.
func (o *Policy) HasPolicyNotificationSettings() bool {
	if o != nil && o.PolicyNotificationSettings != nil {
		return true
	}

	return false
}

// SetPolicyNotificationSettings gets a reference to the given PolicyNotificationSettings and assigns it to the PolicyNotificationSettings field.
func (o *Policy) SetPolicyNotificationSettings(v PolicyNotificationSettings) {
	o.PolicyNotificationSettings = &v
}

// GetIsEnabled returns the IsEnabled field value
func (o *Policy) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *Policy) GetIsEnabledOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *Policy) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetBackupType returns the BackupType field value
func (o *Policy) GetBackupType() PolicySelectionTypes {
	if o == nil {
		var ret PolicySelectionTypes
		return ret
	}

	return o.BackupType
}

// GetBackupTypeOk returns a tuple with the BackupType field value
// and a boolean to check if the value has been set.
func (o *Policy) GetBackupTypeOk() (*PolicySelectionTypes, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackupType, true
}

// SetBackupType sets field value
func (o *Policy) SetBackupType(v PolicySelectionTypes) {
	o.BackupType = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *Policy) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *Policy) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *Policy) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *Policy) GetModifiedBy() string {
	if o == nil || o.ModifiedBy == nil {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetModifiedByOk() (*string, bool) {
	if o == nil || o.ModifiedBy == nil {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *Policy) HasModifiedBy() bool {
	if o != nil && o.ModifiedBy != nil {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *Policy) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetLastPolicySessionStatus returns the LastPolicySessionStatus field value if set, zero value otherwise.
func (o *Policy) GetLastPolicySessionStatus() SessionStatuses {
	if o == nil || o.LastPolicySessionStatus == nil {
		var ret SessionStatuses
		return ret
	}
	return *o.LastPolicySessionStatus
}

// GetLastPolicySessionStatusOk returns a tuple with the LastPolicySessionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetLastPolicySessionStatusOk() (*SessionStatuses, bool) {
	if o == nil || o.LastPolicySessionStatus == nil {
		return nil, false
	}
	return o.LastPolicySessionStatus, true
}

// HasLastPolicySessionStatus returns a boolean if a field has been set.
func (o *Policy) HasLastPolicySessionStatus() bool {
	if o != nil && o.LastPolicySessionStatus != nil {
		return true
	}

	return false
}

// SetLastPolicySessionStatus gets a reference to the given SessionStatuses and assigns it to the LastPolicySessionStatus field.
func (o *Policy) SetLastPolicySessionStatus(v SessionStatuses) {
	o.LastPolicySessionStatus = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *Policy) GetWarning() string {
	if o == nil || o.Warning == nil {
		var ret string
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetWarningOk() (*string, bool) {
	if o == nil || o.Warning == nil {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *Policy) HasWarning() bool {
	if o != nil && o.Warning != nil {
		return true
	}

	return false
}

// SetWarning gets a reference to the given string and assigns it to the Warning field.
func (o *Policy) SetWarning(v string) {
	o.Warning = &v
}

// GetUsn returns the Usn field value if set, zero value otherwise.
func (o *Policy) GetUsn() int64 {
	if o == nil || o.Usn == nil {
		var ret int64
		return ret
	}
	return *o.Usn
}

// GetUsnOk returns a tuple with the Usn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetUsnOk() (*int64, bool) {
	if o == nil || o.Usn == nil {
		return nil, false
	}
	return o.Usn, true
}

// HasUsn returns a boolean if a field has been set.
func (o *Policy) HasUsn() bool {
	if o != nil && o.Usn != nil {
		return true
	}

	return false
}

// SetUsn gets a reference to the given int64 and assigns it to the Usn field.
func (o *Policy) SetUsn(v int64) {
	o.Usn = &v
}

// GetEmbeddedResources returns the EmbeddedResources field value if set, zero value otherwise.
func (o *Policy) GetEmbeddedResources() PolicyEmbeddedResources {
	if o == nil || o.EmbeddedResources == nil {
		var ret PolicyEmbeddedResources
		return ret
	}
	return *o.EmbeddedResources
}

// GetEmbeddedResourcesOk returns a tuple with the EmbeddedResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetEmbeddedResourcesOk() (*PolicyEmbeddedResources, bool) {
	if o == nil || o.EmbeddedResources == nil {
		return nil, false
	}
	return o.EmbeddedResources, true
}

// HasEmbeddedResources returns a boolean if a field has been set.
func (o *Policy) HasEmbeddedResources() bool {
	if o != nil && o.EmbeddedResources != nil {
		return true
	}

	return false
}

// SetEmbeddedResources gets a reference to the given PolicyEmbeddedResources and assigns it to the EmbeddedResources field.
func (o *Policy) SetEmbeddedResources(v PolicyEmbeddedResources) {
	o.EmbeddedResources = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Policy) GetLinks() []Link {
	if o == nil || o.Links == nil {
		var ret []Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policy) GetLinksOk() (*[]Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Policy) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *Policy) SetLinks(v []Link) {
	o.Links = &v
}

func (o Policy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.SnapshotSettings != nil {
		toSerialize["snapshotSettings"] = o.SnapshotSettings
	}
	if o.ReplicaSettings != nil {
		toSerialize["replicaSettings"] = o.ReplicaSettings
	}
	if o.BackupSettings != nil {
		toSerialize["backupSettings"] = o.BackupSettings
	}
	if true {
		toSerialize["regionIds"] = o.RegionIds
	}
	if o.SelectedItems != nil {
		toSerialize["selectedItems"] = o.SelectedItems
	}
	if o.ExcludedItems != nil {
		toSerialize["excludedItems"] = o.ExcludedItems
	}
	if o.ScheduleSettings != nil {
		toSerialize["scheduleSettings"] = o.ScheduleSettings
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["priority"] = o.Priority
	}
	if true {
		toSerialize["amazonAccountId"] = o.AmazonAccountId
	}
	if o.RetrySettings != nil {
		toSerialize["retrySettings"] = o.RetrySettings
	}
	if o.PolicyNotificationSettings != nil {
		toSerialize["policyNotificationSettings"] = o.PolicyNotificationSettings
	}
	if true {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if true {
		toSerialize["backupType"] = o.BackupType
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.ModifiedBy != nil {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if o.LastPolicySessionStatus != nil {
		toSerialize["lastPolicySessionStatus"] = o.LastPolicySessionStatus
	}
	if o.Warning != nil {
		toSerialize["warning"] = o.Warning
	}
	if o.Usn != nil {
		toSerialize["usn"] = o.Usn
	}
	if o.EmbeddedResources != nil {
		toSerialize["_embeddedResources"] = o.EmbeddedResources
	}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullablePolicy struct {
	value *Policy
	isSet bool
}

func (v NullablePolicy) Get() *Policy {
	return v.value
}

func (v *NullablePolicy) Set(val *Policy) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicy(val *Policy) *NullablePolicy {
	return &NullablePolicy{value: val, isSet: true}
}

func (v NullablePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



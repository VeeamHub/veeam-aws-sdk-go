/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// DailyScheduleSettings struct for DailyScheduleSettings
type DailyScheduleSettings struct {
	Kind DailyScheduleKinds `json:"kind"`
	RunsPerHour int32 `json:"runsPerHour"`
	Days *[]DaysOfWeek `json:"days,omitempty"`
	SnapshotOptions DailySnapshotScheduleSettings `json:"snapshotOptions"`
	BackupOptions *DailyBackupScheduleSettings `json:"backupOptions,omitempty"`
	ReplicaOptions *DailyReplicaScheduleSettings `json:"replicaOptions,omitempty"`
}

// NewDailyScheduleSettings instantiates a new DailyScheduleSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyScheduleSettings(kind DailyScheduleKinds, runsPerHour int32, snapshotOptions DailySnapshotScheduleSettings) *DailyScheduleSettings {
	this := DailyScheduleSettings{}
	this.Kind = kind
	this.RunsPerHour = runsPerHour
	this.SnapshotOptions = snapshotOptions
	return &this
}

// NewDailyScheduleSettingsWithDefaults instantiates a new DailyScheduleSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyScheduleSettingsWithDefaults() *DailyScheduleSettings {
	this := DailyScheduleSettings{}
	return &this
}

// GetKind returns the Kind field value
func (o *DailyScheduleSettings) GetKind() DailyScheduleKinds {
	if o == nil {
		var ret DailyScheduleKinds
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *DailyScheduleSettings) GetKindOk() (*DailyScheduleKinds, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *DailyScheduleSettings) SetKind(v DailyScheduleKinds) {
	o.Kind = v
}

// GetRunsPerHour returns the RunsPerHour field value
func (o *DailyScheduleSettings) GetRunsPerHour() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RunsPerHour
}

// GetRunsPerHourOk returns a tuple with the RunsPerHour field value
// and a boolean to check if the value has been set.
func (o *DailyScheduleSettings) GetRunsPerHourOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RunsPerHour, true
}

// SetRunsPerHour sets field value
func (o *DailyScheduleSettings) SetRunsPerHour(v int32) {
	o.RunsPerHour = v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *DailyScheduleSettings) GetDays() []DaysOfWeek {
	if o == nil || o.Days == nil {
		var ret []DaysOfWeek
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyScheduleSettings) GetDaysOk() (*[]DaysOfWeek, bool) {
	if o == nil || o.Days == nil {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *DailyScheduleSettings) HasDays() bool {
	if o != nil && o.Days != nil {
		return true
	}

	return false
}

// SetDays gets a reference to the given []DaysOfWeek and assigns it to the Days field.
func (o *DailyScheduleSettings) SetDays(v []DaysOfWeek) {
	o.Days = &v
}

// GetSnapshotOptions returns the SnapshotOptions field value
func (o *DailyScheduleSettings) GetSnapshotOptions() DailySnapshotScheduleSettings {
	if o == nil {
		var ret DailySnapshotScheduleSettings
		return ret
	}

	return o.SnapshotOptions
}

// GetSnapshotOptionsOk returns a tuple with the SnapshotOptions field value
// and a boolean to check if the value has been set.
func (o *DailyScheduleSettings) GetSnapshotOptionsOk() (*DailySnapshotScheduleSettings, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SnapshotOptions, true
}

// SetSnapshotOptions sets field value
func (o *DailyScheduleSettings) SetSnapshotOptions(v DailySnapshotScheduleSettings) {
	o.SnapshotOptions = v
}

// GetBackupOptions returns the BackupOptions field value if set, zero value otherwise.
func (o *DailyScheduleSettings) GetBackupOptions() DailyBackupScheduleSettings {
	if o == nil || o.BackupOptions == nil {
		var ret DailyBackupScheduleSettings
		return ret
	}
	return *o.BackupOptions
}

// GetBackupOptionsOk returns a tuple with the BackupOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyScheduleSettings) GetBackupOptionsOk() (*DailyBackupScheduleSettings, bool) {
	if o == nil || o.BackupOptions == nil {
		return nil, false
	}
	return o.BackupOptions, true
}

// HasBackupOptions returns a boolean if a field has been set.
func (o *DailyScheduleSettings) HasBackupOptions() bool {
	if o != nil && o.BackupOptions != nil {
		return true
	}

	return false
}

// SetBackupOptions gets a reference to the given DailyBackupScheduleSettings and assigns it to the BackupOptions field.
func (o *DailyScheduleSettings) SetBackupOptions(v DailyBackupScheduleSettings) {
	o.BackupOptions = &v
}

// GetReplicaOptions returns the ReplicaOptions field value if set, zero value otherwise.
func (o *DailyScheduleSettings) GetReplicaOptions() DailyReplicaScheduleSettings {
	if o == nil || o.ReplicaOptions == nil {
		var ret DailyReplicaScheduleSettings
		return ret
	}
	return *o.ReplicaOptions
}

// GetReplicaOptionsOk returns a tuple with the ReplicaOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyScheduleSettings) GetReplicaOptionsOk() (*DailyReplicaScheduleSettings, bool) {
	if o == nil || o.ReplicaOptions == nil {
		return nil, false
	}
	return o.ReplicaOptions, true
}

// HasReplicaOptions returns a boolean if a field has been set.
func (o *DailyScheduleSettings) HasReplicaOptions() bool {
	if o != nil && o.ReplicaOptions != nil {
		return true
	}

	return false
}

// SetReplicaOptions gets a reference to the given DailyReplicaScheduleSettings and assigns it to the ReplicaOptions field.
func (o *DailyScheduleSettings) SetReplicaOptions(v DailyReplicaScheduleSettings) {
	o.ReplicaOptions = &v
}

func (o DailyScheduleSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["runsPerHour"] = o.RunsPerHour
	}
	if o.Days != nil {
		toSerialize["days"] = o.Days
	}
	if true {
		toSerialize["snapshotOptions"] = o.SnapshotOptions
	}
	if o.BackupOptions != nil {
		toSerialize["backupOptions"] = o.BackupOptions
	}
	if o.ReplicaOptions != nil {
		toSerialize["replicaOptions"] = o.ReplicaOptions
	}
	return json.Marshal(toSerialize)
}

type NullableDailyScheduleSettings struct {
	value *DailyScheduleSettings
	isSet bool
}

func (v NullableDailyScheduleSettings) Get() *DailyScheduleSettings {
	return v.value
}

func (v *NullableDailyScheduleSettings) Set(val *DailyScheduleSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyScheduleSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyScheduleSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyScheduleSettings(val *DailyScheduleSettings) *NullableDailyScheduleSettings {
	return &NullableDailyScheduleSettings{value: val, isSet: true}
}

func (v NullableDailyScheduleSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyScheduleSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
 * Veeam Backup for AWS public API 1.0
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0-rev0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// PolicyReplicaSettings struct for PolicyReplicaSettings
type PolicyReplicaSettings struct {
	Mapping []ReplicaMapping `json:"mapping"`
	AdditionalTags *[]TagSpec `json:"additionalTags,omitempty"`
	CopyTagsFromVolumeEnabled *bool `json:"copyTagsFromVolumeEnabled,omitempty"`
}

// NewPolicyReplicaSettings instantiates a new PolicyReplicaSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyReplicaSettings(mapping []ReplicaMapping) *PolicyReplicaSettings {
	this := PolicyReplicaSettings{}
	this.Mapping = mapping
	return &this
}

// NewPolicyReplicaSettingsWithDefaults instantiates a new PolicyReplicaSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyReplicaSettingsWithDefaults() *PolicyReplicaSettings {
	this := PolicyReplicaSettings{}
	return &this
}

// GetMapping returns the Mapping field value
func (o *PolicyReplicaSettings) GetMapping() []ReplicaMapping {
	if o == nil {
		var ret []ReplicaMapping
		return ret
	}

	return o.Mapping
}

// GetMappingOk returns a tuple with the Mapping field value
// and a boolean to check if the value has been set.
func (o *PolicyReplicaSettings) GetMappingOk() (*[]ReplicaMapping, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Mapping, true
}

// SetMapping sets field value
func (o *PolicyReplicaSettings) SetMapping(v []ReplicaMapping) {
	o.Mapping = v
}

// GetAdditionalTags returns the AdditionalTags field value if set, zero value otherwise.
func (o *PolicyReplicaSettings) GetAdditionalTags() []TagSpec {
	if o == nil || o.AdditionalTags == nil {
		var ret []TagSpec
		return ret
	}
	return *o.AdditionalTags
}

// GetAdditionalTagsOk returns a tuple with the AdditionalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyReplicaSettings) GetAdditionalTagsOk() (*[]TagSpec, bool) {
	if o == nil || o.AdditionalTags == nil {
		return nil, false
	}
	return o.AdditionalTags, true
}

// HasAdditionalTags returns a boolean if a field has been set.
func (o *PolicyReplicaSettings) HasAdditionalTags() bool {
	if o != nil && o.AdditionalTags != nil {
		return true
	}

	return false
}

// SetAdditionalTags gets a reference to the given []TagSpec and assigns it to the AdditionalTags field.
func (o *PolicyReplicaSettings) SetAdditionalTags(v []TagSpec) {
	o.AdditionalTags = &v
}

// GetCopyTagsFromVolumeEnabled returns the CopyTagsFromVolumeEnabled field value if set, zero value otherwise.
func (o *PolicyReplicaSettings) GetCopyTagsFromVolumeEnabled() bool {
	if o == nil || o.CopyTagsFromVolumeEnabled == nil {
		var ret bool
		return ret
	}
	return *o.CopyTagsFromVolumeEnabled
}

// GetCopyTagsFromVolumeEnabledOk returns a tuple with the CopyTagsFromVolumeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyReplicaSettings) GetCopyTagsFromVolumeEnabledOk() (*bool, bool) {
	if o == nil || o.CopyTagsFromVolumeEnabled == nil {
		return nil, false
	}
	return o.CopyTagsFromVolumeEnabled, true
}

// HasCopyTagsFromVolumeEnabled returns a boolean if a field has been set.
func (o *PolicyReplicaSettings) HasCopyTagsFromVolumeEnabled() bool {
	if o != nil && o.CopyTagsFromVolumeEnabled != nil {
		return true
	}

	return false
}

// SetCopyTagsFromVolumeEnabled gets a reference to the given bool and assigns it to the CopyTagsFromVolumeEnabled field.
func (o *PolicyReplicaSettings) SetCopyTagsFromVolumeEnabled(v bool) {
	o.CopyTagsFromVolumeEnabled = &v
}

func (o PolicyReplicaSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mapping"] = o.Mapping
	}
	if o.AdditionalTags != nil {
		toSerialize["additionalTags"] = o.AdditionalTags
	}
	if o.CopyTagsFromVolumeEnabled != nil {
		toSerialize["copyTagsFromVolumeEnabled"] = o.CopyTagsFromVolumeEnabled
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyReplicaSettings struct {
	value *PolicyReplicaSettings
	isSet bool
}

func (v NullablePolicyReplicaSettings) Get() *PolicyReplicaSettings {
	return v.value
}

func (v *NullablePolicyReplicaSettings) Set(val *PolicyReplicaSettings) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyReplicaSettings) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyReplicaSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyReplicaSettings(val *PolicyReplicaSettings) *NullablePolicyReplicaSettings {
	return &NullablePolicyReplicaSettings{value: val, isSet: true}
}

func (v NullablePolicyReplicaSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyReplicaSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


